// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: equipment_commands.proto

package ru.kodos.almaz2.rpc.commands;

public final class EquipmentCommandsClass {
  private EquipmentCommandsClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code almaz2.rpc.commands.StatusInfo}
   */
  public enum StatusInfo
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ERROR_STATUS = 0;</code>
     */
    ERROR_STATUS(0, 0),
    /**
     * <code>OK_STATUS = 1;</code>
     */
    OK_STATUS(1, 1),
    /**
     * <code>PROCESSING_STATUS = 2;</code>
     */
    PROCESSING_STATUS(2, 2),
    ;

    /**
     * <code>ERROR_STATUS = 0;</code>
     */
    public static final int ERROR_STATUS_VALUE = 0;
    /**
     * <code>OK_STATUS = 1;</code>
     */
    public static final int OK_STATUS_VALUE = 1;
    /**
     * <code>PROCESSING_STATUS = 2;</code>
     */
    public static final int PROCESSING_STATUS_VALUE = 2;


    public final int getNumber() { return value; }

    public static StatusInfo valueOf(int value) {
      switch (value) {
        case 0: return ERROR_STATUS;
        case 1: return OK_STATUS;
        case 2: return PROCESSING_STATUS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StatusInfo>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<StatusInfo>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<StatusInfo>() {
            public StatusInfo findValueByNumber(int number) {
              return StatusInfo.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final StatusInfo[] VALUES = values();

    public static StatusInfo valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private StatusInfo(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:almaz2.rpc.commands.StatusInfo)
  }

  /**
   * Protobuf enum {@code almaz2.rpc.commands.LogicalMode}
   */
  public enum LogicalMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MONITORING = 1;</code>
     */
    MONITORING(0, 1),
    /**
     * <code>BLACK_BOX = 2;</code>
     */
    BLACK_BOX(1, 2),
    ;

    /**
     * <code>MONITORING = 1;</code>
     */
    public static final int MONITORING_VALUE = 1;
    /**
     * <code>BLACK_BOX = 2;</code>
     */
    public static final int BLACK_BOX_VALUE = 2;


    public final int getNumber() { return value; }

    public static LogicalMode valueOf(int value) {
      switch (value) {
        case 1: return MONITORING;
        case 2: return BLACK_BOX;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LogicalMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LogicalMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LogicalMode>() {
            public LogicalMode findValueByNumber(int number) {
              return LogicalMode.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.getDescriptor().getEnumTypes().get(1);
    }

    private static final LogicalMode[] VALUES = values();

    public static LogicalMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LogicalMode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:almaz2.rpc.commands.LogicalMode)
  }

  /**
   * Protobuf enum {@code almaz2.rpc.commands.OutState}
   */
  public enum OutState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OUT_STATE_ON = 1;</code>
     */
    OUT_STATE_ON(0, 1),
    /**
     * <code>OUT_STATE_OFF = 2;</code>
     */
    OUT_STATE_OFF(1, 2),
    ;

    /**
     * <code>OUT_STATE_ON = 1;</code>
     */
    public static final int OUT_STATE_ON_VALUE = 1;
    /**
     * <code>OUT_STATE_OFF = 2;</code>
     */
    public static final int OUT_STATE_OFF_VALUE = 2;


    public final int getNumber() { return value; }

    public static OutState valueOf(int value) {
      switch (value) {
        case 1: return OUT_STATE_ON;
        case 2: return OUT_STATE_OFF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OutState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<OutState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OutState>() {
            public OutState findValueByNumber(int number) {
              return OutState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.getDescriptor().getEnumTypes().get(2);
    }

    private static final OutState[] VALUES = values();

    public static OutState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private OutState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:almaz2.rpc.commands.OutState)
  }

  public interface BlackBoxInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 current = 1 [default = 0];
    /**
     * <code>optional uint32 current = 1 [default = 0];</code>
     */
    boolean hasCurrent();
    /**
     * <code>optional uint32 current = 1 [default = 0];</code>
     */
    int getCurrent();

    // optional uint32 total = 2 [default = 0];
    /**
     * <code>optional uint32 total = 2 [default = 0];</code>
     */
    boolean hasTotal();
    /**
     * <code>optional uint32 total = 2 [default = 0];</code>
     */
    int getTotal();

    // optional .almaz2.rpc.commands.StatusInfo status = 3;
    /**
     * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo getStatus();

    // optional uint32 time_get = 4;
    /**
     * <code>optional uint32 time_get = 4;</code>
     */
    boolean hasTimeGet();
    /**
     * <code>optional uint32 time_get = 4;</code>
     */
    int getTimeGet();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.BlackBoxInfo}
   */
  public static final class BlackBoxInfo extends
      com.google.protobuf.GeneratedMessage
      implements BlackBoxInfoOrBuilder {
    // Use BlackBoxInfo.newBuilder() to construct.
    private BlackBoxInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BlackBoxInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BlackBoxInfo defaultInstance;
    public static BlackBoxInfo getDefaultInstance() {
      return defaultInstance;
    }

    public BlackBoxInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BlackBoxInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              current_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              total_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo value = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                status_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timeGet_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_BlackBoxInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_BlackBoxInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<BlackBoxInfo> PARSER =
        new com.google.protobuf.AbstractParser<BlackBoxInfo>() {
      public BlackBoxInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlackBoxInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BlackBoxInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 current = 1 [default = 0];
    public static final int CURRENT_FIELD_NUMBER = 1;
    private int current_;
    /**
     * <code>optional uint32 current = 1 [default = 0];</code>
     */
    public boolean hasCurrent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 current = 1 [default = 0];</code>
     */
    public int getCurrent() {
      return current_;
    }

    // optional uint32 total = 2 [default = 0];
    public static final int TOTAL_FIELD_NUMBER = 2;
    private int total_;
    /**
     * <code>optional uint32 total = 2 [default = 0];</code>
     */
    public boolean hasTotal() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 total = 2 [default = 0];</code>
     */
    public int getTotal() {
      return total_;
    }

    // optional .almaz2.rpc.commands.StatusInfo status = 3;
    public static final int STATUS_FIELD_NUMBER = 3;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo status_;
    /**
     * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo getStatus() {
      return status_;
    }

    // optional uint32 time_get = 4;
    public static final int TIME_GET_FIELD_NUMBER = 4;
    private int timeGet_;
    /**
     * <code>optional uint32 time_get = 4;</code>
     */
    public boolean hasTimeGet() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 time_get = 4;</code>
     */
    public int getTimeGet() {
      return timeGet_;
    }

    private void initFields() {
      current_ = 0;
      total_ = 0;
      status_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo.ERROR_STATUS;
      timeGet_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, current_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, total_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, status_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, timeGet_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, current_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, total_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, status_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, timeGet_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.BlackBoxInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_BlackBoxInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_BlackBoxInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        current_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        total_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo.ERROR_STATUS;
        bitField0_ = (bitField0_ & ~0x00000004);
        timeGet_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_BlackBoxInfo_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.current_ = current_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.total_ = total_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timeGet_ = timeGet_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo.getDefaultInstance()) return this;
        if (other.hasCurrent()) {
          setCurrent(other.getCurrent());
        }
        if (other.hasTotal()) {
          setTotal(other.getTotal());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasTimeGet()) {
          setTimeGet(other.getTimeGet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BlackBoxInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 current = 1 [default = 0];
      private int current_ ;
      /**
       * <code>optional uint32 current = 1 [default = 0];</code>
       */
      public boolean hasCurrent() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 current = 1 [default = 0];</code>
       */
      public int getCurrent() {
        return current_;
      }
      /**
       * <code>optional uint32 current = 1 [default = 0];</code>
       */
      public Builder setCurrent(int value) {
        bitField0_ |= 0x00000001;
        current_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 current = 1 [default = 0];</code>
       */
      public Builder clearCurrent() {
        bitField0_ = (bitField0_ & ~0x00000001);
        current_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 total = 2 [default = 0];
      private int total_ ;
      /**
       * <code>optional uint32 total = 2 [default = 0];</code>
       */
      public boolean hasTotal() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 total = 2 [default = 0];</code>
       */
      public int getTotal() {
        return total_;
      }
      /**
       * <code>optional uint32 total = 2 [default = 0];</code>
       */
      public Builder setTotal(int value) {
        bitField0_ |= 0x00000002;
        total_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 total = 2 [default = 0];</code>
       */
      public Builder clearTotal() {
        bitField0_ = (bitField0_ & ~0x00000002);
        total_ = 0;
        onChanged();
        return this;
      }

      // optional .almaz2.rpc.commands.StatusInfo status = 3;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo status_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo.ERROR_STATUS;
      /**
       * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo getStatus() {
        return status_;
      }
      /**
       * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
       */
      public Builder setStatus(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo.ERROR_STATUS;
        onChanged();
        return this;
      }

      // optional uint32 time_get = 4;
      private int timeGet_ ;
      /**
       * <code>optional uint32 time_get = 4;</code>
       */
      public boolean hasTimeGet() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 time_get = 4;</code>
       */
      public int getTimeGet() {
        return timeGet_;
      }
      /**
       * <code>optional uint32 time_get = 4;</code>
       */
      public Builder setTimeGet(int value) {
        bitField0_ |= 0x00000008;
        timeGet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 time_get = 4;</code>
       */
      public Builder clearTimeGet() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timeGet_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.BlackBoxInfo)
    }

    static {
      defaultInstance = new BlackBoxInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.BlackBoxInfo)
  }

  public interface FirmwareUpdateInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 current = 1 [default = 0];
    /**
     * <code>optional uint32 current = 1 [default = 0];</code>
     */
    boolean hasCurrent();
    /**
     * <code>optional uint32 current = 1 [default = 0];</code>
     */
    int getCurrent();

    // optional uint32 total = 2 [default = 0];
    /**
     * <code>optional uint32 total = 2 [default = 0];</code>
     */
    boolean hasTotal();
    /**
     * <code>optional uint32 total = 2 [default = 0];</code>
     */
    int getTotal();

    // optional .almaz2.rpc.commands.StatusInfo status = 3;
    /**
     * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo getStatus();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.FirmwareUpdateInfo}
   */
  public static final class FirmwareUpdateInfo extends
      com.google.protobuf.GeneratedMessage
      implements FirmwareUpdateInfoOrBuilder {
    // Use FirmwareUpdateInfo.newBuilder() to construct.
    private FirmwareUpdateInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FirmwareUpdateInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FirmwareUpdateInfo defaultInstance;
    public static FirmwareUpdateInfo getDefaultInstance() {
      return defaultInstance;
    }

    public FirmwareUpdateInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FirmwareUpdateInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              current_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              total_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo value = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                status_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_FirmwareUpdateInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_FirmwareUpdateInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<FirmwareUpdateInfo> PARSER =
        new com.google.protobuf.AbstractParser<FirmwareUpdateInfo>() {
      public FirmwareUpdateInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FirmwareUpdateInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FirmwareUpdateInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 current = 1 [default = 0];
    public static final int CURRENT_FIELD_NUMBER = 1;
    private int current_;
    /**
     * <code>optional uint32 current = 1 [default = 0];</code>
     */
    public boolean hasCurrent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 current = 1 [default = 0];</code>
     */
    public int getCurrent() {
      return current_;
    }

    // optional uint32 total = 2 [default = 0];
    public static final int TOTAL_FIELD_NUMBER = 2;
    private int total_;
    /**
     * <code>optional uint32 total = 2 [default = 0];</code>
     */
    public boolean hasTotal() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 total = 2 [default = 0];</code>
     */
    public int getTotal() {
      return total_;
    }

    // optional .almaz2.rpc.commands.StatusInfo status = 3;
    public static final int STATUS_FIELD_NUMBER = 3;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo status_;
    /**
     * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo getStatus() {
      return status_;
    }

    private void initFields() {
      current_ = 0;
      total_ = 0;
      status_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo.ERROR_STATUS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, current_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, total_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, status_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, current_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, total_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, status_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.FirmwareUpdateInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_FirmwareUpdateInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_FirmwareUpdateInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        current_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        total_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo.ERROR_STATUS;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_FirmwareUpdateInfo_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.current_ = current_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.total_ = total_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.getDefaultInstance()) return this;
        if (other.hasCurrent()) {
          setCurrent(other.getCurrent());
        }
        if (other.hasTotal()) {
          setTotal(other.getTotal());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 current = 1 [default = 0];
      private int current_ ;
      /**
       * <code>optional uint32 current = 1 [default = 0];</code>
       */
      public boolean hasCurrent() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 current = 1 [default = 0];</code>
       */
      public int getCurrent() {
        return current_;
      }
      /**
       * <code>optional uint32 current = 1 [default = 0];</code>
       */
      public Builder setCurrent(int value) {
        bitField0_ |= 0x00000001;
        current_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 current = 1 [default = 0];</code>
       */
      public Builder clearCurrent() {
        bitField0_ = (bitField0_ & ~0x00000001);
        current_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 total = 2 [default = 0];
      private int total_ ;
      /**
       * <code>optional uint32 total = 2 [default = 0];</code>
       */
      public boolean hasTotal() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 total = 2 [default = 0];</code>
       */
      public int getTotal() {
        return total_;
      }
      /**
       * <code>optional uint32 total = 2 [default = 0];</code>
       */
      public Builder setTotal(int value) {
        bitField0_ |= 0x00000002;
        total_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 total = 2 [default = 0];</code>
       */
      public Builder clearTotal() {
        bitField0_ = (bitField0_ & ~0x00000002);
        total_ = 0;
        onChanged();
        return this;
      }

      // optional .almaz2.rpc.commands.StatusInfo status = 3;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo status_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo.ERROR_STATUS;
      /**
       * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo getStatus() {
        return status_;
      }
      /**
       * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
       */
      public Builder setStatus(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.StatusInfo status = 3;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.StatusInfo.ERROR_STATUS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.FirmwareUpdateInfo)
    }

    static {
      defaultInstance = new FirmwareUpdateInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.FirmwareUpdateInfo)
  }

  public interface SettingsInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool actual = 1 [default = true];
    /**
     * <code>optional bool actual = 1 [default = true];</code>
     */
    boolean hasActual();
    /**
     * <code>optional bool actual = 1 [default = true];</code>
     */
    boolean getActual();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.SettingsInfo}
   */
  public static final class SettingsInfo extends
      com.google.protobuf.GeneratedMessage
      implements SettingsInfoOrBuilder {
    // Use SettingsInfo.newBuilder() to construct.
    private SettingsInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SettingsInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SettingsInfo defaultInstance;
    public static SettingsInfo getDefaultInstance() {
      return defaultInstance;
    }

    public SettingsInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SettingsInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              actual_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_SettingsInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_SettingsInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<SettingsInfo> PARSER =
        new com.google.protobuf.AbstractParser<SettingsInfo>() {
      public SettingsInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SettingsInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SettingsInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool actual = 1 [default = true];
    public static final int ACTUAL_FIELD_NUMBER = 1;
    private boolean actual_;
    /**
     * <code>optional bool actual = 1 [default = true];</code>
     */
    public boolean hasActual() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool actual = 1 [default = true];</code>
     */
    public boolean getActual() {
      return actual_;
    }

    private void initFields() {
      actual_ = true;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, actual_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, actual_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.SettingsInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_SettingsInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_SettingsInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        actual_ = true;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_SettingsInfo_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.actual_ = actual_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo.getDefaultInstance()) return this;
        if (other.hasActual()) {
          setActual(other.getActual());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SettingsInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool actual = 1 [default = true];
      private boolean actual_ = true;
      /**
       * <code>optional bool actual = 1 [default = true];</code>
       */
      public boolean hasActual() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool actual = 1 [default = true];</code>
       */
      public boolean getActual() {
        return actual_;
      }
      /**
       * <code>optional bool actual = 1 [default = true];</code>
       */
      public Builder setActual(boolean value) {
        bitField0_ |= 0x00000001;
        actual_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool actual = 1 [default = true];</code>
       */
      public Builder clearActual() {
        bitField0_ = (bitField0_ & ~0x00000001);
        actual_ = true;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.SettingsInfo)
    }

    static {
      defaultInstance = new SettingsInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.SettingsInfo)
  }

  public interface GetDeviceInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 placeholder = 1 [default = 0];
    /**
     * <code>optional uint32 placeholder = 1 [default = 0];</code>
     */
    boolean hasPlaceholder();
    /**
     * <code>optional uint32 placeholder = 1 [default = 0];</code>
     */
    int getPlaceholder();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.GetDeviceInfo}
   */
  public static final class GetDeviceInfo extends
      com.google.protobuf.GeneratedMessage
      implements GetDeviceInfoOrBuilder {
    // Use GetDeviceInfo.newBuilder() to construct.
    private GetDeviceInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetDeviceInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetDeviceInfo defaultInstance;
    public static GetDeviceInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GetDeviceInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetDeviceInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              placeholder_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_GetDeviceInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_GetDeviceInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GetDeviceInfo> PARSER =
        new com.google.protobuf.AbstractParser<GetDeviceInfo>() {
      public GetDeviceInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetDeviceInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetDeviceInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 placeholder = 1 [default = 0];
    public static final int PLACEHOLDER_FIELD_NUMBER = 1;
    private int placeholder_;
    /**
     * <code>optional uint32 placeholder = 1 [default = 0];</code>
     */
    public boolean hasPlaceholder() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 placeholder = 1 [default = 0];</code>
     */
    public int getPlaceholder() {
      return placeholder_;
    }

    private void initFields() {
      placeholder_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, placeholder_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, placeholder_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.GetDeviceInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_GetDeviceInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_GetDeviceInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        placeholder_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_GetDeviceInfo_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.placeholder_ = placeholder_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.getDefaultInstance()) return this;
        if (other.hasPlaceholder()) {
          setPlaceholder(other.getPlaceholder());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 placeholder = 1 [default = 0];
      private int placeholder_ ;
      /**
       * <code>optional uint32 placeholder = 1 [default = 0];</code>
       */
      public boolean hasPlaceholder() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 placeholder = 1 [default = 0];</code>
       */
      public int getPlaceholder() {
        return placeholder_;
      }
      /**
       * <code>optional uint32 placeholder = 1 [default = 0];</code>
       */
      public Builder setPlaceholder(int value) {
        bitField0_ |= 0x00000001;
        placeholder_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 placeholder = 1 [default = 0];</code>
       */
      public Builder clearPlaceholder() {
        bitField0_ = (bitField0_ & ~0x00000001);
        placeholder_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.GetDeviceInfo)
    }

    static {
      defaultInstance = new GetDeviceInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.GetDeviceInfo)
  }

  public interface DeviceInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.DeviceInfo}
   *
   * <pre>
   *optional almaz2.domain_objects.equipment_info info = 1;
   * </pre>
   */
  public static final class DeviceInfo extends
      com.google.protobuf.GeneratedMessage
      implements DeviceInfoOrBuilder {
    // Use DeviceInfo.newBuilder() to construct.
    private DeviceInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeviceInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeviceInfo defaultInstance;
    public static DeviceInfo getDefaultInstance() {
      return defaultInstance;
    }

    public DeviceInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeviceInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_DeviceInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_DeviceInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<DeviceInfo> PARSER =
        new com.google.protobuf.AbstractParser<DeviceInfo>() {
      public DeviceInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeviceInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceInfo> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.DeviceInfo}
     *
     * <pre>
     *optional almaz2.domain_objects.equipment_info info = 1;
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_DeviceInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_DeviceInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_DeviceInfo_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.DeviceInfo)
    }

    static {
      defaultInstance = new DeviceInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.DeviceInfo)
  }

  public interface FirmwareUpdateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string firmware_version = 1;
    /**
     * <code>optional string firmware_version = 1;</code>
     */
    boolean hasFirmwareVersion();
    /**
     * <code>optional string firmware_version = 1;</code>
     */
    java.lang.String getFirmwareVersion();
    /**
     * <code>optional string firmware_version = 1;</code>
     */
    com.google.protobuf.ByteString
        getFirmwareVersionBytes();

    // optional bytes firmware = 2;
    /**
     * <code>optional bytes firmware = 2;</code>
     */
    boolean hasFirmware();
    /**
     * <code>optional bytes firmware = 2;</code>
     */
    com.google.protobuf.ByteString getFirmware();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.FirmwareUpdate}
   */
  public static final class FirmwareUpdate extends
      com.google.protobuf.GeneratedMessage
      implements FirmwareUpdateOrBuilder {
    // Use FirmwareUpdate.newBuilder() to construct.
    private FirmwareUpdate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FirmwareUpdate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FirmwareUpdate defaultInstance;
    public static FirmwareUpdate getDefaultInstance() {
      return defaultInstance;
    }

    public FirmwareUpdate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FirmwareUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              firmwareVersion_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              firmware_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_FirmwareUpdate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_FirmwareUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.Builder.class);
    }

    public static com.google.protobuf.Parser<FirmwareUpdate> PARSER =
        new com.google.protobuf.AbstractParser<FirmwareUpdate>() {
      public FirmwareUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FirmwareUpdate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FirmwareUpdate> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string firmware_version = 1;
    public static final int FIRMWARE_VERSION_FIELD_NUMBER = 1;
    private java.lang.Object firmwareVersion_;
    /**
     * <code>optional string firmware_version = 1;</code>
     */
    public boolean hasFirmwareVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string firmware_version = 1;</code>
     */
    public java.lang.String getFirmwareVersion() {
      java.lang.Object ref = firmwareVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          firmwareVersion_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string firmware_version = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFirmwareVersionBytes() {
      java.lang.Object ref = firmwareVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        firmwareVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bytes firmware = 2;
    public static final int FIRMWARE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString firmware_;
    /**
     * <code>optional bytes firmware = 2;</code>
     */
    public boolean hasFirmware() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes firmware = 2;</code>
     */
    public com.google.protobuf.ByteString getFirmware() {
      return firmware_;
    }

    private void initFields() {
      firmwareVersion_ = "";
      firmware_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getFirmwareVersionBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, firmware_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getFirmwareVersionBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, firmware_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.FirmwareUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_FirmwareUpdate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_FirmwareUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        firmwareVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        firmware_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_FirmwareUpdate_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.firmwareVersion_ = firmwareVersion_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.firmware_ = firmware_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.getDefaultInstance()) return this;
        if (other.hasFirmwareVersion()) {
          bitField0_ |= 0x00000001;
          firmwareVersion_ = other.firmwareVersion_;
          onChanged();
        }
        if (other.hasFirmware()) {
          setFirmware(other.getFirmware());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string firmware_version = 1;
      private java.lang.Object firmwareVersion_ = "";
      /**
       * <code>optional string firmware_version = 1;</code>
       */
      public boolean hasFirmwareVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string firmware_version = 1;</code>
       */
      public java.lang.String getFirmwareVersion() {
        java.lang.Object ref = firmwareVersion_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          firmwareVersion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string firmware_version = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFirmwareVersionBytes() {
        java.lang.Object ref = firmwareVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          firmwareVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string firmware_version = 1;</code>
       */
      public Builder setFirmwareVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        firmwareVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string firmware_version = 1;</code>
       */
      public Builder clearFirmwareVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        firmwareVersion_ = getDefaultInstance().getFirmwareVersion();
        onChanged();
        return this;
      }
      /**
       * <code>optional string firmware_version = 1;</code>
       */
      public Builder setFirmwareVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        firmwareVersion_ = value;
        onChanged();
        return this;
      }

      // optional bytes firmware = 2;
      private com.google.protobuf.ByteString firmware_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes firmware = 2;</code>
       */
      public boolean hasFirmware() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes firmware = 2;</code>
       */
      public com.google.protobuf.ByteString getFirmware() {
        return firmware_;
      }
      /**
       * <code>optional bytes firmware = 2;</code>
       */
      public Builder setFirmware(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        firmware_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes firmware = 2;</code>
       */
      public Builder clearFirmware() {
        bitField0_ = (bitField0_ & ~0x00000002);
        firmware_ = getDefaultInstance().getFirmware();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.FirmwareUpdate)
    }

    static {
      defaultInstance = new FirmwareUpdate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.FirmwareUpdate)
  }

  public interface FirmwareBlockOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;</code>
     */
    boolean hasInfo();
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo getInfo();
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfoOrBuilder getInfoOrBuilder();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.FirmwareBlock}
   */
  public static final class FirmwareBlock extends
      com.google.protobuf.GeneratedMessage
      implements FirmwareBlockOrBuilder {
    // Use FirmwareBlock.newBuilder() to construct.
    private FirmwareBlock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FirmwareBlock(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FirmwareBlock defaultInstance;
    public static FirmwareBlock getDefaultInstance() {
      return defaultInstance;
    }

    public FirmwareBlock getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FirmwareBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = info_.toBuilder();
              }
              info_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(info_);
                info_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_FirmwareBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_FirmwareBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.Builder.class);
    }

    public static com.google.protobuf.Parser<FirmwareBlock> PARSER =
        new com.google.protobuf.AbstractParser<FirmwareBlock>() {
      public FirmwareBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FirmwareBlock(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FirmwareBlock> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;
    public static final int INFO_FIELD_NUMBER = 1;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo info_;
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;</code>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo getInfo() {
      return info_;
    }
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfoOrBuilder getInfoOrBuilder() {
      return info_;
    }

    private void initFields() {
      info_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, info_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, info_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.FirmwareBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_FirmwareBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_FirmwareBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (infoBuilder_ == null) {
          info_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.getDefaultInstance();
        } else {
          infoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_FirmwareBlock_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (infoBuilder_ == null) {
          result.info_ = info_;
        } else {
          result.info_ = infoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.getDefaultInstance()) return this;
        if (other.hasInfo()) {
          mergeInfo(other.getInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo info_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfoOrBuilder> infoBuilder_;
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;</code>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo getInfo() {
        if (infoBuilder_ == null) {
          return info_;
        } else {
          return infoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;</code>
       */
      public Builder setInfo(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          info_ = value;
          onChanged();
        } else {
          infoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;</code>
       */
      public Builder setInfo(
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          info_ = builderForValue.build();
          onChanged();
        } else {
          infoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;</code>
       */
      public Builder mergeInfo(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo value) {
        if (infoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              info_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.getDefaultInstance()) {
            info_ =
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.newBuilder(info_).mergeFrom(value).buildPartial();
          } else {
            info_ = value;
          }
          onChanged();
        } else {
          infoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;</code>
       */
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          info_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.getDefaultInstance();
          onChanged();
        } else {
          infoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.Builder getInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfoOrBuilder getInfoOrBuilder() {
        if (infoBuilder_ != null) {
          return infoBuilder_.getMessageOrBuilder();
        } else {
          return info_;
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdateInfo info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfoOrBuilder> 
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          infoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfo.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateInfoOrBuilder>(
                  info_,
                  getParentForChildren(),
                  isClean());
          info_ = null;
        }
        return infoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.FirmwareBlock)
    }

    static {
      defaultInstance = new FirmwareBlock(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.FirmwareBlock)
  }

  public interface SetLogicalModeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .almaz2.rpc.commands.LogicalMode mode = 1;
    /**
     * <code>optional .almaz2.rpc.commands.LogicalMode mode = 1;</code>
     */
    boolean hasMode();
    /**
     * <code>optional .almaz2.rpc.commands.LogicalMode mode = 1;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.LogicalMode getMode();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.SetLogicalMode}
   */
  public static final class SetLogicalMode extends
      com.google.protobuf.GeneratedMessage
      implements SetLogicalModeOrBuilder {
    // Use SetLogicalMode.newBuilder() to construct.
    private SetLogicalMode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SetLogicalMode(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SetLogicalMode defaultInstance;
    public static SetLogicalMode getDefaultInstance() {
      return defaultInstance;
    }

    public SetLogicalMode getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SetLogicalMode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.LogicalMode value = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.LogicalMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                mode_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_SetLogicalMode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_SetLogicalMode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder.class);
    }

    public static com.google.protobuf.Parser<SetLogicalMode> PARSER =
        new com.google.protobuf.AbstractParser<SetLogicalMode>() {
      public SetLogicalMode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetLogicalMode(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SetLogicalMode> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .almaz2.rpc.commands.LogicalMode mode = 1;
    public static final int MODE_FIELD_NUMBER = 1;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.LogicalMode mode_;
    /**
     * <code>optional .almaz2.rpc.commands.LogicalMode mode = 1;</code>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .almaz2.rpc.commands.LogicalMode mode = 1;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.LogicalMode getMode() {
      return mode_;
    }

    private void initFields() {
      mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.LogicalMode.MONITORING;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mode_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mode_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.SetLogicalMode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_SetLogicalMode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_SetLogicalMode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.LogicalMode.MONITORING;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_SetLogicalMode_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mode_ = mode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance()) return this;
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .almaz2.rpc.commands.LogicalMode mode = 1;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.LogicalMode mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.LogicalMode.MONITORING;
      /**
       * <code>optional .almaz2.rpc.commands.LogicalMode mode = 1;</code>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .almaz2.rpc.commands.LogicalMode mode = 1;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.LogicalMode getMode() {
        return mode_;
      }
      /**
       * <code>optional .almaz2.rpc.commands.LogicalMode mode = 1;</code>
       */
      public Builder setMode(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.LogicalMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.LogicalMode mode = 1;</code>
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.LogicalMode.MONITORING;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.SetLogicalMode)
    }

    static {
      defaultInstance = new SetLogicalMode(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.SetLogicalMode)
  }

  public interface SetOutStateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 output = 1;
    /**
     * <code>optional uint32 output = 1;</code>
     */
    boolean hasOutput();
    /**
     * <code>optional uint32 output = 1;</code>
     */
    int getOutput();

    // optional .almaz2.rpc.commands.OutState state = 2;
    /**
     * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
     */
    boolean hasState();
    /**
     * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState getState();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.SetOutState}
   */
  public static final class SetOutState extends
      com.google.protobuf.GeneratedMessage
      implements SetOutStateOrBuilder {
    // Use SetOutState.newBuilder() to construct.
    private SetOutState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SetOutState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SetOutState defaultInstance;
    public static SetOutState getDefaultInstance() {
      return defaultInstance;
    }

    public SetOutState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SetOutState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              output_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState value = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                state_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_SetOutState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_SetOutState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder.class);
    }

    public static com.google.protobuf.Parser<SetOutState> PARSER =
        new com.google.protobuf.AbstractParser<SetOutState>() {
      public SetOutState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetOutState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SetOutState> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 output = 1;
    public static final int OUTPUT_FIELD_NUMBER = 1;
    private int output_;
    /**
     * <code>optional uint32 output = 1;</code>
     */
    public boolean hasOutput() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 output = 1;</code>
     */
    public int getOutput() {
      return output_;
    }

    // optional .almaz2.rpc.commands.OutState state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState state_;
    /**
     * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState getState() {
      return state_;
    }

    private void initFields() {
      output_ = 0;
      state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState.OUT_STATE_ON;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, output_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, state_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, output_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, state_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.SetOutState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_SetOutState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_SetOutState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        output_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState.OUT_STATE_ON;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_SetOutState_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.output_ = output_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.state_ = state_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance()) return this;
        if (other.hasOutput()) {
          setOutput(other.getOutput());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 output = 1;
      private int output_ ;
      /**
       * <code>optional uint32 output = 1;</code>
       */
      public boolean hasOutput() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 output = 1;</code>
       */
      public int getOutput() {
        return output_;
      }
      /**
       * <code>optional uint32 output = 1;</code>
       */
      public Builder setOutput(int value) {
        bitField0_ |= 0x00000001;
        output_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 output = 1;</code>
       */
      public Builder clearOutput() {
        bitField0_ = (bitField0_ & ~0x00000001);
        output_ = 0;
        onChanged();
        return this;
      }

      // optional .almaz2.rpc.commands.OutState state = 2;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState.OUT_STATE_ON;
      /**
       * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState getState() {
        return state_;
      }
      /**
       * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
       */
      public Builder setState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000002);
        state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState.OUT_STATE_ON;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.SetOutState)
    }

    static {
      defaultInstance = new SetOutState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.SetOutState)
  }

  public interface GetOutStateInOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 output = 1;
    /**
     * <code>optional uint32 output = 1;</code>
     */
    boolean hasOutput();
    /**
     * <code>optional uint32 output = 1;</code>
     */
    int getOutput();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.GetOutStateIn}
   *
   * <pre>
   * Запрос установленного состояния устройства.
   * </pre>
   */
  public static final class GetOutStateIn extends
      com.google.protobuf.GeneratedMessage
      implements GetOutStateInOrBuilder {
    // Use GetOutStateIn.newBuilder() to construct.
    private GetOutStateIn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetOutStateIn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetOutStateIn defaultInstance;
    public static GetOutStateIn getDefaultInstance() {
      return defaultInstance;
    }

    public GetOutStateIn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetOutStateIn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              output_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_GetOutStateIn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_GetOutStateIn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.Builder.class);
    }

    public static com.google.protobuf.Parser<GetOutStateIn> PARSER =
        new com.google.protobuf.AbstractParser<GetOutStateIn>() {
      public GetOutStateIn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetOutStateIn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetOutStateIn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 output = 1;
    public static final int OUTPUT_FIELD_NUMBER = 1;
    private int output_;
    /**
     * <code>optional uint32 output = 1;</code>
     */
    public boolean hasOutput() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 output = 1;</code>
     */
    public int getOutput() {
      return output_;
    }

    private void initFields() {
      output_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, output_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, output_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.GetOutStateIn}
     *
     * <pre>
     * Запрос установленного состояния устройства.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateInOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_GetOutStateIn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_GetOutStateIn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        output_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_GetOutStateIn_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.output_ = output_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.getDefaultInstance()) return this;
        if (other.hasOutput()) {
          setOutput(other.getOutput());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 output = 1;
      private int output_ ;
      /**
       * <code>optional uint32 output = 1;</code>
       */
      public boolean hasOutput() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 output = 1;</code>
       */
      public int getOutput() {
        return output_;
      }
      /**
       * <code>optional uint32 output = 1;</code>
       */
      public Builder setOutput(int value) {
        bitField0_ |= 0x00000001;
        output_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 output = 1;</code>
       */
      public Builder clearOutput() {
        bitField0_ = (bitField0_ & ~0x00000001);
        output_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.GetOutStateIn)
    }

    static {
      defaultInstance = new GetOutStateIn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.GetOutStateIn)
  }

  public interface GetOutStateOutOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 output = 1;
    /**
     * <code>optional uint32 output = 1;</code>
     */
    boolean hasOutput();
    /**
     * <code>optional uint32 output = 1;</code>
     */
    int getOutput();

    // optional .almaz2.rpc.commands.OutState state = 2;
    /**
     * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
     */
    boolean hasState();
    /**
     * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState getState();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.GetOutStateOut}
   *
   * <pre>
   * Ответ на запрос установленного состояния устройства.
   * </pre>
   */
  public static final class GetOutStateOut extends
      com.google.protobuf.GeneratedMessage
      implements GetOutStateOutOrBuilder {
    // Use GetOutStateOut.newBuilder() to construct.
    private GetOutStateOut(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GetOutStateOut(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GetOutStateOut defaultInstance;
    public static GetOutStateOut getDefaultInstance() {
      return defaultInstance;
    }

    public GetOutStateOut getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GetOutStateOut(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              output_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState value = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                state_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_GetOutStateOut_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_GetOutStateOut_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.Builder.class);
    }

    public static com.google.protobuf.Parser<GetOutStateOut> PARSER =
        new com.google.protobuf.AbstractParser<GetOutStateOut>() {
      public GetOutStateOut parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetOutStateOut(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GetOutStateOut> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 output = 1;
    public static final int OUTPUT_FIELD_NUMBER = 1;
    private int output_;
    /**
     * <code>optional uint32 output = 1;</code>
     */
    public boolean hasOutput() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 output = 1;</code>
     */
    public int getOutput() {
      return output_;
    }

    // optional .almaz2.rpc.commands.OutState state = 2;
    public static final int STATE_FIELD_NUMBER = 2;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState state_;
    /**
     * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState getState() {
      return state_;
    }

    private void initFields() {
      output_ = 0;
      state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState.OUT_STATE_ON;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, output_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, state_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, output_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, state_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.GetOutStateOut}
     *
     * <pre>
     * Ответ на запрос установленного состояния устройства.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOutOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_GetOutStateOut_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_GetOutStateOut_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        output_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState.OUT_STATE_ON;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_GetOutStateOut_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.output_ = output_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.state_ = state_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.getDefaultInstance()) return this;
        if (other.hasOutput()) {
          setOutput(other.getOutput());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 output = 1;
      private int output_ ;
      /**
       * <code>optional uint32 output = 1;</code>
       */
      public boolean hasOutput() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 output = 1;</code>
       */
      public int getOutput() {
        return output_;
      }
      /**
       * <code>optional uint32 output = 1;</code>
       */
      public Builder setOutput(int value) {
        bitField0_ |= 0x00000001;
        output_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 output = 1;</code>
       */
      public Builder clearOutput() {
        bitField0_ = (bitField0_ & ~0x00000001);
        output_ = 0;
        onChanged();
        return this;
      }

      // optional .almaz2.rpc.commands.OutState state = 2;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState.OUT_STATE_ON;
      /**
       * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState getState() {
        return state_;
      }
      /**
       * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
       */
      public Builder setState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.OutState state = 2;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000002);
        state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.OutState.OUT_STATE_ON;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.GetOutStateOut)
    }

    static {
      defaultInstance = new GetOutStateOut(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.GetOutStateOut)
  }

  public interface ConfirmationCrewStateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .almaz2.rpc.commands.ConfirmationCrewState.CrewState state = 1;
    /**
     * <code>optional .almaz2.rpc.commands.ConfirmationCrewState.CrewState state = 1;</code>
     */
    boolean hasState();
    /**
     * <code>optional .almaz2.rpc.commands.ConfirmationCrewState.CrewState state = 1;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.CrewState getState();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.ConfirmationCrewState}
   *
   * <pre>
   * Команда подтверждения состояния экипажа.
   * </pre>
   */
  public static final class ConfirmationCrewState extends
      com.google.protobuf.GeneratedMessage
      implements ConfirmationCrewStateOrBuilder {
    // Use ConfirmationCrewState.newBuilder() to construct.
    private ConfirmationCrewState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ConfirmationCrewState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ConfirmationCrewState defaultInstance;
    public static ConfirmationCrewState getDefaultInstance() {
      return defaultInstance;
    }

    public ConfirmationCrewState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ConfirmationCrewState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.CrewState value = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.CrewState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                state_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ConfirmationCrewState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ConfirmationCrewState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.Builder.class);
    }

    public static com.google.protobuf.Parser<ConfirmationCrewState> PARSER =
        new com.google.protobuf.AbstractParser<ConfirmationCrewState>() {
      public ConfirmationCrewState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConfirmationCrewState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ConfirmationCrewState> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code almaz2.rpc.commands.ConfirmationCrewState.CrewState}
     */
    public enum CrewState
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CREW_STATE_ARRIVED = 0;</code>
       */
      CREW_STATE_ARRIVED(0, 0),
      /**
       * <code>CREW_STATE_STARTED = 1;</code>
       */
      CREW_STATE_STARTED(1, 1),
      /**
       * <code>CREW_STATE_FREE = 2;</code>
       */
      CREW_STATE_FREE(2, 2),
      /**
       * <code>CREW_STATE_BUSY = 3;</code>
       */
      CREW_STATE_BUSY(3, 3),
      ;

      /**
       * <code>CREW_STATE_ARRIVED = 0;</code>
       */
      public static final int CREW_STATE_ARRIVED_VALUE = 0;
      /**
       * <code>CREW_STATE_STARTED = 1;</code>
       */
      public static final int CREW_STATE_STARTED_VALUE = 1;
      /**
       * <code>CREW_STATE_FREE = 2;</code>
       */
      public static final int CREW_STATE_FREE_VALUE = 2;
      /**
       * <code>CREW_STATE_BUSY = 3;</code>
       */
      public static final int CREW_STATE_BUSY_VALUE = 3;


      public final int getNumber() { return value; }

      public static CrewState valueOf(int value) {
        switch (value) {
          case 0: return CREW_STATE_ARRIVED;
          case 1: return CREW_STATE_STARTED;
          case 2: return CREW_STATE_FREE;
          case 3: return CREW_STATE_BUSY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CrewState>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<CrewState>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CrewState>() {
              public CrewState findValueByNumber(int number) {
                return CrewState.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.getDescriptor().getEnumTypes().get(0);
      }

      private static final CrewState[] VALUES = values();

      public static CrewState valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private CrewState(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:almaz2.rpc.commands.ConfirmationCrewState.CrewState)
    }

    private int bitField0_;
    // optional .almaz2.rpc.commands.ConfirmationCrewState.CrewState state = 1;
    public static final int STATE_FIELD_NUMBER = 1;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.CrewState state_;
    /**
     * <code>optional .almaz2.rpc.commands.ConfirmationCrewState.CrewState state = 1;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .almaz2.rpc.commands.ConfirmationCrewState.CrewState state = 1;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.CrewState getState() {
      return state_;
    }

    private void initFields() {
      state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.CrewState.CREW_STATE_ARRIVED;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, state_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, state_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.ConfirmationCrewState}
     *
     * <pre>
     * Команда подтверждения состояния экипажа.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ConfirmationCrewState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ConfirmationCrewState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.CrewState.CREW_STATE_ARRIVED;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ConfirmationCrewState_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.state_ = state_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.getDefaultInstance()) return this;
        if (other.hasState()) {
          setState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .almaz2.rpc.commands.ConfirmationCrewState.CrewState state = 1;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.CrewState state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.CrewState.CREW_STATE_ARRIVED;
      /**
       * <code>optional .almaz2.rpc.commands.ConfirmationCrewState.CrewState state = 1;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConfirmationCrewState.CrewState state = 1;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.CrewState getState() {
        return state_;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConfirmationCrewState.CrewState state = 1;</code>
       */
      public Builder setState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.CrewState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConfirmationCrewState.CrewState state = 1;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.CrewState.CREW_STATE_ARRIVED;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.ConfirmationCrewState)
    }

    static {
      defaultInstance = new ConfirmationCrewState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.ConfirmationCrewState)
  }

  public interface ReadBlackBoxByTimeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string interface = 1 [default = "TCP"];
    /**
     * <code>optional string interface = 1 [default = "TCP"];</code>
     */
    boolean hasInterface();
    /**
     * <code>optional string interface = 1 [default = "TCP"];</code>
     */
    java.lang.String getInterface();
    /**
     * <code>optional string interface = 1 [default = "TCP"];</code>
     */
    com.google.protobuf.ByteString
        getInterfaceBytes();

    // optional uint32 from_time = 2;
    /**
     * <code>optional uint32 from_time = 2;</code>
     */
    boolean hasFromTime();
    /**
     * <code>optional uint32 from_time = 2;</code>
     */
    int getFromTime();

    // optional uint32 to_time = 3;
    /**
     * <code>optional uint32 to_time = 3;</code>
     */
    boolean hasToTime();
    /**
     * <code>optional uint32 to_time = 3;</code>
     */
    int getToTime();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.ReadBlackBoxByTime}
   *
   * <pre>
   * Команда запроса данных из ЧЯ.
   * </pre>
   */
  public static final class ReadBlackBoxByTime extends
      com.google.protobuf.GeneratedMessage
      implements ReadBlackBoxByTimeOrBuilder {
    // Use ReadBlackBoxByTime.newBuilder() to construct.
    private ReadBlackBoxByTime(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ReadBlackBoxByTime(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ReadBlackBoxByTime defaultInstance;
    public static ReadBlackBoxByTime getDefaultInstance() {
      return defaultInstance;
    }

    public ReadBlackBoxByTime getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ReadBlackBoxByTime(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              interface_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fromTime_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              toTime_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ReadBlackBoxByTime_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ReadBlackBoxByTime_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.Builder.class);
    }

    public static com.google.protobuf.Parser<ReadBlackBoxByTime> PARSER =
        new com.google.protobuf.AbstractParser<ReadBlackBoxByTime>() {
      public ReadBlackBoxByTime parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReadBlackBoxByTime(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ReadBlackBoxByTime> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string interface = 1 [default = "TCP"];
    public static final int INTERFACE_FIELD_NUMBER = 1;
    private java.lang.Object interface_;
    /**
     * <code>optional string interface = 1 [default = "TCP"];</code>
     */
    public boolean hasInterface() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string interface = 1 [default = "TCP"];</code>
     */
    public java.lang.String getInterface() {
      java.lang.Object ref = interface_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          interface_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string interface = 1 [default = "TCP"];</code>
     */
    public com.google.protobuf.ByteString
        getInterfaceBytes() {
      java.lang.Object ref = interface_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        interface_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 from_time = 2;
    public static final int FROM_TIME_FIELD_NUMBER = 2;
    private int fromTime_;
    /**
     * <code>optional uint32 from_time = 2;</code>
     */
    public boolean hasFromTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 from_time = 2;</code>
     */
    public int getFromTime() {
      return fromTime_;
    }

    // optional uint32 to_time = 3;
    public static final int TO_TIME_FIELD_NUMBER = 3;
    private int toTime_;
    /**
     * <code>optional uint32 to_time = 3;</code>
     */
    public boolean hasToTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 to_time = 3;</code>
     */
    public int getToTime() {
      return toTime_;
    }

    private void initFields() {
      interface_ = "TCP";
      fromTime_ = 0;
      toTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getInterfaceBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, fromTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, toTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getInterfaceBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fromTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, toTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.ReadBlackBoxByTime}
     *
     * <pre>
     * Команда запроса данных из ЧЯ.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTimeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ReadBlackBoxByTime_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ReadBlackBoxByTime_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        interface_ = "TCP";
        bitField0_ = (bitField0_ & ~0x00000001);
        fromTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        toTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ReadBlackBoxByTime_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.interface_ = interface_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fromTime_ = fromTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.toTime_ = toTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.getDefaultInstance()) return this;
        if (other.hasInterface()) {
          bitField0_ |= 0x00000001;
          interface_ = other.interface_;
          onChanged();
        }
        if (other.hasFromTime()) {
          setFromTime(other.getFromTime());
        }
        if (other.hasToTime()) {
          setToTime(other.getToTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string interface = 1 [default = "TCP"];
      private java.lang.Object interface_ = "TCP";
      /**
       * <code>optional string interface = 1 [default = "TCP"];</code>
       */
      public boolean hasInterface() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string interface = 1 [default = "TCP"];</code>
       */
      public java.lang.String getInterface() {
        java.lang.Object ref = interface_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          interface_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string interface = 1 [default = "TCP"];</code>
       */
      public com.google.protobuf.ByteString
          getInterfaceBytes() {
        java.lang.Object ref = interface_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          interface_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string interface = 1 [default = "TCP"];</code>
       */
      public Builder setInterface(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        interface_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string interface = 1 [default = "TCP"];</code>
       */
      public Builder clearInterface() {
        bitField0_ = (bitField0_ & ~0x00000001);
        interface_ = getDefaultInstance().getInterface();
        onChanged();
        return this;
      }
      /**
       * <code>optional string interface = 1 [default = "TCP"];</code>
       */
      public Builder setInterfaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        interface_ = value;
        onChanged();
        return this;
      }

      // optional uint32 from_time = 2;
      private int fromTime_ ;
      /**
       * <code>optional uint32 from_time = 2;</code>
       */
      public boolean hasFromTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 from_time = 2;</code>
       */
      public int getFromTime() {
        return fromTime_;
      }
      /**
       * <code>optional uint32 from_time = 2;</code>
       */
      public Builder setFromTime(int value) {
        bitField0_ |= 0x00000002;
        fromTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 from_time = 2;</code>
       */
      public Builder clearFromTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fromTime_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 to_time = 3;
      private int toTime_ ;
      /**
       * <code>optional uint32 to_time = 3;</code>
       */
      public boolean hasToTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 to_time = 3;</code>
       */
      public int getToTime() {
        return toTime_;
      }
      /**
       * <code>optional uint32 to_time = 3;</code>
       */
      public Builder setToTime(int value) {
        bitField0_ |= 0x00000004;
        toTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 to_time = 3;</code>
       */
      public Builder clearToTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        toTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.ReadBlackBoxByTime)
    }

    static {
      defaultInstance = new ReadBlackBoxByTime(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.ReadBlackBoxByTime)
  }

  public interface BreakReadBlackBoxOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 placeholder = 1 [default = 0];
    /**
     * <code>optional uint32 placeholder = 1 [default = 0];</code>
     */
    boolean hasPlaceholder();
    /**
     * <code>optional uint32 placeholder = 1 [default = 0];</code>
     */
    int getPlaceholder();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.BreakReadBlackBox}
   *
   * <pre>
   * Команда прерывания вычитки данных из ЧЯ.
   * </pre>
   */
  public static final class BreakReadBlackBox extends
      com.google.protobuf.GeneratedMessage
      implements BreakReadBlackBoxOrBuilder {
    // Use BreakReadBlackBox.newBuilder() to construct.
    private BreakReadBlackBox(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BreakReadBlackBox(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BreakReadBlackBox defaultInstance;
    public static BreakReadBlackBox getDefaultInstance() {
      return defaultInstance;
    }

    public BreakReadBlackBox getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BreakReadBlackBox(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              placeholder_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_BreakReadBlackBox_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_BreakReadBlackBox_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.Builder.class);
    }

    public static com.google.protobuf.Parser<BreakReadBlackBox> PARSER =
        new com.google.protobuf.AbstractParser<BreakReadBlackBox>() {
      public BreakReadBlackBox parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BreakReadBlackBox(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BreakReadBlackBox> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 placeholder = 1 [default = 0];
    public static final int PLACEHOLDER_FIELD_NUMBER = 1;
    private int placeholder_;
    /**
     * <code>optional uint32 placeholder = 1 [default = 0];</code>
     */
    public boolean hasPlaceholder() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 placeholder = 1 [default = 0];</code>
     */
    public int getPlaceholder() {
      return placeholder_;
    }

    private void initFields() {
      placeholder_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, placeholder_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, placeholder_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.BreakReadBlackBox}
     *
     * <pre>
     * Команда прерывания вычитки данных из ЧЯ.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBoxOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_BreakReadBlackBox_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_BreakReadBlackBox_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        placeholder_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_BreakReadBlackBox_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.placeholder_ = placeholder_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.getDefaultInstance()) return this;
        if (other.hasPlaceholder()) {
          setPlaceholder(other.getPlaceholder());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 placeholder = 1 [default = 0];
      private int placeholder_ ;
      /**
       * <code>optional uint32 placeholder = 1 [default = 0];</code>
       */
      public boolean hasPlaceholder() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 placeholder = 1 [default = 0];</code>
       */
      public int getPlaceholder() {
        return placeholder_;
      }
      /**
       * <code>optional uint32 placeholder = 1 [default = 0];</code>
       */
      public Builder setPlaceholder(int value) {
        bitField0_ |= 0x00000001;
        placeholder_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 placeholder = 1 [default = 0];</code>
       */
      public Builder clearPlaceholder() {
        bitField0_ = (bitField0_ & ~0x00000001);
        placeholder_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.BreakReadBlackBox)
    }

    static {
      defaultInstance = new BreakReadBlackBox(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.BreakReadBlackBox)
  }

  public interface ConditionLifeSignalOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 max_t = 1;
    /**
     * <code>optional uint32 max_t = 1;</code>
     */
    boolean hasMaxT();
    /**
     * <code>optional uint32 max_t = 1;</code>
     */
    int getMaxT();

    // optional uint32 min_t = 2;
    /**
     * <code>optional uint32 min_t = 2;</code>
     */
    boolean hasMinT();
    /**
     * <code>optional uint32 min_t = 2;</code>
     */
    int getMinT();

    // optional uint32 move = 3;
    /**
     * <code>optional uint32 move = 3;</code>
     */
    boolean hasMove();
    /**
     * <code>optional uint32 move = 3;</code>
     */
    int getMove();

    // optional uint32 speed = 4;
    /**
     * <code>optional uint32 speed = 4;</code>
     */
    boolean hasSpeed();
    /**
     * <code>optional uint32 speed = 4;</code>
     */
    int getSpeed();

    // optional uint32 course = 5;
    /**
     * <code>optional uint32 course = 5;</code>
     */
    boolean hasCourse();
    /**
     * <code>optional uint32 course = 5;</code>
     */
    int getCourse();

    // optional uint32 mileage = 6;
    /**
     * <code>optional uint32 mileage = 6;</code>
     */
    boolean hasMileage();
    /**
     * <code>optional uint32 mileage = 6;</code>
     */
    int getMileage();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.ConditionLifeSignal}
   *
   * <pre>
   * Настройка режима формирования периодического сигнала.
   * </pre>
   */
  public static final class ConditionLifeSignal extends
      com.google.protobuf.GeneratedMessage
      implements ConditionLifeSignalOrBuilder {
    // Use ConditionLifeSignal.newBuilder() to construct.
    private ConditionLifeSignal(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ConditionLifeSignal(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ConditionLifeSignal defaultInstance;
    public static ConditionLifeSignal getDefaultInstance() {
      return defaultInstance;
    }

    public ConditionLifeSignal getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ConditionLifeSignal(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              maxT_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              minT_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              move_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              speed_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              course_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              mileage_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ConditionLifeSignal_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ConditionLifeSignal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.Builder.class);
    }

    public static com.google.protobuf.Parser<ConditionLifeSignal> PARSER =
        new com.google.protobuf.AbstractParser<ConditionLifeSignal>() {
      public ConditionLifeSignal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConditionLifeSignal(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ConditionLifeSignal> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 max_t = 1;
    public static final int MAX_T_FIELD_NUMBER = 1;
    private int maxT_;
    /**
     * <code>optional uint32 max_t = 1;</code>
     */
    public boolean hasMaxT() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 max_t = 1;</code>
     */
    public int getMaxT() {
      return maxT_;
    }

    // optional uint32 min_t = 2;
    public static final int MIN_T_FIELD_NUMBER = 2;
    private int minT_;
    /**
     * <code>optional uint32 min_t = 2;</code>
     */
    public boolean hasMinT() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 min_t = 2;</code>
     */
    public int getMinT() {
      return minT_;
    }

    // optional uint32 move = 3;
    public static final int MOVE_FIELD_NUMBER = 3;
    private int move_;
    /**
     * <code>optional uint32 move = 3;</code>
     */
    public boolean hasMove() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 move = 3;</code>
     */
    public int getMove() {
      return move_;
    }

    // optional uint32 speed = 4;
    public static final int SPEED_FIELD_NUMBER = 4;
    private int speed_;
    /**
     * <code>optional uint32 speed = 4;</code>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 speed = 4;</code>
     */
    public int getSpeed() {
      return speed_;
    }

    // optional uint32 course = 5;
    public static final int COURSE_FIELD_NUMBER = 5;
    private int course_;
    /**
     * <code>optional uint32 course = 5;</code>
     */
    public boolean hasCourse() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 course = 5;</code>
     */
    public int getCourse() {
      return course_;
    }

    // optional uint32 mileage = 6;
    public static final int MILEAGE_FIELD_NUMBER = 6;
    private int mileage_;
    /**
     * <code>optional uint32 mileage = 6;</code>
     */
    public boolean hasMileage() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 mileage = 6;</code>
     */
    public int getMileage() {
      return mileage_;
    }

    private void initFields() {
      maxT_ = 0;
      minT_ = 0;
      move_ = 0;
      speed_ = 0;
      course_ = 0;
      mileage_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, maxT_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, minT_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, move_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, speed_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, course_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, mileage_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, maxT_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, minT_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, move_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, speed_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, course_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, mileage_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.ConditionLifeSignal}
     *
     * <pre>
     * Настройка режима формирования периодического сигнала.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ConditionLifeSignal_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ConditionLifeSignal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        maxT_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        minT_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        move_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        course_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        mileage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ConditionLifeSignal_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.maxT_ = maxT_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minT_ = minT_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.move_ = move_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.course_ = course_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.mileage_ = mileage_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.getDefaultInstance()) return this;
        if (other.hasMaxT()) {
          setMaxT(other.getMaxT());
        }
        if (other.hasMinT()) {
          setMinT(other.getMinT());
        }
        if (other.hasMove()) {
          setMove(other.getMove());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasCourse()) {
          setCourse(other.getCourse());
        }
        if (other.hasMileage()) {
          setMileage(other.getMileage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 max_t = 1;
      private int maxT_ ;
      /**
       * <code>optional uint32 max_t = 1;</code>
       */
      public boolean hasMaxT() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 max_t = 1;</code>
       */
      public int getMaxT() {
        return maxT_;
      }
      /**
       * <code>optional uint32 max_t = 1;</code>
       */
      public Builder setMaxT(int value) {
        bitField0_ |= 0x00000001;
        maxT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 max_t = 1;</code>
       */
      public Builder clearMaxT() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxT_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 min_t = 2;
      private int minT_ ;
      /**
       * <code>optional uint32 min_t = 2;</code>
       */
      public boolean hasMinT() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 min_t = 2;</code>
       */
      public int getMinT() {
        return minT_;
      }
      /**
       * <code>optional uint32 min_t = 2;</code>
       */
      public Builder setMinT(int value) {
        bitField0_ |= 0x00000002;
        minT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 min_t = 2;</code>
       */
      public Builder clearMinT() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minT_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 move = 3;
      private int move_ ;
      /**
       * <code>optional uint32 move = 3;</code>
       */
      public boolean hasMove() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 move = 3;</code>
       */
      public int getMove() {
        return move_;
      }
      /**
       * <code>optional uint32 move = 3;</code>
       */
      public Builder setMove(int value) {
        bitField0_ |= 0x00000004;
        move_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 move = 3;</code>
       */
      public Builder clearMove() {
        bitField0_ = (bitField0_ & ~0x00000004);
        move_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 speed = 4;
      private int speed_ ;
      /**
       * <code>optional uint32 speed = 4;</code>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 speed = 4;</code>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <code>optional uint32 speed = 4;</code>
       */
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00000008;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 speed = 4;</code>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000008);
        speed_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 course = 5;
      private int course_ ;
      /**
       * <code>optional uint32 course = 5;</code>
       */
      public boolean hasCourse() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 course = 5;</code>
       */
      public int getCourse() {
        return course_;
      }
      /**
       * <code>optional uint32 course = 5;</code>
       */
      public Builder setCourse(int value) {
        bitField0_ |= 0x00000010;
        course_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 course = 5;</code>
       */
      public Builder clearCourse() {
        bitField0_ = (bitField0_ & ~0x00000010);
        course_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 mileage = 6;
      private int mileage_ ;
      /**
       * <code>optional uint32 mileage = 6;</code>
       */
      public boolean hasMileage() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 mileage = 6;</code>
       */
      public int getMileage() {
        return mileage_;
      }
      /**
       * <code>optional uint32 mileage = 6;</code>
       */
      public Builder setMileage(int value) {
        bitField0_ |= 0x00000020;
        mileage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mileage = 6;</code>
       */
      public Builder clearMileage() {
        bitField0_ = (bitField0_ & ~0x00000020);
        mileage_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.ConditionLifeSignal)
    }

    static {
      defaultInstance = new ConditionLifeSignal(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.ConditionLifeSignal)
  }

  public interface ConditionLSCreateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .almaz2.rpc.commands.ConditionLSCreate.EquipmentMode mode = 1;
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLSCreate.EquipmentMode mode = 1;</code>
     */
    boolean hasMode();
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLSCreate.EquipmentMode mode = 1;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.EquipmentMode getMode();

    // optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;</code>
     */
    boolean hasCondition();
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal getCondition();
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignalOrBuilder getConditionOrBuilder();

    // optional uint32 version = 3;
    /**
     * <code>optional uint32 version = 3;</code>
     */
    boolean hasVersion();
    /**
     * <code>optional uint32 version = 3;</code>
     */
    int getVersion();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.ConditionLSCreate}
   *
   * <pre>
   * Команда установки параметров формирования периодического сигнала.
   * </pre>
   */
  public static final class ConditionLSCreate extends
      com.google.protobuf.GeneratedMessage
      implements ConditionLSCreateOrBuilder {
    // Use ConditionLSCreate.newBuilder() to construct.
    private ConditionLSCreate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ConditionLSCreate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ConditionLSCreate defaultInstance;
    public static ConditionLSCreate getDefaultInstance() {
      return defaultInstance;
    }

    public ConditionLSCreate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ConditionLSCreate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.EquipmentMode value = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.EquipmentMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                mode_ = value;
              }
              break;
            }
            case 18: {
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = condition_.toBuilder();
              }
              condition_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(condition_);
                condition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              version_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ConditionLSCreate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ConditionLSCreate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.Builder.class);
    }

    public static com.google.protobuf.Parser<ConditionLSCreate> PARSER =
        new com.google.protobuf.AbstractParser<ConditionLSCreate>() {
      public ConditionLSCreate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConditionLSCreate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ConditionLSCreate> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code almaz2.rpc.commands.ConditionLSCreate.EquipmentMode}
     */
    public enum EquipmentMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>EQUIPMENT_MODE_ACTIVE = 0;</code>
       */
      EQUIPMENT_MODE_ACTIVE(0, 0),
      /**
       * <code>EQUIPMENT_MODE_GUARD = 1;</code>
       */
      EQUIPMENT_MODE_GUARD(1, 1),
      /**
       * <code>EQUIPMENT_MODE_SLEEP = 2;</code>
       */
      EQUIPMENT_MODE_SLEEP(2, 2),
      /**
       * <code>EQUIPMENT_MODE_WAIT = 3;</code>
       */
      EQUIPMENT_MODE_WAIT(3, 3),
      /**
       * <code>EQUIPMENT_MODE_ALARM = 4;</code>
       */
      EQUIPMENT_MODE_ALARM(4, 4),
      ;

      /**
       * <code>EQUIPMENT_MODE_ACTIVE = 0;</code>
       */
      public static final int EQUIPMENT_MODE_ACTIVE_VALUE = 0;
      /**
       * <code>EQUIPMENT_MODE_GUARD = 1;</code>
       */
      public static final int EQUIPMENT_MODE_GUARD_VALUE = 1;
      /**
       * <code>EQUIPMENT_MODE_SLEEP = 2;</code>
       */
      public static final int EQUIPMENT_MODE_SLEEP_VALUE = 2;
      /**
       * <code>EQUIPMENT_MODE_WAIT = 3;</code>
       */
      public static final int EQUIPMENT_MODE_WAIT_VALUE = 3;
      /**
       * <code>EQUIPMENT_MODE_ALARM = 4;</code>
       */
      public static final int EQUIPMENT_MODE_ALARM_VALUE = 4;


      public final int getNumber() { return value; }

      public static EquipmentMode valueOf(int value) {
        switch (value) {
          case 0: return EQUIPMENT_MODE_ACTIVE;
          case 1: return EQUIPMENT_MODE_GUARD;
          case 2: return EQUIPMENT_MODE_SLEEP;
          case 3: return EQUIPMENT_MODE_WAIT;
          case 4: return EQUIPMENT_MODE_ALARM;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EquipmentMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EquipmentMode>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EquipmentMode>() {
              public EquipmentMode findValueByNumber(int number) {
                return EquipmentMode.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.getDescriptor().getEnumTypes().get(0);
      }

      private static final EquipmentMode[] VALUES = values();

      public static EquipmentMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EquipmentMode(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:almaz2.rpc.commands.ConditionLSCreate.EquipmentMode)
    }

    private int bitField0_;
    // optional .almaz2.rpc.commands.ConditionLSCreate.EquipmentMode mode = 1;
    public static final int MODE_FIELD_NUMBER = 1;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.EquipmentMode mode_;
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLSCreate.EquipmentMode mode = 1;</code>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLSCreate.EquipmentMode mode = 1;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.EquipmentMode getMode() {
      return mode_;
    }

    // optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;
    public static final int CONDITION_FIELD_NUMBER = 2;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal condition_;
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;</code>
     */
    public boolean hasCondition() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal getCondition() {
      return condition_;
    }
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignalOrBuilder getConditionOrBuilder() {
      return condition_;
    }

    // optional uint32 version = 3;
    public static final int VERSION_FIELD_NUMBER = 3;
    private int version_;
    /**
     * <code>optional uint32 version = 3;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 version = 3;</code>
     */
    public int getVersion() {
      return version_;
    }

    private void initFields() {
      mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.EquipmentMode.EQUIPMENT_MODE_ACTIVE;
      condition_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.getDefaultInstance();
      version_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, condition_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, version_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, condition_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, version_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.ConditionLSCreate}
     *
     * <pre>
     * Команда установки параметров формирования периодического сигнала.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ConditionLSCreate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ConditionLSCreate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getConditionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.EquipmentMode.EQUIPMENT_MODE_ACTIVE;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (conditionBuilder_ == null) {
          condition_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.getDefaultInstance();
        } else {
          conditionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_ConditionLSCreate_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (conditionBuilder_ == null) {
          result.condition_ = condition_;
        } else {
          result.condition_ = conditionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.version_ = version_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.getDefaultInstance()) return this;
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasCondition()) {
          mergeCondition(other.getCondition());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .almaz2.rpc.commands.ConditionLSCreate.EquipmentMode mode = 1;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.EquipmentMode mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.EquipmentMode.EQUIPMENT_MODE_ACTIVE;
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLSCreate.EquipmentMode mode = 1;</code>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLSCreate.EquipmentMode mode = 1;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.EquipmentMode getMode() {
        return mode_;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLSCreate.EquipmentMode mode = 1;</code>
       */
      public Builder setMode(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.EquipmentMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLSCreate.EquipmentMode mode = 1;</code>
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.EquipmentMode.EQUIPMENT_MODE_ACTIVE;
        onChanged();
        return this;
      }

      // optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal condition_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignalOrBuilder> conditionBuilder_;
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;</code>
       */
      public boolean hasCondition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal getCondition() {
        if (conditionBuilder_ == null) {
          return condition_;
        } else {
          return conditionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;</code>
       */
      public Builder setCondition(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal value) {
        if (conditionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          condition_ = value;
          onChanged();
        } else {
          conditionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;</code>
       */
      public Builder setCondition(
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.Builder builderForValue) {
        if (conditionBuilder_ == null) {
          condition_ = builderForValue.build();
          onChanged();
        } else {
          conditionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;</code>
       */
      public Builder mergeCondition(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal value) {
        if (conditionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              condition_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.getDefaultInstance()) {
            condition_ =
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.newBuilder(condition_).mergeFrom(value).buildPartial();
          } else {
            condition_ = value;
          }
          onChanged();
        } else {
          conditionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;</code>
       */
      public Builder clearCondition() {
        if (conditionBuilder_ == null) {
          condition_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.getDefaultInstance();
          onChanged();
        } else {
          conditionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.Builder getConditionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getConditionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignalOrBuilder getConditionOrBuilder() {
        if (conditionBuilder_ != null) {
          return conditionBuilder_.getMessageOrBuilder();
        } else {
          return condition_;
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLifeSignal condition = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignalOrBuilder> 
          getConditionFieldBuilder() {
        if (conditionBuilder_ == null) {
          conditionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignal.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLifeSignalOrBuilder>(
                  condition_,
                  getParentForChildren(),
                  isClean());
          condition_ = null;
        }
        return conditionBuilder_;
      }

      // optional uint32 version = 3;
      private int version_ ;
      /**
       * <code>optional uint32 version = 3;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 version = 3;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>optional uint32 version = 3;</code>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000004;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 version = 3;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        version_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.ConditionLSCreate)
    }

    static {
      defaultInstance = new ConditionLSCreate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.ConditionLSCreate)
  }

  public interface InputAlarmOffOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .almaz2.rpc.commands.InputAlarmOff.InputType type = 1;
    /**
     * <code>optional .almaz2.rpc.commands.InputAlarmOff.InputType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .almaz2.rpc.commands.InputAlarmOff.InputType type = 1;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.InputType getType();

    // optional uint32 input = 2;
    /**
     * <code>optional uint32 input = 2;</code>
     */
    boolean hasInput();
    /**
     * <code>optional uint32 input = 2;</code>
     */
    int getInput();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.InputAlarmOff}
   *
   * <pre>
   * Команда сброса тревоги входа
   * </pre>
   */
  public static final class InputAlarmOff extends
      com.google.protobuf.GeneratedMessage
      implements InputAlarmOffOrBuilder {
    // Use InputAlarmOff.newBuilder() to construct.
    private InputAlarmOff(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InputAlarmOff(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InputAlarmOff defaultInstance;
    public static InputAlarmOff getDefaultInstance() {
      return defaultInstance;
    }

    public InputAlarmOff getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InputAlarmOff(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.InputType value = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.InputType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              input_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_InputAlarmOff_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_InputAlarmOff_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.Builder.class);
    }

    public static com.google.protobuf.Parser<InputAlarmOff> PARSER =
        new com.google.protobuf.AbstractParser<InputAlarmOff>() {
      public InputAlarmOff parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InputAlarmOff(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InputAlarmOff> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code almaz2.rpc.commands.InputAlarmOff.InputType}
     */
    public enum InputType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INPUT_TYPE_UNIVERSAL = 0;</code>
       */
      INPUT_TYPE_UNIVERSAL(0, 0),
      /**
       * <code>INPUT_TYPE_COUNT = 1;</code>
       */
      INPUT_TYPE_COUNT(1, 1),
      /**
       * <code>INPUT_TYPE_ENUM = 2;</code>
       */
      INPUT_TYPE_ENUM(2, 2),
      /**
       * <code>INPUT_TYPE_DIGITAL = 3;</code>
       */
      INPUT_TYPE_DIGITAL(3, 3),
      /**
       * <code>INPUT_TYPE_ADC = 4;</code>
       */
      INPUT_TYPE_ADC(4, 4),
      ;

      /**
       * <code>INPUT_TYPE_UNIVERSAL = 0;</code>
       */
      public static final int INPUT_TYPE_UNIVERSAL_VALUE = 0;
      /**
       * <code>INPUT_TYPE_COUNT = 1;</code>
       */
      public static final int INPUT_TYPE_COUNT_VALUE = 1;
      /**
       * <code>INPUT_TYPE_ENUM = 2;</code>
       */
      public static final int INPUT_TYPE_ENUM_VALUE = 2;
      /**
       * <code>INPUT_TYPE_DIGITAL = 3;</code>
       */
      public static final int INPUT_TYPE_DIGITAL_VALUE = 3;
      /**
       * <code>INPUT_TYPE_ADC = 4;</code>
       */
      public static final int INPUT_TYPE_ADC_VALUE = 4;


      public final int getNumber() { return value; }

      public static InputType valueOf(int value) {
        switch (value) {
          case 0: return INPUT_TYPE_UNIVERSAL;
          case 1: return INPUT_TYPE_COUNT;
          case 2: return INPUT_TYPE_ENUM;
          case 3: return INPUT_TYPE_DIGITAL;
          case 4: return INPUT_TYPE_ADC;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<InputType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<InputType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<InputType>() {
              public InputType findValueByNumber(int number) {
                return InputType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.getDescriptor().getEnumTypes().get(0);
      }

      private static final InputType[] VALUES = values();

      public static InputType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private InputType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:almaz2.rpc.commands.InputAlarmOff.InputType)
    }

    private int bitField0_;
    // optional .almaz2.rpc.commands.InputAlarmOff.InputType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.InputType type_;
    /**
     * <code>optional .almaz2.rpc.commands.InputAlarmOff.InputType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .almaz2.rpc.commands.InputAlarmOff.InputType type = 1;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.InputType getType() {
      return type_;
    }

    // optional uint32 input = 2;
    public static final int INPUT_FIELD_NUMBER = 2;
    private int input_;
    /**
     * <code>optional uint32 input = 2;</code>
     */
    public boolean hasInput() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 input = 2;</code>
     */
    public int getInput() {
      return input_;
    }

    private void initFields() {
      type_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.InputType.INPUT_TYPE_UNIVERSAL;
      input_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, input_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, input_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.InputAlarmOff}
     *
     * <pre>
     * Команда сброса тревоги входа
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOffOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_InputAlarmOff_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_InputAlarmOff_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.InputType.INPUT_TYPE_UNIVERSAL;
        bitField0_ = (bitField0_ & ~0x00000001);
        input_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_InputAlarmOff_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.input_ = input_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasInput()) {
          setInput(other.getInput());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .almaz2.rpc.commands.InputAlarmOff.InputType type = 1;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.InputType type_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.InputType.INPUT_TYPE_UNIVERSAL;
      /**
       * <code>optional .almaz2.rpc.commands.InputAlarmOff.InputType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .almaz2.rpc.commands.InputAlarmOff.InputType type = 1;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.InputType getType() {
        return type_;
      }
      /**
       * <code>optional .almaz2.rpc.commands.InputAlarmOff.InputType type = 1;</code>
       */
      public Builder setType(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.InputType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.InputAlarmOff.InputType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.InputType.INPUT_TYPE_UNIVERSAL;
        onChanged();
        return this;
      }

      // optional uint32 input = 2;
      private int input_ ;
      /**
       * <code>optional uint32 input = 2;</code>
       */
      public boolean hasInput() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 input = 2;</code>
       */
      public int getInput() {
        return input_;
      }
      /**
       * <code>optional uint32 input = 2;</code>
       */
      public Builder setInput(int value) {
        bitField0_ |= 0x00000002;
        input_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input = 2;</code>
       */
      public Builder clearInput() {
        bitField0_ = (bitField0_ & ~0x00000002);
        input_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.InputAlarmOff)
    }

    static {
      defaultInstance = new InputAlarmOff(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.InputAlarmOff)
  }

  public interface EquipmentCommandBaseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 equipment_id = 1;
    /**
     * <code>optional uint32 equipment_id = 1;</code>
     */
    boolean hasEquipmentId();
    /**
     * <code>optional uint32 equipment_id = 1;</code>
     */
    int getEquipmentId();

    // optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;
    /**
     * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
     */
    boolean hasSetLogicalMode();
    /**
     * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode getSetLogicalMode();
    /**
     * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder getSetLogicalModeOrBuilder();

    // optional .almaz2.rpc.commands.SetOutState set_out_state = 3;
    /**
     * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
     */
    boolean hasSetOutState();
    /**
     * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState getSetOutState();
    /**
     * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder getSetOutStateOrBuilder();

    // optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;
    /**
     * <code>optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;</code>
     */
    boolean hasGetOutState();
    /**
     * <code>optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn getGetOutState();
    /**
     * <code>optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateInOrBuilder getGetOutStateOrBuilder();

    // optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;
    /**
     * <code>optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;</code>
     */
    boolean hasGetDeviceInfo();
    /**
     * <code>optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo getGetDeviceInfo();
    /**
     * <code>optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfoOrBuilder getGetDeviceInfoOrBuilder();

    // optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;</code>
     */
    boolean hasFirmwareUpdate();
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate getFirmwareUpdate();
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateOrBuilder getFirmwareUpdateOrBuilder();

    // optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;
    /**
     * <code>optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;</code>
     */
    boolean hasConfirmationCrewState();
    /**
     * <code>optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState getConfirmationCrewState();
    /**
     * <code>optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewStateOrBuilder getConfirmationCrewStateOrBuilder();

    // optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;
    /**
     * <code>optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;</code>
     */
    boolean hasReadBlackBoxByTime();
    /**
     * <code>optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime getReadBlackBoxByTime();
    /**
     * <code>optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTimeOrBuilder getReadBlackBoxByTimeOrBuilder();

    // optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;
    /**
     * <code>optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;</code>
     */
    boolean hasBreakReadBlackBox();
    /**
     * <code>optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox getBreakReadBlackBox();
    /**
     * <code>optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBoxOrBuilder getBreakReadBlackBoxOrBuilder();

    // optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;</code>
     */
    boolean hasConditionLsCreate();
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate getConditionLsCreate();
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreateOrBuilder getConditionLsCreateOrBuilder();

    // optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;
    /**
     * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;</code>
     */
    boolean hasInputAlarmOff();
    /**
     * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff getInputAlarmOff();
    /**
     * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOffOrBuilder getInputAlarmOffOrBuilder();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.EquipmentCommandBase}
   *
   * <pre>
   **
   * Базовое сообщение команды в адрес оборудования.
   * </pre>
   */
  public static final class EquipmentCommandBase extends
      com.google.protobuf.GeneratedMessage
      implements EquipmentCommandBaseOrBuilder {
    // Use EquipmentCommandBase.newBuilder() to construct.
    private EquipmentCommandBase(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EquipmentCommandBase(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EquipmentCommandBase defaultInstance;
    public static EquipmentCommandBase getDefaultInstance() {
      return defaultInstance;
    }

    public EquipmentCommandBase getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EquipmentCommandBase(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              equipmentId_ = input.readUInt32();
              break;
            }
            case 18: {
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = setLogicalMode_.toBuilder();
              }
              setLogicalMode_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(setLogicalMode_);
                setLogicalMode_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = setOutState_.toBuilder();
              }
              setOutState_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(setOutState_);
                setOutState_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = getOutState_.toBuilder();
              }
              getOutState_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getOutState_);
                getOutState_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = getDeviceInfo_.toBuilder();
              }
              getDeviceInfo_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getDeviceInfo_);
                getDeviceInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = firmwareUpdate_.toBuilder();
              }
              firmwareUpdate_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(firmwareUpdate_);
                firmwareUpdate_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = confirmationCrewState_.toBuilder();
              }
              confirmationCrewState_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(confirmationCrewState_);
                confirmationCrewState_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = readBlackBoxByTime_.toBuilder();
              }
              readBlackBoxByTime_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(readBlackBoxByTime_);
                readBlackBoxByTime_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = breakReadBlackBox_.toBuilder();
              }
              breakReadBlackBox_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(breakReadBlackBox_);
                breakReadBlackBox_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 82: {
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = conditionLsCreate_.toBuilder();
              }
              conditionLsCreate_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(conditionLsCreate_);
                conditionLsCreate_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 90: {
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = inputAlarmOff_.toBuilder();
              }
              inputAlarmOff_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(inputAlarmOff_);
                inputAlarmOff_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_EquipmentCommandBase_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_EquipmentCommandBase_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase.Builder.class);
    }

    public static com.google.protobuf.Parser<EquipmentCommandBase> PARSER =
        new com.google.protobuf.AbstractParser<EquipmentCommandBase>() {
      public EquipmentCommandBase parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EquipmentCommandBase(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EquipmentCommandBase> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 equipment_id = 1;
    public static final int EQUIPMENT_ID_FIELD_NUMBER = 1;
    private int equipmentId_;
    /**
     * <code>optional uint32 equipment_id = 1;</code>
     */
    public boolean hasEquipmentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 equipment_id = 1;</code>
     */
    public int getEquipmentId() {
      return equipmentId_;
    }

    // optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;
    public static final int SET_LOGICAL_MODE_FIELD_NUMBER = 2;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode setLogicalMode_;
    /**
     * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
     */
    public boolean hasSetLogicalMode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode getSetLogicalMode() {
      return setLogicalMode_;
    }
    /**
     * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder getSetLogicalModeOrBuilder() {
      return setLogicalMode_;
    }

    // optional .almaz2.rpc.commands.SetOutState set_out_state = 3;
    public static final int SET_OUT_STATE_FIELD_NUMBER = 3;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState setOutState_;
    /**
     * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
     */
    public boolean hasSetOutState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState getSetOutState() {
      return setOutState_;
    }
    /**
     * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder getSetOutStateOrBuilder() {
      return setOutState_;
    }

    // optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;
    public static final int GET_OUT_STATE_FIELD_NUMBER = 4;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn getOutState_;
    /**
     * <code>optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;</code>
     */
    public boolean hasGetOutState() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn getGetOutState() {
      return getOutState_;
    }
    /**
     * <code>optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateInOrBuilder getGetOutStateOrBuilder() {
      return getOutState_;
    }

    // optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;
    public static final int GET_DEVICE_INFO_FIELD_NUMBER = 5;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo getDeviceInfo_;
    /**
     * <code>optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;</code>
     */
    public boolean hasGetDeviceInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo getGetDeviceInfo() {
      return getDeviceInfo_;
    }
    /**
     * <code>optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfoOrBuilder getGetDeviceInfoOrBuilder() {
      return getDeviceInfo_;
    }

    // optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;
    public static final int FIRMWARE_UPDATE_FIELD_NUMBER = 6;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate firmwareUpdate_;
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;</code>
     */
    public boolean hasFirmwareUpdate() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate getFirmwareUpdate() {
      return firmwareUpdate_;
    }
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateOrBuilder getFirmwareUpdateOrBuilder() {
      return firmwareUpdate_;
    }

    // optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;
    public static final int CONFIRMATION_CREW_STATE_FIELD_NUMBER = 7;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState confirmationCrewState_;
    /**
     * <code>optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;</code>
     */
    public boolean hasConfirmationCrewState() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState getConfirmationCrewState() {
      return confirmationCrewState_;
    }
    /**
     * <code>optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewStateOrBuilder getConfirmationCrewStateOrBuilder() {
      return confirmationCrewState_;
    }

    // optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;
    public static final int READ_BLACK_BOX_BY_TIME_FIELD_NUMBER = 8;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime readBlackBoxByTime_;
    /**
     * <code>optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;</code>
     */
    public boolean hasReadBlackBoxByTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime getReadBlackBoxByTime() {
      return readBlackBoxByTime_;
    }
    /**
     * <code>optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTimeOrBuilder getReadBlackBoxByTimeOrBuilder() {
      return readBlackBoxByTime_;
    }

    // optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;
    public static final int BREAK_READ_BLACK_BOX_FIELD_NUMBER = 9;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox breakReadBlackBox_;
    /**
     * <code>optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;</code>
     */
    public boolean hasBreakReadBlackBox() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox getBreakReadBlackBox() {
      return breakReadBlackBox_;
    }
    /**
     * <code>optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBoxOrBuilder getBreakReadBlackBoxOrBuilder() {
      return breakReadBlackBox_;
    }

    // optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;
    public static final int CONDITION_LS_CREATE_FIELD_NUMBER = 10;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate conditionLsCreate_;
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;</code>
     */
    public boolean hasConditionLsCreate() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate getConditionLsCreate() {
      return conditionLsCreate_;
    }
    /**
     * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreateOrBuilder getConditionLsCreateOrBuilder() {
      return conditionLsCreate_;
    }

    // optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;
    public static final int INPUT_ALARM_OFF_FIELD_NUMBER = 11;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff inputAlarmOff_;
    /**
     * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;</code>
     */
    public boolean hasInputAlarmOff() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff getInputAlarmOff() {
      return inputAlarmOff_;
    }
    /**
     * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOffOrBuilder getInputAlarmOffOrBuilder() {
      return inputAlarmOff_;
    }

    private void initFields() {
      equipmentId_ = 0;
      setLogicalMode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
      setOutState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
      getOutState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.getDefaultInstance();
      getDeviceInfo_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.getDefaultInstance();
      firmwareUpdate_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.getDefaultInstance();
      confirmationCrewState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.getDefaultInstance();
      readBlackBoxByTime_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.getDefaultInstance();
      breakReadBlackBox_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.getDefaultInstance();
      conditionLsCreate_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.getDefaultInstance();
      inputAlarmOff_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, equipmentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, setLogicalMode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, setOutState_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getOutState_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getDeviceInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, firmwareUpdate_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, confirmationCrewState_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, readBlackBoxByTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, breakReadBlackBox_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, conditionLsCreate_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, inputAlarmOff_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, equipmentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, setLogicalMode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, setOutState_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getOutState_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getDeviceInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, firmwareUpdate_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, confirmationCrewState_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, readBlackBoxByTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, breakReadBlackBox_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, conditionLsCreate_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, inputAlarmOff_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.EquipmentCommandBase}
     *
     * <pre>
     **
     * Базовое сообщение команды в адрес оборудования.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBaseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_EquipmentCommandBase_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_EquipmentCommandBase_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSetLogicalModeFieldBuilder();
          getSetOutStateFieldBuilder();
          getGetOutStateFieldBuilder();
          getGetDeviceInfoFieldBuilder();
          getFirmwareUpdateFieldBuilder();
          getConfirmationCrewStateFieldBuilder();
          getReadBlackBoxByTimeFieldBuilder();
          getBreakReadBlackBoxFieldBuilder();
          getConditionLsCreateFieldBuilder();
          getInputAlarmOffFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        equipmentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (setLogicalModeBuilder_ == null) {
          setLogicalMode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
        } else {
          setLogicalModeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (setOutStateBuilder_ == null) {
          setOutState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
        } else {
          setOutStateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (getOutStateBuilder_ == null) {
          getOutState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.getDefaultInstance();
        } else {
          getOutStateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (getDeviceInfoBuilder_ == null) {
          getDeviceInfo_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.getDefaultInstance();
        } else {
          getDeviceInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (firmwareUpdateBuilder_ == null) {
          firmwareUpdate_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.getDefaultInstance();
        } else {
          firmwareUpdateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (confirmationCrewStateBuilder_ == null) {
          confirmationCrewState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.getDefaultInstance();
        } else {
          confirmationCrewStateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (readBlackBoxByTimeBuilder_ == null) {
          readBlackBoxByTime_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.getDefaultInstance();
        } else {
          readBlackBoxByTimeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (breakReadBlackBoxBuilder_ == null) {
          breakReadBlackBox_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.getDefaultInstance();
        } else {
          breakReadBlackBoxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (conditionLsCreateBuilder_ == null) {
          conditionLsCreate_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.getDefaultInstance();
        } else {
          conditionLsCreateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (inputAlarmOffBuilder_ == null) {
          inputAlarmOff_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.getDefaultInstance();
        } else {
          inputAlarmOffBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_EquipmentCommandBase_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.equipmentId_ = equipmentId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (setLogicalModeBuilder_ == null) {
          result.setLogicalMode_ = setLogicalMode_;
        } else {
          result.setLogicalMode_ = setLogicalModeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (setOutStateBuilder_ == null) {
          result.setOutState_ = setOutState_;
        } else {
          result.setOutState_ = setOutStateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (getOutStateBuilder_ == null) {
          result.getOutState_ = getOutState_;
        } else {
          result.getOutState_ = getOutStateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (getDeviceInfoBuilder_ == null) {
          result.getDeviceInfo_ = getDeviceInfo_;
        } else {
          result.getDeviceInfo_ = getDeviceInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (firmwareUpdateBuilder_ == null) {
          result.firmwareUpdate_ = firmwareUpdate_;
        } else {
          result.firmwareUpdate_ = firmwareUpdateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (confirmationCrewStateBuilder_ == null) {
          result.confirmationCrewState_ = confirmationCrewState_;
        } else {
          result.confirmationCrewState_ = confirmationCrewStateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (readBlackBoxByTimeBuilder_ == null) {
          result.readBlackBoxByTime_ = readBlackBoxByTime_;
        } else {
          result.readBlackBoxByTime_ = readBlackBoxByTimeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (breakReadBlackBoxBuilder_ == null) {
          result.breakReadBlackBox_ = breakReadBlackBox_;
        } else {
          result.breakReadBlackBox_ = breakReadBlackBoxBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (conditionLsCreateBuilder_ == null) {
          result.conditionLsCreate_ = conditionLsCreate_;
        } else {
          result.conditionLsCreate_ = conditionLsCreateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (inputAlarmOffBuilder_ == null) {
          result.inputAlarmOff_ = inputAlarmOff_;
        } else {
          result.inputAlarmOff_ = inputAlarmOffBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase.getDefaultInstance()) return this;
        if (other.hasEquipmentId()) {
          setEquipmentId(other.getEquipmentId());
        }
        if (other.hasSetLogicalMode()) {
          mergeSetLogicalMode(other.getSetLogicalMode());
        }
        if (other.hasSetOutState()) {
          mergeSetOutState(other.getSetOutState());
        }
        if (other.hasGetOutState()) {
          mergeGetOutState(other.getGetOutState());
        }
        if (other.hasGetDeviceInfo()) {
          mergeGetDeviceInfo(other.getGetDeviceInfo());
        }
        if (other.hasFirmwareUpdate()) {
          mergeFirmwareUpdate(other.getFirmwareUpdate());
        }
        if (other.hasConfirmationCrewState()) {
          mergeConfirmationCrewState(other.getConfirmationCrewState());
        }
        if (other.hasReadBlackBoxByTime()) {
          mergeReadBlackBoxByTime(other.getReadBlackBoxByTime());
        }
        if (other.hasBreakReadBlackBox()) {
          mergeBreakReadBlackBox(other.getBreakReadBlackBox());
        }
        if (other.hasConditionLsCreate()) {
          mergeConditionLsCreate(other.getConditionLsCreate());
        }
        if (other.hasInputAlarmOff()) {
          mergeInputAlarmOff(other.getInputAlarmOff());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentCommandBase) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 equipment_id = 1;
      private int equipmentId_ ;
      /**
       * <code>optional uint32 equipment_id = 1;</code>
       */
      public boolean hasEquipmentId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 equipment_id = 1;</code>
       */
      public int getEquipmentId() {
        return equipmentId_;
      }
      /**
       * <code>optional uint32 equipment_id = 1;</code>
       */
      public Builder setEquipmentId(int value) {
        bitField0_ |= 0x00000001;
        equipmentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 equipment_id = 1;</code>
       */
      public Builder clearEquipmentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        equipmentId_ = 0;
        onChanged();
        return this;
      }

      // optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode setLogicalMode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder> setLogicalModeBuilder_;
      /**
       * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
       */
      public boolean hasSetLogicalMode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode getSetLogicalMode() {
        if (setLogicalModeBuilder_ == null) {
          return setLogicalMode_;
        } else {
          return setLogicalModeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
       */
      public Builder setSetLogicalMode(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode value) {
        if (setLogicalModeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          setLogicalMode_ = value;
          onChanged();
        } else {
          setLogicalModeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
       */
      public Builder setSetLogicalMode(
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder builderForValue) {
        if (setLogicalModeBuilder_ == null) {
          setLogicalMode_ = builderForValue.build();
          onChanged();
        } else {
          setLogicalModeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
       */
      public Builder mergeSetLogicalMode(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode value) {
        if (setLogicalModeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              setLogicalMode_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance()) {
            setLogicalMode_ =
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.newBuilder(setLogicalMode_).mergeFrom(value).buildPartial();
          } else {
            setLogicalMode_ = value;
          }
          onChanged();
        } else {
          setLogicalModeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
       */
      public Builder clearSetLogicalMode() {
        if (setLogicalModeBuilder_ == null) {
          setLogicalMode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
          onChanged();
        } else {
          setLogicalModeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder getSetLogicalModeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSetLogicalModeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder getSetLogicalModeOrBuilder() {
        if (setLogicalModeBuilder_ != null) {
          return setLogicalModeBuilder_.getMessageOrBuilder();
        } else {
          return setLogicalMode_;
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder> 
          getSetLogicalModeFieldBuilder() {
        if (setLogicalModeBuilder_ == null) {
          setLogicalModeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder>(
                  setLogicalMode_,
                  getParentForChildren(),
                  isClean());
          setLogicalMode_ = null;
        }
        return setLogicalModeBuilder_;
      }

      // optional .almaz2.rpc.commands.SetOutState set_out_state = 3;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState setOutState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder> setOutStateBuilder_;
      /**
       * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
       */
      public boolean hasSetOutState() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState getSetOutState() {
        if (setOutStateBuilder_ == null) {
          return setOutState_;
        } else {
          return setOutStateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
       */
      public Builder setSetOutState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState value) {
        if (setOutStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          setOutState_ = value;
          onChanged();
        } else {
          setOutStateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
       */
      public Builder setSetOutState(
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder builderForValue) {
        if (setOutStateBuilder_ == null) {
          setOutState_ = builderForValue.build();
          onChanged();
        } else {
          setOutStateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
       */
      public Builder mergeSetOutState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState value) {
        if (setOutStateBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              setOutState_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance()) {
            setOutState_ =
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.newBuilder(setOutState_).mergeFrom(value).buildPartial();
          } else {
            setOutState_ = value;
          }
          onChanged();
        } else {
          setOutStateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
       */
      public Builder clearSetOutState() {
        if (setOutStateBuilder_ == null) {
          setOutState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
          onChanged();
        } else {
          setOutStateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder getSetOutStateBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSetOutStateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder getSetOutStateOrBuilder() {
        if (setOutStateBuilder_ != null) {
          return setOutStateBuilder_.getMessageOrBuilder();
        } else {
          return setOutState_;
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder> 
          getSetOutStateFieldBuilder() {
        if (setOutStateBuilder_ == null) {
          setOutStateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder>(
                  setOutState_,
                  getParentForChildren(),
                  isClean());
          setOutState_ = null;
        }
        return setOutStateBuilder_;
      }

      // optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn getOutState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateInOrBuilder> getOutStateBuilder_;
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;</code>
       */
      public boolean hasGetOutState() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn getGetOutState() {
        if (getOutStateBuilder_ == null) {
          return getOutState_;
        } else {
          return getOutStateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;</code>
       */
      public Builder setGetOutState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn value) {
        if (getOutStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getOutState_ = value;
          onChanged();
        } else {
          getOutStateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;</code>
       */
      public Builder setGetOutState(
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.Builder builderForValue) {
        if (getOutStateBuilder_ == null) {
          getOutState_ = builderForValue.build();
          onChanged();
        } else {
          getOutStateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;</code>
       */
      public Builder mergeGetOutState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn value) {
        if (getOutStateBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              getOutState_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.getDefaultInstance()) {
            getOutState_ =
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.newBuilder(getOutState_).mergeFrom(value).buildPartial();
          } else {
            getOutState_ = value;
          }
          onChanged();
        } else {
          getOutStateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;</code>
       */
      public Builder clearGetOutState() {
        if (getOutStateBuilder_ == null) {
          getOutState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.getDefaultInstance();
          onChanged();
        } else {
          getOutStateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.Builder getGetOutStateBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getGetOutStateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateInOrBuilder getGetOutStateOrBuilder() {
        if (getOutStateBuilder_ != null) {
          return getOutStateBuilder_.getMessageOrBuilder();
        } else {
          return getOutState_;
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateIn get_out_state = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateInOrBuilder> 
          getGetOutStateFieldBuilder() {
        if (getOutStateBuilder_ == null) {
          getOutStateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateIn.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateInOrBuilder>(
                  getOutState_,
                  getParentForChildren(),
                  isClean());
          getOutState_ = null;
        }
        return getOutStateBuilder_;
      }

      // optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo getDeviceInfo_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfoOrBuilder> getDeviceInfoBuilder_;
      /**
       * <code>optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;</code>
       */
      public boolean hasGetDeviceInfo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo getGetDeviceInfo() {
        if (getDeviceInfoBuilder_ == null) {
          return getDeviceInfo_;
        } else {
          return getDeviceInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;</code>
       */
      public Builder setGetDeviceInfo(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo value) {
        if (getDeviceInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getDeviceInfo_ = value;
          onChanged();
        } else {
          getDeviceInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;</code>
       */
      public Builder setGetDeviceInfo(
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.Builder builderForValue) {
        if (getDeviceInfoBuilder_ == null) {
          getDeviceInfo_ = builderForValue.build();
          onChanged();
        } else {
          getDeviceInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;</code>
       */
      public Builder mergeGetDeviceInfo(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo value) {
        if (getDeviceInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              getDeviceInfo_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.getDefaultInstance()) {
            getDeviceInfo_ =
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.newBuilder(getDeviceInfo_).mergeFrom(value).buildPartial();
          } else {
            getDeviceInfo_ = value;
          }
          onChanged();
        } else {
          getDeviceInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;</code>
       */
      public Builder clearGetDeviceInfo() {
        if (getDeviceInfoBuilder_ == null) {
          getDeviceInfo_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.getDefaultInstance();
          onChanged();
        } else {
          getDeviceInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.Builder getGetDeviceInfoBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getGetDeviceInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfoOrBuilder getGetDeviceInfoOrBuilder() {
        if (getDeviceInfoBuilder_ != null) {
          return getDeviceInfoBuilder_.getMessageOrBuilder();
        } else {
          return getDeviceInfo_;
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetDeviceInfo get_device_info = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfoOrBuilder> 
          getGetDeviceInfoFieldBuilder() {
        if (getDeviceInfoBuilder_ == null) {
          getDeviceInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfo.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetDeviceInfoOrBuilder>(
                  getDeviceInfo_,
                  getParentForChildren(),
                  isClean());
          getDeviceInfo_ = null;
        }
        return getDeviceInfoBuilder_;
      }

      // optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate firmwareUpdate_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateOrBuilder> firmwareUpdateBuilder_;
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;</code>
       */
      public boolean hasFirmwareUpdate() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate getFirmwareUpdate() {
        if (firmwareUpdateBuilder_ == null) {
          return firmwareUpdate_;
        } else {
          return firmwareUpdateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;</code>
       */
      public Builder setFirmwareUpdate(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate value) {
        if (firmwareUpdateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          firmwareUpdate_ = value;
          onChanged();
        } else {
          firmwareUpdateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;</code>
       */
      public Builder setFirmwareUpdate(
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.Builder builderForValue) {
        if (firmwareUpdateBuilder_ == null) {
          firmwareUpdate_ = builderForValue.build();
          onChanged();
        } else {
          firmwareUpdateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;</code>
       */
      public Builder mergeFirmwareUpdate(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate value) {
        if (firmwareUpdateBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              firmwareUpdate_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.getDefaultInstance()) {
            firmwareUpdate_ =
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.newBuilder(firmwareUpdate_).mergeFrom(value).buildPartial();
          } else {
            firmwareUpdate_ = value;
          }
          onChanged();
        } else {
          firmwareUpdateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;</code>
       */
      public Builder clearFirmwareUpdate() {
        if (firmwareUpdateBuilder_ == null) {
          firmwareUpdate_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.getDefaultInstance();
          onChanged();
        } else {
          firmwareUpdateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.Builder getFirmwareUpdateBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getFirmwareUpdateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateOrBuilder getFirmwareUpdateOrBuilder() {
        if (firmwareUpdateBuilder_ != null) {
          return firmwareUpdateBuilder_.getMessageOrBuilder();
        } else {
          return firmwareUpdate_;
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareUpdate firmware_update = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateOrBuilder> 
          getFirmwareUpdateFieldBuilder() {
        if (firmwareUpdateBuilder_ == null) {
          firmwareUpdateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdate.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareUpdateOrBuilder>(
                  firmwareUpdate_,
                  getParentForChildren(),
                  isClean());
          firmwareUpdate_ = null;
        }
        return firmwareUpdateBuilder_;
      }

      // optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState confirmationCrewState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewStateOrBuilder> confirmationCrewStateBuilder_;
      /**
       * <code>optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;</code>
       */
      public boolean hasConfirmationCrewState() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState getConfirmationCrewState() {
        if (confirmationCrewStateBuilder_ == null) {
          return confirmationCrewState_;
        } else {
          return confirmationCrewStateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;</code>
       */
      public Builder setConfirmationCrewState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState value) {
        if (confirmationCrewStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          confirmationCrewState_ = value;
          onChanged();
        } else {
          confirmationCrewStateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;</code>
       */
      public Builder setConfirmationCrewState(
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.Builder builderForValue) {
        if (confirmationCrewStateBuilder_ == null) {
          confirmationCrewState_ = builderForValue.build();
          onChanged();
        } else {
          confirmationCrewStateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;</code>
       */
      public Builder mergeConfirmationCrewState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState value) {
        if (confirmationCrewStateBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              confirmationCrewState_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.getDefaultInstance()) {
            confirmationCrewState_ =
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.newBuilder(confirmationCrewState_).mergeFrom(value).buildPartial();
          } else {
            confirmationCrewState_ = value;
          }
          onChanged();
        } else {
          confirmationCrewStateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;</code>
       */
      public Builder clearConfirmationCrewState() {
        if (confirmationCrewStateBuilder_ == null) {
          confirmationCrewState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.getDefaultInstance();
          onChanged();
        } else {
          confirmationCrewStateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.Builder getConfirmationCrewStateBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getConfirmationCrewStateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewStateOrBuilder getConfirmationCrewStateOrBuilder() {
        if (confirmationCrewStateBuilder_ != null) {
          return confirmationCrewStateBuilder_.getMessageOrBuilder();
        } else {
          return confirmationCrewState_;
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConfirmationCrewState confirmation_crew_state = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewStateOrBuilder> 
          getConfirmationCrewStateFieldBuilder() {
        if (confirmationCrewStateBuilder_ == null) {
          confirmationCrewStateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewState.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConfirmationCrewStateOrBuilder>(
                  confirmationCrewState_,
                  getParentForChildren(),
                  isClean());
          confirmationCrewState_ = null;
        }
        return confirmationCrewStateBuilder_;
      }

      // optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime readBlackBoxByTime_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTimeOrBuilder> readBlackBoxByTimeBuilder_;
      /**
       * <code>optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;</code>
       */
      public boolean hasReadBlackBoxByTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime getReadBlackBoxByTime() {
        if (readBlackBoxByTimeBuilder_ == null) {
          return readBlackBoxByTime_;
        } else {
          return readBlackBoxByTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;</code>
       */
      public Builder setReadBlackBoxByTime(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime value) {
        if (readBlackBoxByTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          readBlackBoxByTime_ = value;
          onChanged();
        } else {
          readBlackBoxByTimeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;</code>
       */
      public Builder setReadBlackBoxByTime(
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.Builder builderForValue) {
        if (readBlackBoxByTimeBuilder_ == null) {
          readBlackBoxByTime_ = builderForValue.build();
          onChanged();
        } else {
          readBlackBoxByTimeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;</code>
       */
      public Builder mergeReadBlackBoxByTime(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime value) {
        if (readBlackBoxByTimeBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              readBlackBoxByTime_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.getDefaultInstance()) {
            readBlackBoxByTime_ =
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.newBuilder(readBlackBoxByTime_).mergeFrom(value).buildPartial();
          } else {
            readBlackBoxByTime_ = value;
          }
          onChanged();
        } else {
          readBlackBoxByTimeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;</code>
       */
      public Builder clearReadBlackBoxByTime() {
        if (readBlackBoxByTimeBuilder_ == null) {
          readBlackBoxByTime_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.getDefaultInstance();
          onChanged();
        } else {
          readBlackBoxByTimeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.Builder getReadBlackBoxByTimeBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getReadBlackBoxByTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTimeOrBuilder getReadBlackBoxByTimeOrBuilder() {
        if (readBlackBoxByTimeBuilder_ != null) {
          return readBlackBoxByTimeBuilder_.getMessageOrBuilder();
        } else {
          return readBlackBoxByTime_;
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.ReadBlackBoxByTime read_black_box_by_time = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTimeOrBuilder> 
          getReadBlackBoxByTimeFieldBuilder() {
        if (readBlackBoxByTimeBuilder_ == null) {
          readBlackBoxByTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTime.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ReadBlackBoxByTimeOrBuilder>(
                  readBlackBoxByTime_,
                  getParentForChildren(),
                  isClean());
          readBlackBoxByTime_ = null;
        }
        return readBlackBoxByTimeBuilder_;
      }

      // optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox breakReadBlackBox_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBoxOrBuilder> breakReadBlackBoxBuilder_;
      /**
       * <code>optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;</code>
       */
      public boolean hasBreakReadBlackBox() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox getBreakReadBlackBox() {
        if (breakReadBlackBoxBuilder_ == null) {
          return breakReadBlackBox_;
        } else {
          return breakReadBlackBoxBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;</code>
       */
      public Builder setBreakReadBlackBox(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox value) {
        if (breakReadBlackBoxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          breakReadBlackBox_ = value;
          onChanged();
        } else {
          breakReadBlackBoxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;</code>
       */
      public Builder setBreakReadBlackBox(
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.Builder builderForValue) {
        if (breakReadBlackBoxBuilder_ == null) {
          breakReadBlackBox_ = builderForValue.build();
          onChanged();
        } else {
          breakReadBlackBoxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;</code>
       */
      public Builder mergeBreakReadBlackBox(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox value) {
        if (breakReadBlackBoxBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              breakReadBlackBox_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.getDefaultInstance()) {
            breakReadBlackBox_ =
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.newBuilder(breakReadBlackBox_).mergeFrom(value).buildPartial();
          } else {
            breakReadBlackBox_ = value;
          }
          onChanged();
        } else {
          breakReadBlackBoxBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;</code>
       */
      public Builder clearBreakReadBlackBox() {
        if (breakReadBlackBoxBuilder_ == null) {
          breakReadBlackBox_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.getDefaultInstance();
          onChanged();
        } else {
          breakReadBlackBoxBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.Builder getBreakReadBlackBoxBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getBreakReadBlackBoxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBoxOrBuilder getBreakReadBlackBoxOrBuilder() {
        if (breakReadBlackBoxBuilder_ != null) {
          return breakReadBlackBoxBuilder_.getMessageOrBuilder();
        } else {
          return breakReadBlackBox_;
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.BreakReadBlackBox break_read_black_box = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBoxOrBuilder> 
          getBreakReadBlackBoxFieldBuilder() {
        if (breakReadBlackBoxBuilder_ == null) {
          breakReadBlackBoxBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBox.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.BreakReadBlackBoxOrBuilder>(
                  breakReadBlackBox_,
                  getParentForChildren(),
                  isClean());
          breakReadBlackBox_ = null;
        }
        return breakReadBlackBoxBuilder_;
      }

      // optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate conditionLsCreate_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreateOrBuilder> conditionLsCreateBuilder_;
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;</code>
       */
      public boolean hasConditionLsCreate() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate getConditionLsCreate() {
        if (conditionLsCreateBuilder_ == null) {
          return conditionLsCreate_;
        } else {
          return conditionLsCreateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;</code>
       */
      public Builder setConditionLsCreate(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate value) {
        if (conditionLsCreateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          conditionLsCreate_ = value;
          onChanged();
        } else {
          conditionLsCreateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;</code>
       */
      public Builder setConditionLsCreate(
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.Builder builderForValue) {
        if (conditionLsCreateBuilder_ == null) {
          conditionLsCreate_ = builderForValue.build();
          onChanged();
        } else {
          conditionLsCreateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;</code>
       */
      public Builder mergeConditionLsCreate(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate value) {
        if (conditionLsCreateBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              conditionLsCreate_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.getDefaultInstance()) {
            conditionLsCreate_ =
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.newBuilder(conditionLsCreate_).mergeFrom(value).buildPartial();
          } else {
            conditionLsCreate_ = value;
          }
          onChanged();
        } else {
          conditionLsCreateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;</code>
       */
      public Builder clearConditionLsCreate() {
        if (conditionLsCreateBuilder_ == null) {
          conditionLsCreate_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.getDefaultInstance();
          onChanged();
        } else {
          conditionLsCreateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.Builder getConditionLsCreateBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getConditionLsCreateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreateOrBuilder getConditionLsCreateOrBuilder() {
        if (conditionLsCreateBuilder_ != null) {
          return conditionLsCreateBuilder_.getMessageOrBuilder();
        } else {
          return conditionLsCreate_;
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreateOrBuilder> 
          getConditionLsCreateFieldBuilder() {
        if (conditionLsCreateBuilder_ == null) {
          conditionLsCreateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreateOrBuilder>(
                  conditionLsCreate_,
                  getParentForChildren(),
                  isClean());
          conditionLsCreate_ = null;
        }
        return conditionLsCreateBuilder_;
      }

      // optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff inputAlarmOff_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOffOrBuilder> inputAlarmOffBuilder_;
      /**
       * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;</code>
       */
      public boolean hasInputAlarmOff() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff getInputAlarmOff() {
        if (inputAlarmOffBuilder_ == null) {
          return inputAlarmOff_;
        } else {
          return inputAlarmOffBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;</code>
       */
      public Builder setInputAlarmOff(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff value) {
        if (inputAlarmOffBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          inputAlarmOff_ = value;
          onChanged();
        } else {
          inputAlarmOffBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;</code>
       */
      public Builder setInputAlarmOff(
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.Builder builderForValue) {
        if (inputAlarmOffBuilder_ == null) {
          inputAlarmOff_ = builderForValue.build();
          onChanged();
        } else {
          inputAlarmOffBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;</code>
       */
      public Builder mergeInputAlarmOff(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff value) {
        if (inputAlarmOffBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              inputAlarmOff_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.getDefaultInstance()) {
            inputAlarmOff_ =
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.newBuilder(inputAlarmOff_).mergeFrom(value).buildPartial();
          } else {
            inputAlarmOff_ = value;
          }
          onChanged();
        } else {
          inputAlarmOffBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;</code>
       */
      public Builder clearInputAlarmOff() {
        if (inputAlarmOffBuilder_ == null) {
          inputAlarmOff_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.getDefaultInstance();
          onChanged();
        } else {
          inputAlarmOffBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.Builder getInputAlarmOffBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getInputAlarmOffFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOffOrBuilder getInputAlarmOffOrBuilder() {
        if (inputAlarmOffBuilder_ != null) {
          return inputAlarmOffBuilder_.getMessageOrBuilder();
        } else {
          return inputAlarmOff_;
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOffOrBuilder> 
          getInputAlarmOffFieldBuilder() {
        if (inputAlarmOffBuilder_ == null) {
          inputAlarmOffBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOffOrBuilder>(
                  inputAlarmOff_,
                  getParentForChildren(),
                  isClean());
          inputAlarmOff_ = null;
        }
        return inputAlarmOffBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.EquipmentCommandBase)
    }

    static {
      defaultInstance = new EquipmentCommandBase(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.EquipmentCommandBase)
  }

  public interface EquipmentAnswerBaseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 equipment_id = 1;
    /**
     * <code>optional uint32 equipment_id = 1;</code>
     */
    boolean hasEquipmentId();
    /**
     * <code>optional uint32 equipment_id = 1;</code>
     */
    int getEquipmentId();

    // optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;
    /**
     * <code>optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;</code>
     */
    boolean hasOutState();
    /**
     * <code>optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut getOutState();
    /**
     * <code>optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOutOrBuilder getOutStateOrBuilder();

    // optional .almaz2.rpc.commands.DeviceInfo device_info = 3;
    /**
     * <code>optional .almaz2.rpc.commands.DeviceInfo device_info = 3;</code>
     */
    boolean hasDeviceInfo();
    /**
     * <code>optional .almaz2.rpc.commands.DeviceInfo device_info = 3;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo getDeviceInfo();
    /**
     * <code>optional .almaz2.rpc.commands.DeviceInfo device_info = 3;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfoOrBuilder getDeviceInfoOrBuilder();

    // optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;</code>
     */
    boolean hasFirmwareBlock();
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock getFirmwareBlock();
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;</code>
     */
    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlockOrBuilder getFirmwareBlockOrBuilder();
  }
  /**
   * Protobuf type {@code almaz2.rpc.commands.EquipmentAnswerBase}
   *
   * <pre>
   **
   * Базовое сообщение ответа на команду от оборудования.
   * </pre>
   */
  public static final class EquipmentAnswerBase extends
      com.google.protobuf.GeneratedMessage
      implements EquipmentAnswerBaseOrBuilder {
    // Use EquipmentAnswerBase.newBuilder() to construct.
    private EquipmentAnswerBase(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EquipmentAnswerBase(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EquipmentAnswerBase defaultInstance;
    public static EquipmentAnswerBase getDefaultInstance() {
      return defaultInstance;
    }

    public EquipmentAnswerBase getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EquipmentAnswerBase(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              equipmentId_ = input.readUInt32();
              break;
            }
            case 18: {
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = outState_.toBuilder();
              }
              outState_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(outState_);
                outState_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = deviceInfo_.toBuilder();
              }
              deviceInfo_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(deviceInfo_);
                deviceInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = firmwareBlock_.toBuilder();
              }
              firmwareBlock_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(firmwareBlock_);
                firmwareBlock_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_EquipmentAnswerBase_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_EquipmentAnswerBase_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase.Builder.class);
    }

    public static com.google.protobuf.Parser<EquipmentAnswerBase> PARSER =
        new com.google.protobuf.AbstractParser<EquipmentAnswerBase>() {
      public EquipmentAnswerBase parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EquipmentAnswerBase(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EquipmentAnswerBase> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 equipment_id = 1;
    public static final int EQUIPMENT_ID_FIELD_NUMBER = 1;
    private int equipmentId_;
    /**
     * <code>optional uint32 equipment_id = 1;</code>
     */
    public boolean hasEquipmentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 equipment_id = 1;</code>
     */
    public int getEquipmentId() {
      return equipmentId_;
    }

    // optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;
    public static final int OUT_STATE_FIELD_NUMBER = 2;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut outState_;
    /**
     * <code>optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;</code>
     */
    public boolean hasOutState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut getOutState() {
      return outState_;
    }
    /**
     * <code>optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOutOrBuilder getOutStateOrBuilder() {
      return outState_;
    }

    // optional .almaz2.rpc.commands.DeviceInfo device_info = 3;
    public static final int DEVICE_INFO_FIELD_NUMBER = 3;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo deviceInfo_;
    /**
     * <code>optional .almaz2.rpc.commands.DeviceInfo device_info = 3;</code>
     */
    public boolean hasDeviceInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .almaz2.rpc.commands.DeviceInfo device_info = 3;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo getDeviceInfo() {
      return deviceInfo_;
    }
    /**
     * <code>optional .almaz2.rpc.commands.DeviceInfo device_info = 3;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfoOrBuilder getDeviceInfoOrBuilder() {
      return deviceInfo_;
    }

    // optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;
    public static final int FIRMWARE_BLOCK_FIELD_NUMBER = 4;
    private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock firmwareBlock_;
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;</code>
     */
    public boolean hasFirmwareBlock() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock getFirmwareBlock() {
      return firmwareBlock_;
    }
    /**
     * <code>optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;</code>
     */
    public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlockOrBuilder getFirmwareBlockOrBuilder() {
      return firmwareBlock_;
    }

    private void initFields() {
      equipmentId_ = 0;
      outState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.getDefaultInstance();
      deviceInfo_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.getDefaultInstance();
      firmwareBlock_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, equipmentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, outState_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, deviceInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, firmwareBlock_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, equipmentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, outState_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, deviceInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, firmwareBlock_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.rpc.commands.EquipmentAnswerBase}
     *
     * <pre>
     **
     * Базовое сообщение ответа на команду от оборудования.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBaseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_EquipmentAnswerBase_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_EquipmentAnswerBase_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase.class, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase.Builder.class);
      }

      // Construct using ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOutStateFieldBuilder();
          getDeviceInfoFieldBuilder();
          getFirmwareBlockFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        equipmentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (outStateBuilder_ == null) {
          outState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.getDefaultInstance();
        } else {
          outStateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (deviceInfoBuilder_ == null) {
          deviceInfo_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.getDefaultInstance();
        } else {
          deviceInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (firmwareBlockBuilder_ == null) {
          firmwareBlock_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.getDefaultInstance();
        } else {
          firmwareBlockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.internal_static_almaz2_rpc_commands_EquipmentAnswerBase_descriptor;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase getDefaultInstanceForType() {
        return ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase.getDefaultInstance();
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase build() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase buildPartial() {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase result = new ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.equipmentId_ = equipmentId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (outStateBuilder_ == null) {
          result.outState_ = outState_;
        } else {
          result.outState_ = outStateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (deviceInfoBuilder_ == null) {
          result.deviceInfo_ = deviceInfo_;
        } else {
          result.deviceInfo_ = deviceInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (firmwareBlockBuilder_ == null) {
          result.firmwareBlock_ = firmwareBlock_;
        } else {
          result.firmwareBlock_ = firmwareBlockBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase) {
          return mergeFrom((ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase other) {
        if (other == ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase.getDefaultInstance()) return this;
        if (other.hasEquipmentId()) {
          setEquipmentId(other.getEquipmentId());
        }
        if (other.hasOutState()) {
          mergeOutState(other.getOutState());
        }
        if (other.hasDeviceInfo()) {
          mergeDeviceInfo(other.getDeviceInfo());
        }
        if (other.hasFirmwareBlock()) {
          mergeFirmwareBlock(other.getFirmwareBlock());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.EquipmentAnswerBase) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 equipment_id = 1;
      private int equipmentId_ ;
      /**
       * <code>optional uint32 equipment_id = 1;</code>
       */
      public boolean hasEquipmentId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 equipment_id = 1;</code>
       */
      public int getEquipmentId() {
        return equipmentId_;
      }
      /**
       * <code>optional uint32 equipment_id = 1;</code>
       */
      public Builder setEquipmentId(int value) {
        bitField0_ |= 0x00000001;
        equipmentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 equipment_id = 1;</code>
       */
      public Builder clearEquipmentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        equipmentId_ = 0;
        onChanged();
        return this;
      }

      // optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut outState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOutOrBuilder> outStateBuilder_;
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;</code>
       */
      public boolean hasOutState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut getOutState() {
        if (outStateBuilder_ == null) {
          return outState_;
        } else {
          return outStateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;</code>
       */
      public Builder setOutState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut value) {
        if (outStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outState_ = value;
          onChanged();
        } else {
          outStateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;</code>
       */
      public Builder setOutState(
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.Builder builderForValue) {
        if (outStateBuilder_ == null) {
          outState_ = builderForValue.build();
          onChanged();
        } else {
          outStateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;</code>
       */
      public Builder mergeOutState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut value) {
        if (outStateBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              outState_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.getDefaultInstance()) {
            outState_ =
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.newBuilder(outState_).mergeFrom(value).buildPartial();
          } else {
            outState_ = value;
          }
          onChanged();
        } else {
          outStateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;</code>
       */
      public Builder clearOutState() {
        if (outStateBuilder_ == null) {
          outState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.getDefaultInstance();
          onChanged();
        } else {
          outStateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.Builder getOutStateBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getOutStateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOutOrBuilder getOutStateOrBuilder() {
        if (outStateBuilder_ != null) {
          return outStateBuilder_.getMessageOrBuilder();
        } else {
          return outState_;
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.GetOutStateOut out_state = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOutOrBuilder> 
          getOutStateFieldBuilder() {
        if (outStateBuilder_ == null) {
          outStateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOut.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.GetOutStateOutOrBuilder>(
                  outState_,
                  getParentForChildren(),
                  isClean());
          outState_ = null;
        }
        return outStateBuilder_;
      }

      // optional .almaz2.rpc.commands.DeviceInfo device_info = 3;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo deviceInfo_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfoOrBuilder> deviceInfoBuilder_;
      /**
       * <code>optional .almaz2.rpc.commands.DeviceInfo device_info = 3;</code>
       */
      public boolean hasDeviceInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .almaz2.rpc.commands.DeviceInfo device_info = 3;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo getDeviceInfo() {
        if (deviceInfoBuilder_ == null) {
          return deviceInfo_;
        } else {
          return deviceInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.DeviceInfo device_info = 3;</code>
       */
      public Builder setDeviceInfo(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo value) {
        if (deviceInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deviceInfo_ = value;
          onChanged();
        } else {
          deviceInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.DeviceInfo device_info = 3;</code>
       */
      public Builder setDeviceInfo(
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.Builder builderForValue) {
        if (deviceInfoBuilder_ == null) {
          deviceInfo_ = builderForValue.build();
          onChanged();
        } else {
          deviceInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.DeviceInfo device_info = 3;</code>
       */
      public Builder mergeDeviceInfo(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo value) {
        if (deviceInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              deviceInfo_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.getDefaultInstance()) {
            deviceInfo_ =
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.newBuilder(deviceInfo_).mergeFrom(value).buildPartial();
          } else {
            deviceInfo_ = value;
          }
          onChanged();
        } else {
          deviceInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.DeviceInfo device_info = 3;</code>
       */
      public Builder clearDeviceInfo() {
        if (deviceInfoBuilder_ == null) {
          deviceInfo_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.getDefaultInstance();
          onChanged();
        } else {
          deviceInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.DeviceInfo device_info = 3;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.Builder getDeviceInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDeviceInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.rpc.commands.DeviceInfo device_info = 3;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfoOrBuilder getDeviceInfoOrBuilder() {
        if (deviceInfoBuilder_ != null) {
          return deviceInfoBuilder_.getMessageOrBuilder();
        } else {
          return deviceInfo_;
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.DeviceInfo device_info = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfoOrBuilder> 
          getDeviceInfoFieldBuilder() {
        if (deviceInfoBuilder_ == null) {
          deviceInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfo.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.DeviceInfoOrBuilder>(
                  deviceInfo_,
                  getParentForChildren(),
                  isClean());
          deviceInfo_ = null;
        }
        return deviceInfoBuilder_;
      }

      // optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;
      private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock firmwareBlock_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlockOrBuilder> firmwareBlockBuilder_;
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;</code>
       */
      public boolean hasFirmwareBlock() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock getFirmwareBlock() {
        if (firmwareBlockBuilder_ == null) {
          return firmwareBlock_;
        } else {
          return firmwareBlockBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;</code>
       */
      public Builder setFirmwareBlock(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock value) {
        if (firmwareBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          firmwareBlock_ = value;
          onChanged();
        } else {
          firmwareBlockBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;</code>
       */
      public Builder setFirmwareBlock(
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.Builder builderForValue) {
        if (firmwareBlockBuilder_ == null) {
          firmwareBlock_ = builderForValue.build();
          onChanged();
        } else {
          firmwareBlockBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;</code>
       */
      public Builder mergeFirmwareBlock(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock value) {
        if (firmwareBlockBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              firmwareBlock_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.getDefaultInstance()) {
            firmwareBlock_ =
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.newBuilder(firmwareBlock_).mergeFrom(value).buildPartial();
          } else {
            firmwareBlock_ = value;
          }
          onChanged();
        } else {
          firmwareBlockBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;</code>
       */
      public Builder clearFirmwareBlock() {
        if (firmwareBlockBuilder_ == null) {
          firmwareBlock_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.getDefaultInstance();
          onChanged();
        } else {
          firmwareBlockBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.Builder getFirmwareBlockBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getFirmwareBlockFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;</code>
       */
      public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlockOrBuilder getFirmwareBlockOrBuilder() {
        if (firmwareBlockBuilder_ != null) {
          return firmwareBlockBuilder_.getMessageOrBuilder();
        } else {
          return firmwareBlock_;
        }
      }
      /**
       * <code>optional .almaz2.rpc.commands.FirmwareBlock firmware_block = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlockOrBuilder> 
          getFirmwareBlockFieldBuilder() {
        if (firmwareBlockBuilder_ == null) {
          firmwareBlockBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlock.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.FirmwareBlockOrBuilder>(
                  firmwareBlock_,
                  getParentForChildren(),
                  isClean());
          firmwareBlock_ = null;
        }
        return firmwareBlockBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.EquipmentAnswerBase)
    }

    static {
      defaultInstance = new EquipmentAnswerBase(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.EquipmentAnswerBase)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_BlackBoxInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_BlackBoxInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_FirmwareUpdateInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_FirmwareUpdateInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_SettingsInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_SettingsInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_GetDeviceInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_GetDeviceInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_DeviceInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_DeviceInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_FirmwareUpdate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_FirmwareUpdate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_FirmwareBlock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_FirmwareBlock_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_SetLogicalMode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_SetLogicalMode_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_SetOutState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_SetOutState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_GetOutStateIn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_GetOutStateIn_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_GetOutStateOut_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_GetOutStateOut_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_ConfirmationCrewState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_ConfirmationCrewState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_ReadBlackBoxByTime_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_ReadBlackBoxByTime_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_BreakReadBlackBox_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_BreakReadBlackBox_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_ConditionLifeSignal_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_ConditionLifeSignal_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_ConditionLSCreate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_ConditionLSCreate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_InputAlarmOff_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_InputAlarmOff_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_EquipmentCommandBase_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_EquipmentCommandBase_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_rpc_commands_EquipmentAnswerBase_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_rpc_commands_EquipmentAnswerBase_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030equipment_commands.proto\022\023almaz2.rpc.c" +
      "ommands\032\016statuses.proto\"w\n\014BlackBoxInfo\022" +
      "\022\n\007current\030\001 \001(\r:\0010\022\020\n\005total\030\002 \001(\r:\0010\022/\n" +
      "\006status\030\003 \001(\0162\037.almaz2.rpc.commands.Stat" +
      "usInfo\022\020\n\010time_get\030\004 \001(\r\"k\n\022FirmwareUpda" +
      "teInfo\022\022\n\007current\030\001 \001(\r:\0010\022\020\n\005total\030\002 \001(" +
      "\r:\0010\022/\n\006status\030\003 \001(\0162\037.almaz2.rpc.comman" +
      "ds.StatusInfo\"$\n\014SettingsInfo\022\024\n\006actual\030" +
      "\001 \001(\010:\004true\"\'\n\rGetDeviceInfo\022\026\n\013placehol" +
      "der\030\001 \001(\r:\0010\"\014\n\nDeviceInfo\"<\n\016FirmwareUp",
      "date\022\030\n\020firmware_version\030\001 \001(\t\022\020\n\010firmwa" +
      "re\030\002 \001(\014\"F\n\rFirmwareBlock\0225\n\004info\030\001 \001(\0132" +
      "\'.almaz2.rpc.commands.FirmwareUpdateInfo" +
      "\"@\n\016SetLogicalMode\022.\n\004mode\030\001 \001(\0162 .almaz" +
      "2.rpc.commands.LogicalMode\"K\n\013SetOutStat" +
      "e\022\016\n\006output\030\001 \001(\r\022,\n\005state\030\002 \001(\0162\035.almaz" +
      "2.rpc.commands.OutState\"\037\n\rGetOutStateIn" +
      "\022\016\n\006output\030\001 \001(\r\"N\n\016GetOutStateOut\022\016\n\006ou" +
      "tput\030\001 \001(\r\022,\n\005state\030\002 \001(\0162\035.almaz2.rpc.c" +
      "ommands.OutState\"\303\001\n\025ConfirmationCrewSta",
      "te\022C\n\005state\030\001 \001(\01624.almaz2.rpc.commands." +
      "ConfirmationCrewState.CrewState\"e\n\tCrewS" +
      "tate\022\026\n\022CREW_STATE_ARRIVED\020\000\022\026\n\022CREW_STA" +
      "TE_STARTED\020\001\022\023\n\017CREW_STATE_FREE\020\002\022\023\n\017CRE" +
      "W_STATE_BUSY\020\003\"P\n\022ReadBlackBoxByTime\022\026\n\t" +
      "interface\030\001 \001(\t:\003TCP\022\021\n\tfrom_time\030\002 \001(\r\022" +
      "\017\n\007to_time\030\003 \001(\r\"+\n\021BreakReadBlackBox\022\026\n" +
      "\013placeholder\030\001 \001(\r:\0010\"q\n\023ConditionLifeSi" +
      "gnal\022\r\n\005max_t\030\001 \001(\r\022\r\n\005min_t\030\002 \001(\r\022\014\n\004mo" +
      "ve\030\003 \001(\r\022\r\n\005speed\030\004 \001(\r\022\016\n\006course\030\005 \001(\r\022",
      "\017\n\007mileage\030\006 \001(\r\"\271\002\n\021ConditionLSCreate\022B" +
      "\n\004mode\030\001 \001(\01624.almaz2.rpc.commands.Condi" +
      "tionLSCreate.EquipmentMode\022;\n\tcondition\030" +
      "\002 \001(\0132(.almaz2.rpc.commands.ConditionLif" +
      "eSignal\022\017\n\007version\030\003 \001(\r\"\221\001\n\rEquipmentMo" +
      "de\022\031\n\025EQUIPMENT_MODE_ACTIVE\020\000\022\030\n\024EQUIPME" +
      "NT_MODE_GUARD\020\001\022\030\n\024EQUIPMENT_MODE_SLEEP\020" +
      "\002\022\027\n\023EQUIPMENT_MODE_WAIT\020\003\022\030\n\024EQUIPMENT_" +
      "MODE_ALARM\020\004\"\330\001\n\rInputAlarmOff\022:\n\004type\030\001" +
      " \001(\0162,.almaz2.rpc.commands.InputAlarmOff",
      ".InputType\022\r\n\005input\030\002 \001(\r\"|\n\tInputType\022\030" +
      "\n\024INPUT_TYPE_UNIVERSAL\020\000\022\024\n\020INPUT_TYPE_C" +
      "OUNT\020\001\022\023\n\017INPUT_TYPE_ENUM\020\002\022\026\n\022INPUT_TYP" +
      "E_DIGITAL\020\003\022\022\n\016INPUT_TYPE_ADC\020\004\"\270\005\n\024Equi" +
      "pmentCommandBase\022\024\n\014equipment_id\030\001 \001(\r\022=" +
      "\n\020set_logical_mode\030\002 \001(\0132#.almaz2.rpc.co" +
      "mmands.SetLogicalMode\0227\n\rset_out_state\030\003" +
      " \001(\0132 .almaz2.rpc.commands.SetOutState\0229" +
      "\n\rget_out_state\030\004 \001(\0132\".almaz2.rpc.comma" +
      "nds.GetOutStateIn\022;\n\017get_device_info\030\005 \001",
      "(\0132\".almaz2.rpc.commands.GetDeviceInfo\022<" +
      "\n\017firmware_update\030\006 \001(\0132#.almaz2.rpc.com" +
      "mands.FirmwareUpdate\022K\n\027confirmation_cre" +
      "w_state\030\007 \001(\0132*.almaz2.rpc.commands.Conf" +
      "irmationCrewState\022G\n\026read_black_box_by_t" +
      "ime\030\010 \001(\0132\'.almaz2.rpc.commands.ReadBlac" +
      "kBoxByTime\022D\n\024break_read_black_box\030\t \001(\013" +
      "2&.almaz2.rpc.commands.BreakReadBlackBox" +
      "\022C\n\023condition_ls_create\030\n \001(\0132&.almaz2.r" +
      "pc.commands.ConditionLSCreate\022;\n\017input_a",
      "larm_off\030\013 \001(\0132\".almaz2.rpc.commands.Inp" +
      "utAlarmOff\"\325\001\n\023EquipmentAnswerBase\022\024\n\014eq" +
      "uipment_id\030\001 \001(\r\0226\n\tout_state\030\002 \001(\0132#.al" +
      "maz2.rpc.commands.GetOutStateOut\0224\n\013devi" +
      "ce_info\030\003 \001(\0132\037.almaz2.rpc.commands.Devi" +
      "ceInfo\022:\n\016firmware_block\030\004 \001(\0132\".almaz2." +
      "rpc.commands.FirmwareBlock*D\n\nStatusInfo" +
      "\022\020\n\014ERROR_STATUS\020\000\022\r\n\tOK_STATUS\020\001\022\025\n\021PRO" +
      "CESSING_STATUS\020\002*,\n\013LogicalMode\022\016\n\nMONIT" +
      "ORING\020\001\022\r\n\tBLACK_BOX\020\002*/\n\010OutState\022\020\n\014OU",
      "T_STATE_ON\020\001\022\021\n\rOUT_STATE_OFF\020\002B6\n\034ru.ko" +
      "dos.almaz2.rpc.commandsB\026EquipmentComman" +
      "dsClass"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_almaz2_rpc_commands_BlackBoxInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_almaz2_rpc_commands_BlackBoxInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_BlackBoxInfo_descriptor,
              new java.lang.String[] { "Current", "Total", "Status", "TimeGet", });
          internal_static_almaz2_rpc_commands_FirmwareUpdateInfo_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_almaz2_rpc_commands_FirmwareUpdateInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_FirmwareUpdateInfo_descriptor,
              new java.lang.String[] { "Current", "Total", "Status", });
          internal_static_almaz2_rpc_commands_SettingsInfo_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_almaz2_rpc_commands_SettingsInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_SettingsInfo_descriptor,
              new java.lang.String[] { "Actual", });
          internal_static_almaz2_rpc_commands_GetDeviceInfo_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_almaz2_rpc_commands_GetDeviceInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_GetDeviceInfo_descriptor,
              new java.lang.String[] { "Placeholder", });
          internal_static_almaz2_rpc_commands_DeviceInfo_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_almaz2_rpc_commands_DeviceInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_DeviceInfo_descriptor,
              new java.lang.String[] { });
          internal_static_almaz2_rpc_commands_FirmwareUpdate_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_almaz2_rpc_commands_FirmwareUpdate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_FirmwareUpdate_descriptor,
              new java.lang.String[] { "FirmwareVersion", "Firmware", });
          internal_static_almaz2_rpc_commands_FirmwareBlock_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_almaz2_rpc_commands_FirmwareBlock_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_FirmwareBlock_descriptor,
              new java.lang.String[] { "Info", });
          internal_static_almaz2_rpc_commands_SetLogicalMode_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_almaz2_rpc_commands_SetLogicalMode_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_SetLogicalMode_descriptor,
              new java.lang.String[] { "Mode", });
          internal_static_almaz2_rpc_commands_SetOutState_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_almaz2_rpc_commands_SetOutState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_SetOutState_descriptor,
              new java.lang.String[] { "Output", "State", });
          internal_static_almaz2_rpc_commands_GetOutStateIn_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_almaz2_rpc_commands_GetOutStateIn_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_GetOutStateIn_descriptor,
              new java.lang.String[] { "Output", });
          internal_static_almaz2_rpc_commands_GetOutStateOut_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_almaz2_rpc_commands_GetOutStateOut_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_GetOutStateOut_descriptor,
              new java.lang.String[] { "Output", "State", });
          internal_static_almaz2_rpc_commands_ConfirmationCrewState_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_almaz2_rpc_commands_ConfirmationCrewState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_ConfirmationCrewState_descriptor,
              new java.lang.String[] { "State", });
          internal_static_almaz2_rpc_commands_ReadBlackBoxByTime_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_almaz2_rpc_commands_ReadBlackBoxByTime_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_ReadBlackBoxByTime_descriptor,
              new java.lang.String[] { "Interface", "FromTime", "ToTime", });
          internal_static_almaz2_rpc_commands_BreakReadBlackBox_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_almaz2_rpc_commands_BreakReadBlackBox_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_BreakReadBlackBox_descriptor,
              new java.lang.String[] { "Placeholder", });
          internal_static_almaz2_rpc_commands_ConditionLifeSignal_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_almaz2_rpc_commands_ConditionLifeSignal_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_ConditionLifeSignal_descriptor,
              new java.lang.String[] { "MaxT", "MinT", "Move", "Speed", "Course", "Mileage", });
          internal_static_almaz2_rpc_commands_ConditionLSCreate_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_almaz2_rpc_commands_ConditionLSCreate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_ConditionLSCreate_descriptor,
              new java.lang.String[] { "Mode", "Condition", "Version", });
          internal_static_almaz2_rpc_commands_InputAlarmOff_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_almaz2_rpc_commands_InputAlarmOff_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_InputAlarmOff_descriptor,
              new java.lang.String[] { "Type", "Input", });
          internal_static_almaz2_rpc_commands_EquipmentCommandBase_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_almaz2_rpc_commands_EquipmentCommandBase_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_EquipmentCommandBase_descriptor,
              new java.lang.String[] { "EquipmentId", "SetLogicalMode", "SetOutState", "GetOutState", "GetDeviceInfo", "FirmwareUpdate", "ConfirmationCrewState", "ReadBlackBoxByTime", "BreakReadBlackBox", "ConditionLsCreate", "InputAlarmOff", });
          internal_static_almaz2_rpc_commands_EquipmentAnswerBase_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_almaz2_rpc_commands_EquipmentAnswerBase_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_rpc_commands_EquipmentAnswerBase_descriptor,
              new java.lang.String[] { "EquipmentId", "OutState", "DeviceInfo", "FirmwareBlock", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ru.kodos.almaz2.domain_objects.StatusesClass.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
