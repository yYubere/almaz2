// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: control_object_commands.proto

package ru.kodos.almaz2.rpc.commands;

public final class ControlObjectCommandsClass {
    private ControlObjectCommandsClass() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }

    public interface SetMonitoringLogicalModeOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // optional .almaz2.rpc.commands.SetLogicalMode mode = 1;

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
         */
        boolean hasMode();

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode getMode();

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder getModeOrBuilder();
    }

    /**
     * Protobuf type {@code almaz2.rpc.commands.SetMonitoringLogicalMode}
     */
    public static final class SetMonitoringLogicalMode extends
            com.google.protobuf.GeneratedMessage
            implements SetMonitoringLogicalModeOrBuilder {
        // Use SetMonitoringLogicalMode.newBuilder() to construct.
        private SetMonitoringLogicalMode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private SetMonitoringLogicalMode(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private static final SetMonitoringLogicalMode defaultInstance;

        public static SetMonitoringLogicalMode getDefaultInstance() {
            return defaultInstance;
        }

        public SetMonitoringLogicalMode getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private SetMonitoringLogicalMode(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                                subBuilder = mode_.toBuilder();
                            }
                            mode_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(mode_);
                                mode_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000001;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetMonitoringLogicalMode_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetMonitoringLogicalMode_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode.class, ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode.Builder.class);
        }

        public static com.google.protobuf.Parser<SetMonitoringLogicalMode> PARSER =
                new com.google.protobuf.AbstractParser<SetMonitoringLogicalMode>() {
                    public SetMonitoringLogicalMode parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new SetMonitoringLogicalMode(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<SetMonitoringLogicalMode> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // optional .almaz2.rpc.commands.SetLogicalMode mode = 1;
        public static final int MODE_FIELD_NUMBER = 1;
        private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode mode_;

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
         */
        public boolean hasMode() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode getMode() {
            return mode_;
        }

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder getModeOrBuilder() {
            return mode_;
        }

        private void initFields() {
            mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeMessage(1, mode_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, mode_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code almaz2.rpc.commands.SetMonitoringLogicalMode}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalModeOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetMonitoringLogicalMode_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetMonitoringLogicalMode_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode.class, ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode.Builder.class);
            }

            // Construct using ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getModeFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                if (modeBuilder_ == null) {
                    mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
                } else {
                    modeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetMonitoringLogicalMode_descriptor;
            }

            public ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode getDefaultInstanceForType() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode.getDefaultInstance();
            }

            public ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode build() {
                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode buildPartial() {
                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode result = new ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                if (modeBuilder_ == null) {
                    result.mode_ = mode_;
                } else {
                    result.mode_ = modeBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode) {
                    return mergeFrom((ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode other) {
                if (other == ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode.getDefaultInstance())
                    return this;
                if (other.hasMode()) {
                    mergeMode(other.getMode());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetMonitoringLogicalMode) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            // optional .almaz2.rpc.commands.SetLogicalMode mode = 1;
            private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder> modeBuilder_;

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public boolean hasMode() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode getMode() {
                if (modeBuilder_ == null) {
                    return mode_;
                } else {
                    return modeBuilder_.getMessage();
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public Builder setMode(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode value) {
                if (modeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    mode_ = value;
                    onChanged();
                } else {
                    modeBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public Builder setMode(
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder builderForValue) {
                if (modeBuilder_ == null) {
                    mode_ = builderForValue.build();
                    onChanged();
                } else {
                    modeBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public Builder mergeMode(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode value) {
                if (modeBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001) &&
                            mode_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance()) {
                        mode_ =
                                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.newBuilder(mode_).mergeFrom(value).buildPartial();
                    } else {
                        mode_ = value;
                    }
                    onChanged();
                } else {
                    modeBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public Builder clearMode() {
                if (modeBuilder_ == null) {
                    mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
                    onChanged();
                } else {
                    modeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder getModeBuilder() {
                bitField0_ |= 0x00000001;
                onChanged();
                return getModeFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder getModeOrBuilder() {
                if (modeBuilder_ != null) {
                    return modeBuilder_.getMessageOrBuilder();
                } else {
                    return mode_;
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder>
            getModeFieldBuilder() {
                if (modeBuilder_ == null) {
                    modeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder>(
                            mode_,
                            getParentForChildren(),
                            isClean());
                    mode_ = null;
                }
                return modeBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.SetMonitoringLogicalMode)
        }

        static {
            defaultInstance = new SetMonitoringLogicalMode(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.SetMonitoringLogicalMode)
    }

    public interface SetBlackBoxLogicalModeOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // optional .almaz2.rpc.commands.SetLogicalMode mode = 1;

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
         */
        boolean hasMode();

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode getMode();

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder getModeOrBuilder();
    }

    /**
     * Protobuf type {@code almaz2.rpc.commands.SetBlackBoxLogicalMode}
     */
    public static final class SetBlackBoxLogicalMode extends
            com.google.protobuf.GeneratedMessage
            implements SetBlackBoxLogicalModeOrBuilder {
        // Use SetBlackBoxLogicalMode.newBuilder() to construct.
        private SetBlackBoxLogicalMode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private SetBlackBoxLogicalMode(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private static final SetBlackBoxLogicalMode defaultInstance;

        public static SetBlackBoxLogicalMode getDefaultInstance() {
            return defaultInstance;
        }

        public SetBlackBoxLogicalMode getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private SetBlackBoxLogicalMode(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                                subBuilder = mode_.toBuilder();
                            }
                            mode_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(mode_);
                                mode_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000001;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetBlackBoxLogicalMode_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetBlackBoxLogicalMode_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode.class, ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode.Builder.class);
        }

        public static com.google.protobuf.Parser<SetBlackBoxLogicalMode> PARSER =
                new com.google.protobuf.AbstractParser<SetBlackBoxLogicalMode>() {
                    public SetBlackBoxLogicalMode parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new SetBlackBoxLogicalMode(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<SetBlackBoxLogicalMode> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // optional .almaz2.rpc.commands.SetLogicalMode mode = 1;
        public static final int MODE_FIELD_NUMBER = 1;
        private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode mode_;

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
         */
        public boolean hasMode() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode getMode() {
            return mode_;
        }

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder getModeOrBuilder() {
            return mode_;
        }

        private void initFields() {
            mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeMessage(1, mode_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, mode_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code almaz2.rpc.commands.SetBlackBoxLogicalMode}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalModeOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetBlackBoxLogicalMode_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetBlackBoxLogicalMode_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode.class, ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode.Builder.class);
            }

            // Construct using ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getModeFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                if (modeBuilder_ == null) {
                    mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
                } else {
                    modeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetBlackBoxLogicalMode_descriptor;
            }

            public ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode getDefaultInstanceForType() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode.getDefaultInstance();
            }

            public ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode build() {
                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode buildPartial() {
                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode result = new ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                if (modeBuilder_ == null) {
                    result.mode_ = mode_;
                } else {
                    result.mode_ = modeBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode) {
                    return mergeFrom((ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode other) {
                if (other == ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode.getDefaultInstance())
                    return this;
                if (other.hasMode()) {
                    mergeMode(other.getMode());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetBlackBoxLogicalMode) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            // optional .almaz2.rpc.commands.SetLogicalMode mode = 1;
            private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder> modeBuilder_;

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public boolean hasMode() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode getMode() {
                if (modeBuilder_ == null) {
                    return mode_;
                } else {
                    return modeBuilder_.getMessage();
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public Builder setMode(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode value) {
                if (modeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    mode_ = value;
                    onChanged();
                } else {
                    modeBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public Builder setMode(
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder builderForValue) {
                if (modeBuilder_ == null) {
                    mode_ = builderForValue.build();
                    onChanged();
                } else {
                    modeBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public Builder mergeMode(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode value) {
                if (modeBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001) &&
                            mode_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance()) {
                        mode_ =
                                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.newBuilder(mode_).mergeFrom(value).buildPartial();
                    } else {
                        mode_ = value;
                    }
                    onChanged();
                } else {
                    modeBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public Builder clearMode() {
                if (modeBuilder_ == null) {
                    mode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
                    onChanged();
                } else {
                    modeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder getModeBuilder() {
                bitField0_ |= 0x00000001;
                onChanged();
                return getModeFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder getModeOrBuilder() {
                if (modeBuilder_ != null) {
                    return modeBuilder_.getMessageOrBuilder();
                } else {
                    return mode_;
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode mode = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder>
            getModeFieldBuilder() {
                if (modeBuilder_ == null) {
                    modeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder>(
                            mode_,
                            getParentForChildren(),
                            isClean());
                    mode_ = null;
                }
                return modeBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.SetBlackBoxLogicalMode)
        }

        static {
            defaultInstance = new SetBlackBoxLogicalMode(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.SetBlackBoxLogicalMode)
    }

    public interface SetOnOutStateOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // optional .almaz2.rpc.commands.SetOutState state = 1;

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
         */
        boolean hasState();

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState getState();

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder getStateOrBuilder();
    }

    /**
     * Protobuf type {@code almaz2.rpc.commands.SetOnOutState}
     */
    public static final class SetOnOutState extends
            com.google.protobuf.GeneratedMessage
            implements SetOnOutStateOrBuilder {
        // Use SetOnOutState.newBuilder() to construct.
        private SetOnOutState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private SetOnOutState(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private static final SetOnOutState defaultInstance;

        public static SetOnOutState getDefaultInstance() {
            return defaultInstance;
        }

        public SetOnOutState getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private SetOnOutState(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                                subBuilder = state_.toBuilder();
                            }
                            state_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(state_);
                                state_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000001;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetOnOutState_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetOnOutState_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState.class, ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState.Builder.class);
        }

        public static com.google.protobuf.Parser<SetOnOutState> PARSER =
                new com.google.protobuf.AbstractParser<SetOnOutState>() {
                    public SetOnOutState parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new SetOnOutState(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<SetOnOutState> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // optional .almaz2.rpc.commands.SetOutState state = 1;
        public static final int STATE_FIELD_NUMBER = 1;
        private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState state_;

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
         */
        public boolean hasState() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState getState() {
            return state_;
        }

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder getStateOrBuilder() {
            return state_;
        }

        private void initFields() {
            state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeMessage(1, state_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, state_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code almaz2.rpc.commands.SetOnOutState}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutStateOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetOnOutState_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetOnOutState_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState.class, ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState.Builder.class);
            }

            // Construct using ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getStateFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                if (stateBuilder_ == null) {
                    state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
                } else {
                    stateBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetOnOutState_descriptor;
            }

            public ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState getDefaultInstanceForType() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState.getDefaultInstance();
            }

            public ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState build() {
                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState buildPartial() {
                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState result = new ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                if (stateBuilder_ == null) {
                    result.state_ = state_;
                } else {
                    result.state_ = stateBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState) {
                    return mergeFrom((ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState other) {
                if (other == ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState.getDefaultInstance())
                    return this;
                if (other.hasState()) {
                    mergeState(other.getState());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOnOutState) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            // optional .almaz2.rpc.commands.SetOutState state = 1;
            private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder> stateBuilder_;

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public boolean hasState() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState getState() {
                if (stateBuilder_ == null) {
                    return state_;
                } else {
                    return stateBuilder_.getMessage();
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public Builder setState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState value) {
                if (stateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    state_ = value;
                    onChanged();
                } else {
                    stateBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public Builder setState(
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder builderForValue) {
                if (stateBuilder_ == null) {
                    state_ = builderForValue.build();
                    onChanged();
                } else {
                    stateBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public Builder mergeState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState value) {
                if (stateBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001) &&
                            state_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance()) {
                        state_ =
                                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.newBuilder(state_).mergeFrom(value).buildPartial();
                    } else {
                        state_ = value;
                    }
                    onChanged();
                } else {
                    stateBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public Builder clearState() {
                if (stateBuilder_ == null) {
                    state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
                    onChanged();
                } else {
                    stateBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder getStateBuilder() {
                bitField0_ |= 0x00000001;
                onChanged();
                return getStateFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder getStateOrBuilder() {
                if (stateBuilder_ != null) {
                    return stateBuilder_.getMessageOrBuilder();
                } else {
                    return state_;
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder>
            getStateFieldBuilder() {
                if (stateBuilder_ == null) {
                    stateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder>(
                            state_,
                            getParentForChildren(),
                            isClean());
                    state_ = null;
                }
                return stateBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.SetOnOutState)
        }

        static {
            defaultInstance = new SetOnOutState(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.SetOnOutState)
    }

    public interface SetOffOutStateOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // optional .almaz2.rpc.commands.SetOutState state = 1;

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
         */
        boolean hasState();

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState getState();

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder getStateOrBuilder();
    }

    /**
     * Protobuf type {@code almaz2.rpc.commands.SetOffOutState}
     */
    public static final class SetOffOutState extends
            com.google.protobuf.GeneratedMessage
            implements SetOffOutStateOrBuilder {
        // Use SetOffOutState.newBuilder() to construct.
        private SetOffOutState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private SetOffOutState(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private static final SetOffOutState defaultInstance;

        public static SetOffOutState getDefaultInstance() {
            return defaultInstance;
        }

        public SetOffOutState getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private SetOffOutState(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                                subBuilder = state_.toBuilder();
                            }
                            state_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(state_);
                                state_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000001;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetOffOutState_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetOffOutState_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState.class, ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState.Builder.class);
        }

        public static com.google.protobuf.Parser<SetOffOutState> PARSER =
                new com.google.protobuf.AbstractParser<SetOffOutState>() {
                    public SetOffOutState parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new SetOffOutState(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<SetOffOutState> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // optional .almaz2.rpc.commands.SetOutState state = 1;
        public static final int STATE_FIELD_NUMBER = 1;
        private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState state_;

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
         */
        public boolean hasState() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState getState() {
            return state_;
        }

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder getStateOrBuilder() {
            return state_;
        }

        private void initFields() {
            state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeMessage(1, state_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, state_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code almaz2.rpc.commands.SetOffOutState}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutStateOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetOffOutState_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetOffOutState_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState.class, ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState.Builder.class);
            }

            // Construct using ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getStateFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                if (stateBuilder_ == null) {
                    state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
                } else {
                    stateBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_SetOffOutState_descriptor;
            }

            public ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState getDefaultInstanceForType() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState.getDefaultInstance();
            }

            public ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState build() {
                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState buildPartial() {
                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState result = new ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                if (stateBuilder_ == null) {
                    result.state_ = state_;
                } else {
                    result.state_ = stateBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState) {
                    return mergeFrom((ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState other) {
                if (other == ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState.getDefaultInstance())
                    return this;
                if (other.hasState()) {
                    mergeState(other.getState());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.SetOffOutState) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            // optional .almaz2.rpc.commands.SetOutState state = 1;
            private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder> stateBuilder_;

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public boolean hasState() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState getState() {
                if (stateBuilder_ == null) {
                    return state_;
                } else {
                    return stateBuilder_.getMessage();
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public Builder setState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState value) {
                if (stateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    state_ = value;
                    onChanged();
                } else {
                    stateBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public Builder setState(
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder builderForValue) {
                if (stateBuilder_ == null) {
                    state_ = builderForValue.build();
                    onChanged();
                } else {
                    stateBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public Builder mergeState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState value) {
                if (stateBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001) &&
                            state_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance()) {
                        state_ =
                                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.newBuilder(state_).mergeFrom(value).buildPartial();
                    } else {
                        state_ = value;
                    }
                    onChanged();
                } else {
                    stateBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public Builder clearState() {
                if (stateBuilder_ == null) {
                    state_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
                    onChanged();
                } else {
                    stateBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder getStateBuilder() {
                bitField0_ |= 0x00000001;
                onChanged();
                return getStateFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder getStateOrBuilder() {
                if (stateBuilder_ != null) {
                    return stateBuilder_.getMessageOrBuilder();
                } else {
                    return state_;
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState state = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder>
            getStateFieldBuilder() {
                if (stateBuilder_ == null) {
                    stateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder>(
                            state_,
                            getParentForChildren(),
                            isClean());
                    state_ = null;
                }
                return stateBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.SetOffOutState)
        }

        static {
            defaultInstance = new SetOffOutState(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.SetOffOutState)
    }

    public interface ControlObjectCommandBaseOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // optional uint32 control_object_id = 1;

        /**
         * <code>optional uint32 control_object_id = 1;</code>
         */
        boolean hasControlObjectId();

        /**
         * <code>optional uint32 control_object_id = 1;</code>
         */
        int getControlObjectId();

        // optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
         */
        boolean hasSetLogicalMode();

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode getSetLogicalMode();

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder getSetLogicalModeOrBuilder();

        // optional .almaz2.rpc.commands.SetOutState set_out_state = 3;

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
         */
        boolean hasSetOutState();

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState getSetOutState();

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder getSetOutStateOrBuilder();

        // optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;

        /**
         * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;</code>
         */
        boolean hasInputAlarmOff();

        /**
         * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff getInputAlarmOff();

        /**
         * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOffOrBuilder getInputAlarmOffOrBuilder();

        // optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;

        /**
         * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;</code>
         */
        boolean hasConditionLsCreate();

        /**
         * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate getConditionLsCreate();

        /**
         * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;</code>
         */
        ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreateOrBuilder getConditionLsCreateOrBuilder();
    }

    /**
     * Protobuf type {@code almaz2.rpc.commands.ControlObjectCommandBase}
     */
    public static final class ControlObjectCommandBase extends
            com.google.protobuf.GeneratedMessage
            implements ControlObjectCommandBaseOrBuilder {
        // Use ControlObjectCommandBase.newBuilder() to construct.
        private ControlObjectCommandBase(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private ControlObjectCommandBase(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private static final ControlObjectCommandBase defaultInstance;

        public static ControlObjectCommandBase getDefaultInstance() {
            return defaultInstance;
        }

        public ControlObjectCommandBase getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private ControlObjectCommandBase(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            controlObjectId_ = input.readUInt32();
                            break;
                        }
                        case 18: {
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                                subBuilder = setLogicalMode_.toBuilder();
                            }
                            setLogicalMode_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(setLogicalMode_);
                                setLogicalMode_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000002;
                            break;
                        }
                        case 26: {
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                                subBuilder = setOutState_.toBuilder();
                            }
                            setOutState_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(setOutState_);
                                setOutState_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000004;
                            break;
                        }
                        case 34: {
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                                subBuilder = inputAlarmOff_.toBuilder();
                            }
                            inputAlarmOff_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(inputAlarmOff_);
                                inputAlarmOff_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000008;
                            break;
                        }
                        case 42: {
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                                subBuilder = conditionLsCreate_.toBuilder();
                            }
                            conditionLsCreate_ = input.readMessage(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(conditionLsCreate_);
                                conditionLsCreate_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000010;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_ControlObjectCommandBase_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_ControlObjectCommandBase_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase.class, ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase.Builder.class);
        }

        public static com.google.protobuf.Parser<ControlObjectCommandBase> PARSER =
                new com.google.protobuf.AbstractParser<ControlObjectCommandBase>() {
                    public ControlObjectCommandBase parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new ControlObjectCommandBase(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<ControlObjectCommandBase> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // optional uint32 control_object_id = 1;
        public static final int CONTROL_OBJECT_ID_FIELD_NUMBER = 1;
        private int controlObjectId_;

        /**
         * <code>optional uint32 control_object_id = 1;</code>
         */
        public boolean hasControlObjectId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional uint32 control_object_id = 1;</code>
         */
        public int getControlObjectId() {
            return controlObjectId_;
        }

        // optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;
        public static final int SET_LOGICAL_MODE_FIELD_NUMBER = 2;
        private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode setLogicalMode_;

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
         */
        public boolean hasSetLogicalMode() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode getSetLogicalMode() {
            return setLogicalMode_;
        }

        /**
         * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder getSetLogicalModeOrBuilder() {
            return setLogicalMode_;
        }

        // optional .almaz2.rpc.commands.SetOutState set_out_state = 3;
        public static final int SET_OUT_STATE_FIELD_NUMBER = 3;
        private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState setOutState_;

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
         */
        public boolean hasSetOutState() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState getSetOutState() {
            return setOutState_;
        }

        /**
         * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder getSetOutStateOrBuilder() {
            return setOutState_;
        }

        // optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;
        public static final int INPUT_ALARM_OFF_FIELD_NUMBER = 4;
        private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff inputAlarmOff_;

        /**
         * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;</code>
         */
        public boolean hasInputAlarmOff() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff getInputAlarmOff() {
            return inputAlarmOff_;
        }

        /**
         * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOffOrBuilder getInputAlarmOffOrBuilder() {
            return inputAlarmOff_;
        }

        // optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;
        public static final int CONDITION_LS_CREATE_FIELD_NUMBER = 5;
        private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate conditionLsCreate_;

        /**
         * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;</code>
         */
        public boolean hasConditionLsCreate() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate getConditionLsCreate() {
            return conditionLsCreate_;
        }

        /**
         * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;</code>
         */
        public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreateOrBuilder getConditionLsCreateOrBuilder() {
            return conditionLsCreate_;
        }

        private void initFields() {
            controlObjectId_ = 0;
            setLogicalMode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
            setOutState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
            inputAlarmOff_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.getDefaultInstance();
            conditionLsCreate_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeUInt32(1, controlObjectId_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeMessage(2, setLogicalMode_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeMessage(3, setOutState_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeMessage(4, inputAlarmOff_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeMessage(5, conditionLsCreate_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(1, controlObjectId_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, setLogicalMode_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, setOutState_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, inputAlarmOff_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, conditionLsCreate_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code almaz2.rpc.commands.ControlObjectCommandBase}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBaseOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_ControlObjectCommandBase_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_ControlObjectCommandBase_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase.class, ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase.Builder.class);
            }

            // Construct using ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getSetLogicalModeFieldBuilder();
                    getSetOutStateFieldBuilder();
                    getInputAlarmOffFieldBuilder();
                    getConditionLsCreateFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                controlObjectId_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                if (setLogicalModeBuilder_ == null) {
                    setLogicalMode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
                } else {
                    setLogicalModeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000002);
                if (setOutStateBuilder_ == null) {
                    setOutState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
                } else {
                    setOutStateBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000004);
                if (inputAlarmOffBuilder_ == null) {
                    inputAlarmOff_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.getDefaultInstance();
                } else {
                    inputAlarmOffBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000008);
                if (conditionLsCreateBuilder_ == null) {
                    conditionLsCreate_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.getDefaultInstance();
                } else {
                    conditionLsCreateBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.internal_static_almaz2_rpc_commands_ControlObjectCommandBase_descriptor;
            }

            public ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase getDefaultInstanceForType() {
                return ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase.getDefaultInstance();
            }

            public ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase build() {
                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase buildPartial() {
                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase result = new ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.controlObjectId_ = controlObjectId_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                if (setLogicalModeBuilder_ == null) {
                    result.setLogicalMode_ = setLogicalMode_;
                } else {
                    result.setLogicalMode_ = setLogicalModeBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                if (setOutStateBuilder_ == null) {
                    result.setOutState_ = setOutState_;
                } else {
                    result.setOutState_ = setOutStateBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                if (inputAlarmOffBuilder_ == null) {
                    result.inputAlarmOff_ = inputAlarmOff_;
                } else {
                    result.inputAlarmOff_ = inputAlarmOffBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                if (conditionLsCreateBuilder_ == null) {
                    result.conditionLsCreate_ = conditionLsCreate_;
                } else {
                    result.conditionLsCreate_ = conditionLsCreateBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase) {
                    return mergeFrom((ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase other) {
                if (other == ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase.getDefaultInstance())
                    return this;
                if (other.hasControlObjectId()) {
                    setControlObjectId(other.getControlObjectId());
                }
                if (other.hasSetLogicalMode()) {
                    mergeSetLogicalMode(other.getSetLogicalMode());
                }
                if (other.hasSetOutState()) {
                    mergeSetOutState(other.getSetOutState());
                }
                if (other.hasInputAlarmOff()) {
                    mergeInputAlarmOff(other.getInputAlarmOff());
                }
                if (other.hasConditionLsCreate()) {
                    mergeConditionLsCreate(other.getConditionLsCreate());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (ru.kodos.almaz2.rpc.commands.ControlObjectCommandsClass.ControlObjectCommandBase) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            // optional uint32 control_object_id = 1;
            private int controlObjectId_;

            /**
             * <code>optional uint32 control_object_id = 1;</code>
             */
            public boolean hasControlObjectId() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional uint32 control_object_id = 1;</code>
             */
            public int getControlObjectId() {
                return controlObjectId_;
            }

            /**
             * <code>optional uint32 control_object_id = 1;</code>
             */
            public Builder setControlObjectId(int value) {
                bitField0_ |= 0x00000001;
                controlObjectId_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional uint32 control_object_id = 1;</code>
             */
            public Builder clearControlObjectId() {
                bitField0_ = (bitField0_ & ~0x00000001);
                controlObjectId_ = 0;
                onChanged();
                return this;
            }

            // optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;
            private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode setLogicalMode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder> setLogicalModeBuilder_;

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
             */
            public boolean hasSetLogicalMode() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode getSetLogicalMode() {
                if (setLogicalModeBuilder_ == null) {
                    return setLogicalMode_;
                } else {
                    return setLogicalModeBuilder_.getMessage();
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
             */
            public Builder setSetLogicalMode(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode value) {
                if (setLogicalModeBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    setLogicalMode_ = value;
                    onChanged();
                } else {
                    setLogicalModeBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000002;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
             */
            public Builder setSetLogicalMode(
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder builderForValue) {
                if (setLogicalModeBuilder_ == null) {
                    setLogicalMode_ = builderForValue.build();
                    onChanged();
                } else {
                    setLogicalModeBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000002;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
             */
            public Builder mergeSetLogicalMode(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode value) {
                if (setLogicalModeBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002) &&
                            setLogicalMode_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance()) {
                        setLogicalMode_ =
                                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.newBuilder(setLogicalMode_).mergeFrom(value).buildPartial();
                    } else {
                        setLogicalMode_ = value;
                    }
                    onChanged();
                } else {
                    setLogicalModeBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000002;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
             */
            public Builder clearSetLogicalMode() {
                if (setLogicalModeBuilder_ == null) {
                    setLogicalMode_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.getDefaultInstance();
                    onChanged();
                } else {
                    setLogicalModeBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder getSetLogicalModeBuilder() {
                bitField0_ |= 0x00000002;
                onChanged();
                return getSetLogicalModeFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder getSetLogicalModeOrBuilder() {
                if (setLogicalModeBuilder_ != null) {
                    return setLogicalModeBuilder_.getMessageOrBuilder();
                } else {
                    return setLogicalMode_;
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetLogicalMode set_logical_mode = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder>
            getSetLogicalModeFieldBuilder() {
                if (setLogicalModeBuilder_ == null) {
                    setLogicalModeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalMode.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetLogicalModeOrBuilder>(
                            setLogicalMode_,
                            getParentForChildren(),
                            isClean());
                    setLogicalMode_ = null;
                }
                return setLogicalModeBuilder_;
            }

            // optional .almaz2.rpc.commands.SetOutState set_out_state = 3;
            private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState setOutState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder> setOutStateBuilder_;

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
             */
            public boolean hasSetOutState() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState getSetOutState() {
                if (setOutStateBuilder_ == null) {
                    return setOutState_;
                } else {
                    return setOutStateBuilder_.getMessage();
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
             */
            public Builder setSetOutState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState value) {
                if (setOutStateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    setOutState_ = value;
                    onChanged();
                } else {
                    setOutStateBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
             */
            public Builder setSetOutState(
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder builderForValue) {
                if (setOutStateBuilder_ == null) {
                    setOutState_ = builderForValue.build();
                    onChanged();
                } else {
                    setOutStateBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
             */
            public Builder mergeSetOutState(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState value) {
                if (setOutStateBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) == 0x00000004) &&
                            setOutState_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance()) {
                        setOutState_ =
                                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.newBuilder(setOutState_).mergeFrom(value).buildPartial();
                    } else {
                        setOutState_ = value;
                    }
                    onChanged();
                } else {
                    setOutStateBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
             */
            public Builder clearSetOutState() {
                if (setOutStateBuilder_ == null) {
                    setOutState_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.getDefaultInstance();
                    onChanged();
                } else {
                    setOutStateBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder getSetOutStateBuilder() {
                bitField0_ |= 0x00000004;
                onChanged();
                return getSetOutStateFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder getSetOutStateOrBuilder() {
                if (setOutStateBuilder_ != null) {
                    return setOutStateBuilder_.getMessageOrBuilder();
                } else {
                    return setOutState_;
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.SetOutState set_out_state = 3;</code>
             */
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder>
            getSetOutStateFieldBuilder() {
                if (setOutStateBuilder_ == null) {
                    setOutStateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutState.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.SetOutStateOrBuilder>(
                            setOutState_,
                            getParentForChildren(),
                            isClean());
                    setOutState_ = null;
                }
                return setOutStateBuilder_;
            }

            // optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;
            private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff inputAlarmOff_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.getDefaultInstance();
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOffOrBuilder> inputAlarmOffBuilder_;

            /**
             * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;</code>
             */
            public boolean hasInputAlarmOff() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff getInputAlarmOff() {
                if (inputAlarmOffBuilder_ == null) {
                    return inputAlarmOff_;
                } else {
                    return inputAlarmOffBuilder_.getMessage();
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;</code>
             */
            public Builder setInputAlarmOff(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff value) {
                if (inputAlarmOffBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    inputAlarmOff_ = value;
                    onChanged();
                } else {
                    inputAlarmOffBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;</code>
             */
            public Builder setInputAlarmOff(
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.Builder builderForValue) {
                if (inputAlarmOffBuilder_ == null) {
                    inputAlarmOff_ = builderForValue.build();
                    onChanged();
                } else {
                    inputAlarmOffBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;</code>
             */
            public Builder mergeInputAlarmOff(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff value) {
                if (inputAlarmOffBuilder_ == null) {
                    if (((bitField0_ & 0x00000008) == 0x00000008) &&
                            inputAlarmOff_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.getDefaultInstance()) {
                        inputAlarmOff_ =
                                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.newBuilder(inputAlarmOff_).mergeFrom(value).buildPartial();
                    } else {
                        inputAlarmOff_ = value;
                    }
                    onChanged();
                } else {
                    inputAlarmOffBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;</code>
             */
            public Builder clearInputAlarmOff() {
                if (inputAlarmOffBuilder_ == null) {
                    inputAlarmOff_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.getDefaultInstance();
                    onChanged();
                } else {
                    inputAlarmOffBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.Builder getInputAlarmOffBuilder() {
                bitField0_ |= 0x00000008;
                onChanged();
                return getInputAlarmOffFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOffOrBuilder getInputAlarmOffOrBuilder() {
                if (inputAlarmOffBuilder_ != null) {
                    return inputAlarmOffBuilder_.getMessageOrBuilder();
                } else {
                    return inputAlarmOff_;
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.InputAlarmOff input_alarm_off = 4;</code>
             */
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOffOrBuilder>
            getInputAlarmOffFieldBuilder() {
                if (inputAlarmOffBuilder_ == null) {
                    inputAlarmOffBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOff.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.InputAlarmOffOrBuilder>(
                            inputAlarmOff_,
                            getParentForChildren(),
                            isClean());
                    inputAlarmOff_ = null;
                }
                return inputAlarmOffBuilder_;
            }

            // optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;
            private ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate conditionLsCreate_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.getDefaultInstance();
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreateOrBuilder> conditionLsCreateBuilder_;

            /**
             * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;</code>
             */
            public boolean hasConditionLsCreate() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate getConditionLsCreate() {
                if (conditionLsCreateBuilder_ == null) {
                    return conditionLsCreate_;
                } else {
                    return conditionLsCreateBuilder_.getMessage();
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;</code>
             */
            public Builder setConditionLsCreate(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate value) {
                if (conditionLsCreateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    conditionLsCreate_ = value;
                    onChanged();
                } else {
                    conditionLsCreateBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;</code>
             */
            public Builder setConditionLsCreate(
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.Builder builderForValue) {
                if (conditionLsCreateBuilder_ == null) {
                    conditionLsCreate_ = builderForValue.build();
                    onChanged();
                } else {
                    conditionLsCreateBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;</code>
             */
            public Builder mergeConditionLsCreate(ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate value) {
                if (conditionLsCreateBuilder_ == null) {
                    if (((bitField0_ & 0x00000010) == 0x00000010) &&
                            conditionLsCreate_ != ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.getDefaultInstance()) {
                        conditionLsCreate_ =
                                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.newBuilder(conditionLsCreate_).mergeFrom(value).buildPartial();
                    } else {
                        conditionLsCreate_ = value;
                    }
                    onChanged();
                } else {
                    conditionLsCreateBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;</code>
             */
            public Builder clearConditionLsCreate() {
                if (conditionLsCreateBuilder_ == null) {
                    conditionLsCreate_ = ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.getDefaultInstance();
                    onChanged();
                } else {
                    conditionLsCreateBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            /**
             * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.Builder getConditionLsCreateBuilder() {
                bitField0_ |= 0x00000010;
                onChanged();
                return getConditionLsCreateFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;</code>
             */
            public ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreateOrBuilder getConditionLsCreateOrBuilder() {
                if (conditionLsCreateBuilder_ != null) {
                    return conditionLsCreateBuilder_.getMessageOrBuilder();
                } else {
                    return conditionLsCreate_;
                }
            }

            /**
             * <code>optional .almaz2.rpc.commands.ConditionLSCreate condition_ls_create = 5;</code>
             */
            private com.google.protobuf.SingleFieldBuilder<
                    ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreateOrBuilder>
            getConditionLsCreateFieldBuilder() {
                if (conditionLsCreateBuilder_ == null) {
                    conditionLsCreateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                            ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreate.Builder, ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.ConditionLSCreateOrBuilder>(
                            conditionLsCreate_,
                            getParentForChildren(),
                            isClean());
                    conditionLsCreate_ = null;
                }
                return conditionLsCreateBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:almaz2.rpc.commands.ControlObjectCommandBase)
        }

        static {
            defaultInstance = new ControlObjectCommandBase(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:almaz2.rpc.commands.ControlObjectCommandBase)
    }

    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_almaz2_rpc_commands_SetMonitoringLogicalMode_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_almaz2_rpc_commands_SetMonitoringLogicalMode_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_almaz2_rpc_commands_SetBlackBoxLogicalMode_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_almaz2_rpc_commands_SetBlackBoxLogicalMode_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_almaz2_rpc_commands_SetOnOutState_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_almaz2_rpc_commands_SetOnOutState_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_almaz2_rpc_commands_SetOffOutState_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_almaz2_rpc_commands_SetOffOutState_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_almaz2_rpc_commands_ControlObjectCommandBase_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_almaz2_rpc_commands_ControlObjectCommandBase_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n\035control_object_commands.proto\022\023almaz2." +
                        "rpc.commands\032\030equipment_commands.proto\"M" +
                        "\n\030SetMonitoringLogicalMode\0221\n\004mode\030\001 \001(\013" +
                        "2#.almaz2.rpc.commands.SetLogicalMode\"K\n" +
                        "\026SetBlackBoxLogicalMode\0221\n\004mode\030\001 \001(\0132#." +
                        "almaz2.rpc.commands.SetLogicalMode\"@\n\rSe" +
                        "tOnOutState\022/\n\005state\030\001 \001(\0132 .almaz2.rpc." +
                        "commands.SetOutState\"A\n\016SetOffOutState\022/" +
                        "\n\005state\030\001 \001(\0132 .almaz2.rpc.commands.SetO" +
                        "utState\"\257\002\n\030ControlObjectCommandBase\022\031\n\021",
                "control_object_id\030\001 \001(\r\022=\n\020set_logical_m" +
                        "ode\030\002 \001(\0132#.almaz2.rpc.commands.SetLogic" +
                        "alMode\0227\n\rset_out_state\030\003 \001(\0132 .almaz2.r" +
                        "pc.commands.SetOutState\022;\n\017input_alarm_o" +
                        "ff\030\004 \001(\0132\".almaz2.rpc.commands.InputAlar" +
                        "mOff\022C\n\023condition_ls_create\030\005 \001(\0132&.alma" +
                        "z2.rpc.commands.ConditionLSCreateB:\n\034ru." +
                        "kodos.almaz2.rpc.commandsB\032ControlObject" +
                        "CommandsClass"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        internal_static_almaz2_rpc_commands_SetMonitoringLogicalMode_descriptor =
                                getDescriptor().getMessageTypes().get(0);
                        internal_static_almaz2_rpc_commands_SetMonitoringLogicalMode_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_almaz2_rpc_commands_SetMonitoringLogicalMode_descriptor,
                                new java.lang.String[]{"Mode",});
                        internal_static_almaz2_rpc_commands_SetBlackBoxLogicalMode_descriptor =
                                getDescriptor().getMessageTypes().get(1);
                        internal_static_almaz2_rpc_commands_SetBlackBoxLogicalMode_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_almaz2_rpc_commands_SetBlackBoxLogicalMode_descriptor,
                                new java.lang.String[]{"Mode",});
                        internal_static_almaz2_rpc_commands_SetOnOutState_descriptor =
                                getDescriptor().getMessageTypes().get(2);
                        internal_static_almaz2_rpc_commands_SetOnOutState_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_almaz2_rpc_commands_SetOnOutState_descriptor,
                                new java.lang.String[]{"State",});
                        internal_static_almaz2_rpc_commands_SetOffOutState_descriptor =
                                getDescriptor().getMessageTypes().get(3);
                        internal_static_almaz2_rpc_commands_SetOffOutState_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_almaz2_rpc_commands_SetOffOutState_descriptor,
                                new java.lang.String[]{"State",});
                        internal_static_almaz2_rpc_commands_ControlObjectCommandBase_descriptor =
                                getDescriptor().getMessageTypes().get(4);
                        internal_static_almaz2_rpc_commands_ControlObjectCommandBase_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_almaz2_rpc_commands_ControlObjectCommandBase_descriptor,
                                new java.lang.String[]{"ControlObjectId", "SetLogicalMode", "SetOutState", "InputAlarmOff", "ConditionLsCreate",});
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                                ru.kodos.almaz2.rpc.commands.EquipmentCommandsClass.getDescriptor(),
                        }, assigner
                );
    }

    // @@protoc_insertion_point(outer_class_scope)
}
