// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: control_object_state.proto

package ru.kodos.almaz2.domain_objects;

public final class ControlObjectStateClass {
  private ControlObjectStateClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ControlElementStateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 id = 1;
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id КЭ
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id КЭ
     * </pre>
     */
    int getId();

    // optional .almaz2.domain_objects.FieldTypeValue value = 2;
    /**
     * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
     *
     * <pre>
     * Состояние КЭ
     * </pre>
     */
    boolean hasValue();
    /**
     * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
     *
     * <pre>
     * Состояние КЭ
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValue();
    /**
     * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
     *
     * <pre>
     * Состояние КЭ
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValueOrBuilder();

    // repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
     *
     * <pre>
     * Состояния датчиков
     * </pre>
     */
    java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState> 
        getSensorStatesList();
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
     *
     * <pre>
     * Состояния датчиков
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState getSensorStates(int index);
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
     *
     * <pre>
     * Состояния датчиков
     * </pre>
     */
    int getSensorStatesCount();
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
     *
     * <pre>
     * Состояния датчиков
     * </pre>
     */
    java.util.List<? extends ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorStateOrBuilder> 
        getSensorStatesOrBuilderList();
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
     *
     * <pre>
     * Состояния датчиков
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorStateOrBuilder getSensorStatesOrBuilder(
        int index);

    // repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
     *
     * <pre>
     * Состояния УЭ
     * </pre>
     */
    java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState> 
        getManagedElementStatesList();
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
     *
     * <pre>
     * Состояния УЭ
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState getManagedElementStates(int index);
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
     *
     * <pre>
     * Состояния УЭ
     * </pre>
     */
    int getManagedElementStatesCount();
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
     *
     * <pre>
     * Состояния УЭ
     * </pre>
     */
    java.util.List<? extends ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementStateOrBuilder> 
        getManagedElementStatesOrBuilderList();
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
     *
     * <pre>
     * Состояния УЭ
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementStateOrBuilder getManagedElementStatesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code almaz2.domain_objects.ControlElementState}
   */
  public static final class ControlElementState extends
      com.google.protobuf.GeneratedMessage
      implements ControlElementStateOrBuilder {
    // Use ControlElementState.newBuilder() to construct.
    private ControlElementState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ControlElementState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ControlElementState defaultInstance;
    public static ControlElementState getDefaultInstance() {
      return defaultInstance;
    }

    public ControlElementState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ControlElementState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 18: {
              ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                sensorStates_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState>();
                mutable_bitField0_ |= 0x00000004;
              }
              sensorStates_.add(input.readMessage(ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                managedElementStates_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState>();
                mutable_bitField0_ |= 0x00000008;
              }
              managedElementStates_.add(input.readMessage(ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          sensorStates_ = java.util.Collections.unmodifiableList(sensorStates_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          managedElementStates_ = java.util.Collections.unmodifiableList(managedElementStates_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlElementState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlElementState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.class, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.Builder.class);
    }

    public static com.google.protobuf.Parser<ControlElementState> PARSER =
        new com.google.protobuf.AbstractParser<ControlElementState>() {
      public ControlElementState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ControlElementState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ControlElementState> getParserForType() {
      return PARSER;
    }

    public interface SensorStateOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional uint32 id = 1;
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id датчика КЭ
       * </pre>
       */
      boolean hasId();
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id датчика КЭ
       * </pre>
       */
      int getId();

      // optional .almaz2.domain_objects.FieldTypeValue value = 2;
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * значение состояния
       * </pre>
       */
      boolean hasValue();
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * значение состояния
       * </pre>
       */
      ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValue();
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * значение состояния
       * </pre>
       */
      ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValueOrBuilder();
    }
    /**
     * Protobuf type {@code almaz2.domain_objects.ControlElementState.SensorState}
     */
    public static final class SensorState extends
        com.google.protobuf.GeneratedMessage
        implements SensorStateOrBuilder {
      // Use SensorState.newBuilder() to construct.
      private SensorState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SensorState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SensorState defaultInstance;
      public static SensorState getDefaultInstance() {
        return defaultInstance;
      }

      public SensorState getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SensorState(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readUInt32();
                break;
              }
              case 18: {
                ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = value_.toBuilder();
                }
                value_ = input.readMessage(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value_);
                  value_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlElementState_SensorState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlElementState_SensorState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.class, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.Builder.class);
      }

      public static com.google.protobuf.Parser<SensorState> PARSER =
          new com.google.protobuf.AbstractParser<SensorState>() {
        public SensorState parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SensorState(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SensorState> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional uint32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id датчика КЭ
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id датчика КЭ
       * </pre>
       */
      public int getId() {
        return id_;
      }

      // optional .almaz2.domain_objects.FieldTypeValue value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value_;
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * значение состояния
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * значение состояния
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValue() {
        return value_;
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * значение состояния
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValueOrBuilder() {
        return value_;
      }

      private void initFields() {
        id_ = 0;
        value_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, value_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, value_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code almaz2.domain_objects.ControlElementState.SensorState}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorStateOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlElementState_SensorState_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlElementState_SensorState_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.class, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.Builder.class);
        }

        // Construct using ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getValueFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (valueBuilder_ == null) {
            value_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance();
          } else {
            valueBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlElementState_SensorState_descriptor;
        }

        public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState getDefaultInstanceForType() {
          return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.getDefaultInstance();
        }

        public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState build() {
          ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState buildPartial() {
          ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState result = new ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (valueBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = valueBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState) {
            return mergeFrom((ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState other) {
          if (other == ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasValue()) {
            mergeValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional uint32 id = 1;
        private int id_ ;
        /**
         * <code>optional uint32 id = 1;</code>
         *
         * <pre>
         * id датчика КЭ
         * </pre>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 id = 1;</code>
         *
         * <pre>
         * id датчика КЭ
         * </pre>
         */
        public int getId() {
          return id_;
        }
        /**
         * <code>optional uint32 id = 1;</code>
         *
         * <pre>
         * id датчика КЭ
         * </pre>
         */
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 id = 1;</code>
         *
         * <pre>
         * id датчика КЭ
         * </pre>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        // optional .almaz2.domain_objects.FieldTypeValue value = 2;
        private ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> valueBuilder_;
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValue() {
          if (valueBuilder_ == null) {
            return value_;
          } else {
            return valueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public Builder setValue(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            valueBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public Builder setValue(
            ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder builderForValue) {
          if (valueBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            valueBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public Builder mergeValue(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
          if (valueBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                value_ != ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance()) {
              value_ =
                ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.newBuilder(value_).mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            valueBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public Builder clearValue() {
          if (valueBuilder_ == null) {
            value_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance();
            onChanged();
          } else {
            valueBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder getValueBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValueOrBuilder() {
          if (valueBuilder_ != null) {
            return valueBuilder_.getMessageOrBuilder();
          } else {
            return value_;
          }
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
            getValueFieldBuilder() {
          if (valueBuilder_ == null) {
            valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder>(
                    value_,
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          return valueBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:almaz2.domain_objects.ControlElementState.SensorState)
      }

      static {
        defaultInstance = new SensorState(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:almaz2.domain_objects.ControlElementState.SensorState)
    }

    public interface ManagedElementStateOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional uint32 id = 1;
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id УЭ
       * </pre>
       */
      boolean hasId();
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id УЭ
       * </pre>
       */
      int getId();

      // optional .almaz2.domain_objects.FieldTypeValue value = 2;
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * значение состояния
       * </pre>
       */
      boolean hasValue();
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * значение состояния
       * </pre>
       */
      ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValue();
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * значение состояния
       * </pre>
       */
      ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValueOrBuilder();
    }
    /**
     * Protobuf type {@code almaz2.domain_objects.ControlElementState.ManagedElementState}
     */
    public static final class ManagedElementState extends
        com.google.protobuf.GeneratedMessage
        implements ManagedElementStateOrBuilder {
      // Use ManagedElementState.newBuilder() to construct.
      private ManagedElementState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ManagedElementState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ManagedElementState defaultInstance;
      public static ManagedElementState getDefaultInstance() {
        return defaultInstance;
      }

      public ManagedElementState getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ManagedElementState(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readUInt32();
                break;
              }
              case 18: {
                ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = value_.toBuilder();
                }
                value_ = input.readMessage(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value_);
                  value_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlElementState_ManagedElementState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlElementState_ManagedElementState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.class, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.Builder.class);
      }

      public static com.google.protobuf.Parser<ManagedElementState> PARSER =
          new com.google.protobuf.AbstractParser<ManagedElementState>() {
        public ManagedElementState parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ManagedElementState(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ManagedElementState> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional uint32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id УЭ
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id УЭ
       * </pre>
       */
      public int getId() {
        return id_;
      }

      // optional .almaz2.domain_objects.FieldTypeValue value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value_;
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * значение состояния
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * значение состояния
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValue() {
        return value_;
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * значение состояния
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValueOrBuilder() {
        return value_;
      }

      private void initFields() {
        id_ = 0;
        value_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, value_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, value_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code almaz2.domain_objects.ControlElementState.ManagedElementState}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementStateOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlElementState_ManagedElementState_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlElementState_ManagedElementState_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.class, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.Builder.class);
        }

        // Construct using ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getValueFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (valueBuilder_ == null) {
            value_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance();
          } else {
            valueBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlElementState_ManagedElementState_descriptor;
        }

        public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState getDefaultInstanceForType() {
          return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.getDefaultInstance();
        }

        public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState build() {
          ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState buildPartial() {
          ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState result = new ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (valueBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = valueBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState) {
            return mergeFrom((ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState other) {
          if (other == ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasValue()) {
            mergeValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional uint32 id = 1;
        private int id_ ;
        /**
         * <code>optional uint32 id = 1;</code>
         *
         * <pre>
         * id УЭ
         * </pre>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 id = 1;</code>
         *
         * <pre>
         * id УЭ
         * </pre>
         */
        public int getId() {
          return id_;
        }
        /**
         * <code>optional uint32 id = 1;</code>
         *
         * <pre>
         * id УЭ
         * </pre>
         */
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 id = 1;</code>
         *
         * <pre>
         * id УЭ
         * </pre>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        // optional .almaz2.domain_objects.FieldTypeValue value = 2;
        private ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> valueBuilder_;
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValue() {
          if (valueBuilder_ == null) {
            return value_;
          } else {
            return valueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public Builder setValue(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            valueBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public Builder setValue(
            ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder builderForValue) {
          if (valueBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            valueBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public Builder mergeValue(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
          if (valueBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                value_ != ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance()) {
              value_ =
                ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.newBuilder(value_).mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            valueBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public Builder clearValue() {
          if (valueBuilder_ == null) {
            value_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance();
            onChanged();
          } else {
            valueBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder getValueBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValueOrBuilder() {
          if (valueBuilder_ != null) {
            return valueBuilder_.getMessageOrBuilder();
          } else {
            return value_;
          }
        }
        /**
         * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
         *
         * <pre>
         * значение состояния
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
            getValueFieldBuilder() {
          if (valueBuilder_ == null) {
            valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder>(
                    value_,
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          return valueBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:almaz2.domain_objects.ControlElementState.ManagedElementState)
      }

      static {
        defaultInstance = new ManagedElementState(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:almaz2.domain_objects.ControlElementState.ManagedElementState)
    }

    private int bitField0_;
    // optional uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id КЭ
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id КЭ
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional .almaz2.domain_objects.FieldTypeValue value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value_;
    /**
     * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
     *
     * <pre>
     * Состояние КЭ
     * </pre>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
     *
     * <pre>
     * Состояние КЭ
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValue() {
      return value_;
    }
    /**
     * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
     *
     * <pre>
     * Состояние КЭ
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValueOrBuilder() {
      return value_;
    }

    // repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;
    public static final int SENSOR_STATES_FIELD_NUMBER = 3;
    private java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState> sensorStates_;
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
     *
     * <pre>
     * Состояния датчиков
     * </pre>
     */
    public java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState> getSensorStatesList() {
      return sensorStates_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
     *
     * <pre>
     * Состояния датчиков
     * </pre>
     */
    public java.util.List<? extends ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorStateOrBuilder> 
        getSensorStatesOrBuilderList() {
      return sensorStates_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
     *
     * <pre>
     * Состояния датчиков
     * </pre>
     */
    public int getSensorStatesCount() {
      return sensorStates_.size();
    }
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
     *
     * <pre>
     * Состояния датчиков
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState getSensorStates(int index) {
      return sensorStates_.get(index);
    }
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
     *
     * <pre>
     * Состояния датчиков
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorStateOrBuilder getSensorStatesOrBuilder(
        int index) {
      return sensorStates_.get(index);
    }

    // repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;
    public static final int MANAGED_ELEMENT_STATES_FIELD_NUMBER = 4;
    private java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState> managedElementStates_;
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
     *
     * <pre>
     * Состояния УЭ
     * </pre>
     */
    public java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState> getManagedElementStatesList() {
      return managedElementStates_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
     *
     * <pre>
     * Состояния УЭ
     * </pre>
     */
    public java.util.List<? extends ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementStateOrBuilder> 
        getManagedElementStatesOrBuilderList() {
      return managedElementStates_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
     *
     * <pre>
     * Состояния УЭ
     * </pre>
     */
    public int getManagedElementStatesCount() {
      return managedElementStates_.size();
    }
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
     *
     * <pre>
     * Состояния УЭ
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState getManagedElementStates(int index) {
      return managedElementStates_.get(index);
    }
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
     *
     * <pre>
     * Состояния УЭ
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementStateOrBuilder getManagedElementStatesOrBuilder(
        int index) {
      return managedElementStates_.get(index);
    }

    private void initFields() {
      id_ = 0;
      value_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance();
      sensorStates_ = java.util.Collections.emptyList();
      managedElementStates_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, value_);
      }
      for (int i = 0; i < sensorStates_.size(); i++) {
        output.writeMessage(3, sensorStates_.get(i));
      }
      for (int i = 0; i < managedElementStates_.size(); i++) {
        output.writeMessage(4, managedElementStates_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_);
      }
      for (int i = 0; i < sensorStates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, sensorStates_.get(i));
      }
      for (int i = 0; i < managedElementStates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, managedElementStates_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.domain_objects.ControlElementState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlElementState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlElementState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.class, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.Builder.class);
      }

      // Construct using ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValueFieldBuilder();
          getSensorStatesFieldBuilder();
          getManagedElementStatesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueBuilder_ == null) {
          value_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (sensorStatesBuilder_ == null) {
          sensorStates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          sensorStatesBuilder_.clear();
        }
        if (managedElementStatesBuilder_ == null) {
          managedElementStates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          managedElementStatesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlElementState_descriptor;
      }

      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState getDefaultInstanceForType() {
        return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.getDefaultInstance();
      }

      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState build() {
        ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState buildPartial() {
        ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState result = new ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        if (sensorStatesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            sensorStates_ = java.util.Collections.unmodifiableList(sensorStates_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.sensorStates_ = sensorStates_;
        } else {
          result.sensorStates_ = sensorStatesBuilder_.build();
        }
        if (managedElementStatesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            managedElementStates_ = java.util.Collections.unmodifiableList(managedElementStates_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.managedElementStates_ = managedElementStates_;
        } else {
          result.managedElementStates_ = managedElementStatesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState) {
          return mergeFrom((ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState other) {
        if (other == ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        if (sensorStatesBuilder_ == null) {
          if (!other.sensorStates_.isEmpty()) {
            if (sensorStates_.isEmpty()) {
              sensorStates_ = other.sensorStates_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSensorStatesIsMutable();
              sensorStates_.addAll(other.sensorStates_);
            }
            onChanged();
          }
        } else {
          if (!other.sensorStates_.isEmpty()) {
            if (sensorStatesBuilder_.isEmpty()) {
              sensorStatesBuilder_.dispose();
              sensorStatesBuilder_ = null;
              sensorStates_ = other.sensorStates_;
              bitField0_ = (bitField0_ & ~0x00000004);
              sensorStatesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSensorStatesFieldBuilder() : null;
            } else {
              sensorStatesBuilder_.addAllMessages(other.sensorStates_);
            }
          }
        }
        if (managedElementStatesBuilder_ == null) {
          if (!other.managedElementStates_.isEmpty()) {
            if (managedElementStates_.isEmpty()) {
              managedElementStates_ = other.managedElementStates_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureManagedElementStatesIsMutable();
              managedElementStates_.addAll(other.managedElementStates_);
            }
            onChanged();
          }
        } else {
          if (!other.managedElementStates_.isEmpty()) {
            if (managedElementStatesBuilder_.isEmpty()) {
              managedElementStatesBuilder_.dispose();
              managedElementStatesBuilder_ = null;
              managedElementStates_ = other.managedElementStates_;
              bitField0_ = (bitField0_ & ~0x00000008);
              managedElementStatesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getManagedElementStatesFieldBuilder() : null;
            } else {
              managedElementStatesBuilder_.addAllMessages(other.managedElementStates_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 id = 1;
      private int id_ ;
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id КЭ
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id КЭ
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id КЭ
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id КЭ
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional .almaz2.domain_objects.FieldTypeValue value = 2;
      private ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> valueBuilder_;
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * Состояние КЭ
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * Состояние КЭ
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValue() {
        if (valueBuilder_ == null) {
          return value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * Состояние КЭ
       * </pre>
       */
      public Builder setValue(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * Состояние КЭ
       * </pre>
       */
      public Builder setValue(
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * Состояние КЭ
       * </pre>
       */
      public Builder mergeValue(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              value_ != ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance()) {
            value_ =
              ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * Состояние КЭ
       * </pre>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance();
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * Состояние КЭ
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder getValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * Состояние КЭ
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_;
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeValue value = 2;</code>
       *
       * <pre>
       * Состояние КЭ
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder>(
                  value_,
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      // repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;
      private java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState> sensorStates_ =
        java.util.Collections.emptyList();
      private void ensureSensorStatesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          sensorStates_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState>(sensorStates_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.Builder, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorStateOrBuilder> sensorStatesBuilder_;

      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState> getSensorStatesList() {
        if (sensorStatesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sensorStates_);
        } else {
          return sensorStatesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public int getSensorStatesCount() {
        if (sensorStatesBuilder_ == null) {
          return sensorStates_.size();
        } else {
          return sensorStatesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState getSensorStates(int index) {
        if (sensorStatesBuilder_ == null) {
          return sensorStates_.get(index);
        } else {
          return sensorStatesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public Builder setSensorStates(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState value) {
        if (sensorStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorStatesIsMutable();
          sensorStates_.set(index, value);
          onChanged();
        } else {
          sensorStatesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public Builder setSensorStates(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.Builder builderForValue) {
        if (sensorStatesBuilder_ == null) {
          ensureSensorStatesIsMutable();
          sensorStates_.set(index, builderForValue.build());
          onChanged();
        } else {
          sensorStatesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public Builder addSensorStates(ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState value) {
        if (sensorStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorStatesIsMutable();
          sensorStates_.add(value);
          onChanged();
        } else {
          sensorStatesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public Builder addSensorStates(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState value) {
        if (sensorStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorStatesIsMutable();
          sensorStates_.add(index, value);
          onChanged();
        } else {
          sensorStatesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public Builder addSensorStates(
          ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.Builder builderForValue) {
        if (sensorStatesBuilder_ == null) {
          ensureSensorStatesIsMutable();
          sensorStates_.add(builderForValue.build());
          onChanged();
        } else {
          sensorStatesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public Builder addSensorStates(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.Builder builderForValue) {
        if (sensorStatesBuilder_ == null) {
          ensureSensorStatesIsMutable();
          sensorStates_.add(index, builderForValue.build());
          onChanged();
        } else {
          sensorStatesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public Builder addAllSensorStates(
          java.lang.Iterable<? extends ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState> values) {
        if (sensorStatesBuilder_ == null) {
          ensureSensorStatesIsMutable();
          super.addAll(values, sensorStates_);
          onChanged();
        } else {
          sensorStatesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public Builder clearSensorStates() {
        if (sensorStatesBuilder_ == null) {
          sensorStates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          sensorStatesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public Builder removeSensorStates(int index) {
        if (sensorStatesBuilder_ == null) {
          ensureSensorStatesIsMutable();
          sensorStates_.remove(index);
          onChanged();
        } else {
          sensorStatesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.Builder getSensorStatesBuilder(
          int index) {
        return getSensorStatesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorStateOrBuilder getSensorStatesOrBuilder(
          int index) {
        if (sensorStatesBuilder_ == null) {
          return sensorStates_.get(index);  } else {
          return sensorStatesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public java.util.List<? extends ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorStateOrBuilder> 
           getSensorStatesOrBuilderList() {
        if (sensorStatesBuilder_ != null) {
          return sensorStatesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sensorStates_);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.Builder addSensorStatesBuilder() {
        return getSensorStatesFieldBuilder().addBuilder(
            ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.Builder addSensorStatesBuilder(
          int index) {
        return getSensorStatesFieldBuilder().addBuilder(
            index, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.SensorState sensor_states = 3;</code>
       *
       * <pre>
       * Состояния датчиков
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.Builder> 
           getSensorStatesBuilderList() {
        return getSensorStatesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.Builder, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorStateOrBuilder> 
          getSensorStatesFieldBuilder() {
        if (sensorStatesBuilder_ == null) {
          sensorStatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorState.Builder, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.SensorStateOrBuilder>(
                  sensorStates_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          sensorStates_ = null;
        }
        return sensorStatesBuilder_;
      }

      // repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;
      private java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState> managedElementStates_ =
        java.util.Collections.emptyList();
      private void ensureManagedElementStatesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          managedElementStates_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState>(managedElementStates_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.Builder, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementStateOrBuilder> managedElementStatesBuilder_;

      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState> getManagedElementStatesList() {
        if (managedElementStatesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(managedElementStates_);
        } else {
          return managedElementStatesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public int getManagedElementStatesCount() {
        if (managedElementStatesBuilder_ == null) {
          return managedElementStates_.size();
        } else {
          return managedElementStatesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState getManagedElementStates(int index) {
        if (managedElementStatesBuilder_ == null) {
          return managedElementStates_.get(index);
        } else {
          return managedElementStatesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public Builder setManagedElementStates(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState value) {
        if (managedElementStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureManagedElementStatesIsMutable();
          managedElementStates_.set(index, value);
          onChanged();
        } else {
          managedElementStatesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public Builder setManagedElementStates(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.Builder builderForValue) {
        if (managedElementStatesBuilder_ == null) {
          ensureManagedElementStatesIsMutable();
          managedElementStates_.set(index, builderForValue.build());
          onChanged();
        } else {
          managedElementStatesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public Builder addManagedElementStates(ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState value) {
        if (managedElementStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureManagedElementStatesIsMutable();
          managedElementStates_.add(value);
          onChanged();
        } else {
          managedElementStatesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public Builder addManagedElementStates(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState value) {
        if (managedElementStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureManagedElementStatesIsMutable();
          managedElementStates_.add(index, value);
          onChanged();
        } else {
          managedElementStatesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public Builder addManagedElementStates(
          ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.Builder builderForValue) {
        if (managedElementStatesBuilder_ == null) {
          ensureManagedElementStatesIsMutable();
          managedElementStates_.add(builderForValue.build());
          onChanged();
        } else {
          managedElementStatesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public Builder addManagedElementStates(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.Builder builderForValue) {
        if (managedElementStatesBuilder_ == null) {
          ensureManagedElementStatesIsMutable();
          managedElementStates_.add(index, builderForValue.build());
          onChanged();
        } else {
          managedElementStatesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public Builder addAllManagedElementStates(
          java.lang.Iterable<? extends ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState> values) {
        if (managedElementStatesBuilder_ == null) {
          ensureManagedElementStatesIsMutable();
          super.addAll(values, managedElementStates_);
          onChanged();
        } else {
          managedElementStatesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public Builder clearManagedElementStates() {
        if (managedElementStatesBuilder_ == null) {
          managedElementStates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          managedElementStatesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public Builder removeManagedElementStates(int index) {
        if (managedElementStatesBuilder_ == null) {
          ensureManagedElementStatesIsMutable();
          managedElementStates_.remove(index);
          onChanged();
        } else {
          managedElementStatesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.Builder getManagedElementStatesBuilder(
          int index) {
        return getManagedElementStatesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementStateOrBuilder getManagedElementStatesOrBuilder(
          int index) {
        if (managedElementStatesBuilder_ == null) {
          return managedElementStates_.get(index);  } else {
          return managedElementStatesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public java.util.List<? extends ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementStateOrBuilder> 
           getManagedElementStatesOrBuilderList() {
        if (managedElementStatesBuilder_ != null) {
          return managedElementStatesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(managedElementStates_);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.Builder addManagedElementStatesBuilder() {
        return getManagedElementStatesFieldBuilder().addBuilder(
            ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.Builder addManagedElementStatesBuilder(
          int index) {
        return getManagedElementStatesFieldBuilder().addBuilder(
            index, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState.ManagedElementState managed_element_states = 4;</code>
       *
       * <pre>
       * Состояния УЭ
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.Builder> 
           getManagedElementStatesBuilderList() {
        return getManagedElementStatesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.Builder, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementStateOrBuilder> 
          getManagedElementStatesFieldBuilder() {
        if (managedElementStatesBuilder_ == null) {
          managedElementStatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementState.Builder, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.ManagedElementStateOrBuilder>(
                  managedElementStates_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          managedElementStates_ = null;
        }
        return managedElementStatesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.domain_objects.ControlElementState)
    }

    static {
      defaultInstance = new ControlElementState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.domain_objects.ControlElementState)
  }

  public interface ControlObjectStateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 id = 1;
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id паспорта КО
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id паспорта КО
     * </pre>
     */
    int getId();

    // optional uint32 time = 2;
    /**
     * <code>optional uint32 time = 2;</code>
     *
     * <pre>
     * время изменения состояния (unix time)
     * </pre>
     */
    boolean hasTime();
    /**
     * <code>optional uint32 time = 2;</code>
     *
     * <pre>
     * время изменения состояния (unix time)
     * </pre>
     */
    int getTime();

    // repeated .almaz2.domain_objects.ControlElementState states = 3;
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
     *
     * <pre>
     * Блок состояний КЭ
     * </pre>
     */
    java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState> 
        getStatesList();
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
     *
     * <pre>
     * Блок состояний КЭ
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState getStates(int index);
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
     *
     * <pre>
     * Блок состояний КЭ
     * </pre>
     */
    int getStatesCount();
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
     *
     * <pre>
     * Блок состояний КЭ
     * </pre>
     */
    java.util.List<? extends ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementStateOrBuilder> 
        getStatesOrBuilderList();
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
     *
     * <pre>
     * Блок состояний КЭ
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementStateOrBuilder getStatesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code almaz2.domain_objects.ControlObjectState}
   */
  public static final class ControlObjectState extends
      com.google.protobuf.GeneratedMessage
      implements ControlObjectStateOrBuilder {
    // Use ControlObjectState.newBuilder() to construct.
    private ControlObjectState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ControlObjectState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ControlObjectState defaultInstance;
    public static ControlObjectState getDefaultInstance() {
      return defaultInstance;
    }

    public ControlObjectState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ControlObjectState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              time_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                states_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState>();
                mutable_bitField0_ |= 0x00000004;
              }
              states_.add(input.readMessage(ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          states_ = java.util.Collections.unmodifiableList(states_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlObjectState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlObjectState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState.class, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState.Builder.class);
    }

    public static com.google.protobuf.Parser<ControlObjectState> PARSER =
        new com.google.protobuf.AbstractParser<ControlObjectState>() {
      public ControlObjectState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ControlObjectState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ControlObjectState> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id паспорта КО
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id паспорта КО
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional uint32 time = 2;
    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <code>optional uint32 time = 2;</code>
     *
     * <pre>
     * время изменения состояния (unix time)
     * </pre>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 time = 2;</code>
     *
     * <pre>
     * время изменения состояния (unix time)
     * </pre>
     */
    public int getTime() {
      return time_;
    }

    // repeated .almaz2.domain_objects.ControlElementState states = 3;
    public static final int STATES_FIELD_NUMBER = 3;
    private java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState> states_;
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
     *
     * <pre>
     * Блок состояний КЭ
     * </pre>
     */
    public java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState> getStatesList() {
      return states_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
     *
     * <pre>
     * Блок состояний КЭ
     * </pre>
     */
    public java.util.List<? extends ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementStateOrBuilder> 
        getStatesOrBuilderList() {
      return states_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
     *
     * <pre>
     * Блок состояний КЭ
     * </pre>
     */
    public int getStatesCount() {
      return states_.size();
    }
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
     *
     * <pre>
     * Блок состояний КЭ
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState getStates(int index) {
      return states_.get(index);
    }
    /**
     * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
     *
     * <pre>
     * Блок состояний КЭ
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementStateOrBuilder getStatesOrBuilder(
        int index) {
      return states_.get(index);
    }

    private void initFields() {
      id_ = 0;
      time_ = 0;
      states_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, time_);
      }
      for (int i = 0; i < states_.size(); i++) {
        output.writeMessage(3, states_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, time_);
      }
      for (int i = 0; i < states_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, states_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.domain_objects.ControlObjectState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlObjectState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlObjectState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState.class, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState.Builder.class);
      }

      // Construct using ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStatesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (statesBuilder_ == null) {
          states_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          statesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.internal_static_almaz2_domain_objects_ControlObjectState_descriptor;
      }

      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState getDefaultInstanceForType() {
        return ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState.getDefaultInstance();
      }

      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState build() {
        ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState buildPartial() {
        ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState result = new ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        if (statesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            states_ = java.util.Collections.unmodifiableList(states_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.states_ = states_;
        } else {
          result.states_ = statesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState) {
          return mergeFrom((ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState other) {
        if (other == ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (statesBuilder_ == null) {
          if (!other.states_.isEmpty()) {
            if (states_.isEmpty()) {
              states_ = other.states_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureStatesIsMutable();
              states_.addAll(other.states_);
            }
            onChanged();
          }
        } else {
          if (!other.states_.isEmpty()) {
            if (statesBuilder_.isEmpty()) {
              statesBuilder_.dispose();
              statesBuilder_ = null;
              states_ = other.states_;
              bitField0_ = (bitField0_ & ~0x00000004);
              statesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStatesFieldBuilder() : null;
            } else {
              statesBuilder_.addAllMessages(other.states_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlObjectState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 id = 1;
      private int id_ ;
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id паспорта КО
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id паспорта КО
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id паспорта КО
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id паспорта КО
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 time = 2;
      private int time_ ;
      /**
       * <code>optional uint32 time = 2;</code>
       *
       * <pre>
       * время изменения состояния (unix time)
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 time = 2;</code>
       *
       * <pre>
       * время изменения состояния (unix time)
       * </pre>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <code>optional uint32 time = 2;</code>
       *
       * <pre>
       * время изменения состояния (unix time)
       * </pre>
       */
      public Builder setTime(int value) {
        bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 time = 2;</code>
       *
       * <pre>
       * время изменения состояния (unix time)
       * </pre>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0;
        onChanged();
        return this;
      }

      // repeated .almaz2.domain_objects.ControlElementState states = 3;
      private java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState> states_ =
        java.util.Collections.emptyList();
      private void ensureStatesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          states_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState>(states_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.Builder, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementStateOrBuilder> statesBuilder_;

      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState> getStatesList() {
        if (statesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(states_);
        } else {
          return statesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public int getStatesCount() {
        if (statesBuilder_ == null) {
          return states_.size();
        } else {
          return statesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState getStates(int index) {
        if (statesBuilder_ == null) {
          return states_.get(index);
        } else {
          return statesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public Builder setStates(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState value) {
        if (statesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatesIsMutable();
          states_.set(index, value);
          onChanged();
        } else {
          statesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public Builder setStates(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.Builder builderForValue) {
        if (statesBuilder_ == null) {
          ensureStatesIsMutable();
          states_.set(index, builderForValue.build());
          onChanged();
        } else {
          statesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public Builder addStates(ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState value) {
        if (statesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatesIsMutable();
          states_.add(value);
          onChanged();
        } else {
          statesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public Builder addStates(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState value) {
        if (statesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatesIsMutable();
          states_.add(index, value);
          onChanged();
        } else {
          statesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public Builder addStates(
          ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.Builder builderForValue) {
        if (statesBuilder_ == null) {
          ensureStatesIsMutable();
          states_.add(builderForValue.build());
          onChanged();
        } else {
          statesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public Builder addStates(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.Builder builderForValue) {
        if (statesBuilder_ == null) {
          ensureStatesIsMutable();
          states_.add(index, builderForValue.build());
          onChanged();
        } else {
          statesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public Builder addAllStates(
          java.lang.Iterable<? extends ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState> values) {
        if (statesBuilder_ == null) {
          ensureStatesIsMutable();
          super.addAll(values, states_);
          onChanged();
        } else {
          statesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public Builder clearStates() {
        if (statesBuilder_ == null) {
          states_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          statesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public Builder removeStates(int index) {
        if (statesBuilder_ == null) {
          ensureStatesIsMutable();
          states_.remove(index);
          onChanged();
        } else {
          statesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.Builder getStatesBuilder(
          int index) {
        return getStatesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementStateOrBuilder getStatesOrBuilder(
          int index) {
        if (statesBuilder_ == null) {
          return states_.get(index);  } else {
          return statesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public java.util.List<? extends ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementStateOrBuilder> 
           getStatesOrBuilderList() {
        if (statesBuilder_ != null) {
          return statesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(states_);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.Builder addStatesBuilder() {
        return getStatesFieldBuilder().addBuilder(
            ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.Builder addStatesBuilder(
          int index) {
        return getStatesFieldBuilder().addBuilder(
            index, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.ControlElementState states = 3;</code>
       *
       * <pre>
       * Блок состояний КЭ
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.Builder> 
           getStatesBuilderList() {
        return getStatesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.Builder, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementStateOrBuilder> 
          getStatesFieldBuilder() {
        if (statesBuilder_ == null) {
          statesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementState.Builder, ru.kodos.almaz2.domain_objects.ControlObjectStateClass.ControlElementStateOrBuilder>(
                  states_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          states_ = null;
        }
        return statesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.domain_objects.ControlObjectState)
    }

    static {
      defaultInstance = new ControlObjectState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.domain_objects.ControlObjectState)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_domain_objects_ControlElementState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_domain_objects_ControlElementState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_domain_objects_ControlElementState_SensorState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_domain_objects_ControlElementState_SensorState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_domain_objects_ControlElementState_ManagedElementState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_domain_objects_ControlElementState_ManagedElementState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_domain_objects_ControlObjectState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_domain_objects_ControlObjectState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032control_object_state.proto\022\025almaz2.dom" +
      "ain_objects\032\021field_types.proto\032\020properti" +
      "es.proto\"\260\003\n\023ControlElementState\022\n\n\002id\030\001" +
      " \001(\r\0224\n\005value\030\002 \001(\0132%.almaz2.domain_obje" +
      "cts.FieldTypeValue\022M\n\rsensor_states\030\003 \003(" +
      "\01326.almaz2.domain_objects.ControlElement" +
      "State.SensorState\022^\n\026managed_element_sta" +
      "tes\030\004 \003(\0132>.almaz2.domain_objects.Contro" +
      "lElementState.ManagedElementState\032O\n\013Sen" +
      "sorState\022\n\n\002id\030\001 \001(\r\0224\n\005value\030\002 \001(\0132%.al",
      "maz2.domain_objects.FieldTypeValue\032W\n\023Ma" +
      "nagedElementState\022\n\n\002id\030\001 \001(\r\0224\n\005value\030\002" +
      " \001(\0132%.almaz2.domain_objects.FieldTypeVa" +
      "lue\"j\n\022ControlObjectState\022\n\n\002id\030\001 \001(\r\022\014\n" +
      "\004time\030\002 \001(\r\022:\n\006states\030\003 \003(\0132*.almaz2.dom" +
      "ain_objects.ControlElementStateB9\n\036ru.ko" +
      "dos.almaz2.domain_objectsB\027ControlObject" +
      "StateClass"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_almaz2_domain_objects_ControlElementState_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_almaz2_domain_objects_ControlElementState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_domain_objects_ControlElementState_descriptor,
              new java.lang.String[] { "Id", "Value", "SensorStates", "ManagedElementStates", });
          internal_static_almaz2_domain_objects_ControlElementState_SensorState_descriptor =
            internal_static_almaz2_domain_objects_ControlElementState_descriptor.getNestedTypes().get(0);
          internal_static_almaz2_domain_objects_ControlElementState_SensorState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_domain_objects_ControlElementState_SensorState_descriptor,
              new java.lang.String[] { "Id", "Value", });
          internal_static_almaz2_domain_objects_ControlElementState_ManagedElementState_descriptor =
            internal_static_almaz2_domain_objects_ControlElementState_descriptor.getNestedTypes().get(1);
          internal_static_almaz2_domain_objects_ControlElementState_ManagedElementState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_domain_objects_ControlElementState_ManagedElementState_descriptor,
              new java.lang.String[] { "Id", "Value", });
          internal_static_almaz2_domain_objects_ControlObjectState_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_almaz2_domain_objects_ControlObjectState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_domain_objects_ControlObjectState_descriptor,
              new java.lang.String[] { "Id", "Time", "States", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ru.kodos.almaz2.domain_objects.FieldTypesClass.getDescriptor(),
          ru.kodos.almaz2.domain_objects.PropertiesClass.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
