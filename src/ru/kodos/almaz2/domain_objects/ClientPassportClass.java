// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_passport.proto

package ru.kodos.almaz2.domain_objects;

public final class ClientPassportClass {
  private ClientPassportClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ClientPassportOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 passport_id = 1;
    /**
     * <code>optional uint32 passport_id = 1;</code>
     *
     * <pre>
     * Идентификатор клиента.
     * </pre>
     */
    boolean hasPassportId();
    /**
     * <code>optional uint32 passport_id = 1;</code>
     *
     * <pre>
     * Идентификатор клиента.
     * </pre>
     */
    int getPassportId();

    // optional string passport_type_id = 2;
    /**
     * <code>optional string passport_type_id = 2;</code>
     *
     * <pre>
     * id паспорта типа интерфейса
     * </pre>
     */
    boolean hasPassportTypeId();
    /**
     * <code>optional string passport_type_id = 2;</code>
     *
     * <pre>
     * id паспорта типа интерфейса
     * </pre>
     */
    java.lang.String getPassportTypeId();
    /**
     * <code>optional string passport_type_id = 2;</code>
     *
     * <pre>
     * id паспорта типа интерфейса
     * </pre>
     */
    com.google.protobuf.ByteString
        getPassportTypeIdBytes();

    // optional .almaz2.domain_objects.MultiLanguageString display_name = 3;
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
     *
     * <pre>
     * отображаемое имя
     * </pre>
     */
    boolean hasDisplayName();
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
     *
     * <pre>
     * отображаемое имя
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString getDisplayName();
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
     *
     * <pre>
     * отображаемое имя
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder getDisplayNameOrBuilder();

    // optional .almaz2.domain_objects.MultiLanguageString description = 4;
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString description = 4;</code>
     *
     * <pre>
     * описание
     * </pre>
     */
    boolean hasDescription();
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString description = 4;</code>
     *
     * <pre>
     * описание
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString getDescription();
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString description = 4;</code>
     *
     * <pre>
     * описание
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder getDescriptionOrBuilder();

    // optional string public_key = 5;
    /**
     * <code>optional string public_key = 5;</code>
     *
     * <pre>
     * Публичный ключ клиента.
     * </pre>
     */
    boolean hasPublicKey();
    /**
     * <code>optional string public_key = 5;</code>
     *
     * <pre>
     * Публичный ключ клиента.
     * </pre>
     */
    java.lang.String getPublicKey();
    /**
     * <code>optional string public_key = 5;</code>
     *
     * <pre>
     * Публичный ключ клиента.
     * </pre>
     */
    com.google.protobuf.ByteString
        getPublicKeyBytes();

    // optional string primary_key = 6;
    /**
     * <code>optional string primary_key = 6;</code>
     *
     * <pre>
     * Временный ключ первичной авторизации.
     * </pre>
     */
    boolean hasPrimaryKey();
    /**
     * <code>optional string primary_key = 6;</code>
     *
     * <pre>
     * Временный ключ первичной авторизации.
     * </pre>
     */
    java.lang.String getPrimaryKey();
    /**
     * <code>optional string primary_key = 6;</code>
     *
     * <pre>
     * Временный ключ первичной авторизации.
     * </pre>
     */
    com.google.protobuf.ByteString
        getPrimaryKeyBytes();
  }
  /**
   * Protobuf type {@code almaz2.domain_objects.ClientPassport}
   */
  public static final class ClientPassport extends
      com.google.protobuf.GeneratedMessage
      implements ClientPassportOrBuilder {
    // Use ClientPassport.newBuilder() to construct.
    private ClientPassport(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClientPassport(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClientPassport defaultInstance;
    public static ClientPassport getDefaultInstance() {
      return defaultInstance;
    }

    public ClientPassport getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClientPassport(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              passportId_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              passportTypeId_ = input.readBytes();
              break;
            }
            case 26: {
              ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = displayName_.toBuilder();
              }
              displayName_ = input.readMessage(ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(displayName_);
                displayName_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = description_.toBuilder();
              }
              description_ = input.readMessage(ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(description_);
                description_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              publicKey_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              primaryKey_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.domain_objects.ClientPassportClass.internal_static_almaz2_domain_objects_ClientPassport_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.domain_objects.ClientPassportClass.internal_static_almaz2_domain_objects_ClientPassport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport.class, ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport.Builder.class);
    }

    public static com.google.protobuf.Parser<ClientPassport> PARSER =
        new com.google.protobuf.AbstractParser<ClientPassport>() {
      public ClientPassport parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClientPassport(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClientPassport> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 passport_id = 1;
    public static final int PASSPORT_ID_FIELD_NUMBER = 1;
    private int passportId_;
    /**
     * <code>optional uint32 passport_id = 1;</code>
     *
     * <pre>
     * Идентификатор клиента.
     * </pre>
     */
    public boolean hasPassportId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 passport_id = 1;</code>
     *
     * <pre>
     * Идентификатор клиента.
     * </pre>
     */
    public int getPassportId() {
      return passportId_;
    }

    // optional string passport_type_id = 2;
    public static final int PASSPORT_TYPE_ID_FIELD_NUMBER = 2;
    private java.lang.Object passportTypeId_;
    /**
     * <code>optional string passport_type_id = 2;</code>
     *
     * <pre>
     * id паспорта типа интерфейса
     * </pre>
     */
    public boolean hasPassportTypeId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string passport_type_id = 2;</code>
     *
     * <pre>
     * id паспорта типа интерфейса
     * </pre>
     */
    public java.lang.String getPassportTypeId() {
      java.lang.Object ref = passportTypeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          passportTypeId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string passport_type_id = 2;</code>
     *
     * <pre>
     * id паспорта типа интерфейса
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPassportTypeIdBytes() {
      java.lang.Object ref = passportTypeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        passportTypeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .almaz2.domain_objects.MultiLanguageString display_name = 3;
    public static final int DISPLAY_NAME_FIELD_NUMBER = 3;
    private ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString displayName_;
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
     *
     * <pre>
     * отображаемое имя
     * </pre>
     */
    public boolean hasDisplayName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
     *
     * <pre>
     * отображаемое имя
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString getDisplayName() {
      return displayName_;
    }
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
     *
     * <pre>
     * отображаемое имя
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder getDisplayNameOrBuilder() {
      return displayName_;
    }

    // optional .almaz2.domain_objects.MultiLanguageString description = 4;
    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString description_;
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString description = 4;</code>
     *
     * <pre>
     * описание
     * </pre>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString description = 4;</code>
     *
     * <pre>
     * описание
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString getDescription() {
      return description_;
    }
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString description = 4;</code>
     *
     * <pre>
     * описание
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder getDescriptionOrBuilder() {
      return description_;
    }

    // optional string public_key = 5;
    public static final int PUBLIC_KEY_FIELD_NUMBER = 5;
    private java.lang.Object publicKey_;
    /**
     * <code>optional string public_key = 5;</code>
     *
     * <pre>
     * Публичный ключ клиента.
     * </pre>
     */
    public boolean hasPublicKey() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string public_key = 5;</code>
     *
     * <pre>
     * Публичный ключ клиента.
     * </pre>
     */
    public java.lang.String getPublicKey() {
      java.lang.Object ref = publicKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          publicKey_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string public_key = 5;</code>
     *
     * <pre>
     * Публичный ключ клиента.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPublicKeyBytes() {
      java.lang.Object ref = publicKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        publicKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string primary_key = 6;
    public static final int PRIMARY_KEY_FIELD_NUMBER = 6;
    private java.lang.Object primaryKey_;
    /**
     * <code>optional string primary_key = 6;</code>
     *
     * <pre>
     * Временный ключ первичной авторизации.
     * </pre>
     */
    public boolean hasPrimaryKey() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string primary_key = 6;</code>
     *
     * <pre>
     * Временный ключ первичной авторизации.
     * </pre>
     */
    public java.lang.String getPrimaryKey() {
      java.lang.Object ref = primaryKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          primaryKey_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string primary_key = 6;</code>
     *
     * <pre>
     * Временный ключ первичной авторизации.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPrimaryKeyBytes() {
      java.lang.Object ref = primaryKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        primaryKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      passportId_ = 0;
      passportTypeId_ = "";
      displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
      description_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
      publicKey_ = "";
      primaryKey_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasDisplayName()) {
        if (!getDisplayName().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDescription()) {
        if (!getDescription().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, passportId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPassportTypeIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, displayName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, description_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getPublicKeyBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getPrimaryKeyBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, passportId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPassportTypeIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, displayName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, description_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getPublicKeyBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getPrimaryKeyBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.domain_objects.ClientPassport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.domain_objects.ClientPassportClass.internal_static_almaz2_domain_objects_ClientPassport_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.domain_objects.ClientPassportClass.internal_static_almaz2_domain_objects_ClientPassport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport.class, ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport.Builder.class);
      }

      // Construct using ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDisplayNameFieldBuilder();
          getDescriptionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        passportId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        passportTypeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (displayNameBuilder_ == null) {
          displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
        } else {
          displayNameBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (descriptionBuilder_ == null) {
          description_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
        } else {
          descriptionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        publicKey_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        primaryKey_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.domain_objects.ClientPassportClass.internal_static_almaz2_domain_objects_ClientPassport_descriptor;
      }

      public ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport getDefaultInstanceForType() {
        return ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport.getDefaultInstance();
      }

      public ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport build() {
        ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport buildPartial() {
        ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport result = new ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.passportId_ = passportId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.passportTypeId_ = passportTypeId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (displayNameBuilder_ == null) {
          result.displayName_ = displayName_;
        } else {
          result.displayName_ = displayNameBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (descriptionBuilder_ == null) {
          result.description_ = description_;
        } else {
          result.description_ = descriptionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.publicKey_ = publicKey_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.primaryKey_ = primaryKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport) {
          return mergeFrom((ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport other) {
        if (other == ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport.getDefaultInstance()) return this;
        if (other.hasPassportId()) {
          setPassportId(other.getPassportId());
        }
        if (other.hasPassportTypeId()) {
          bitField0_ |= 0x00000002;
          passportTypeId_ = other.passportTypeId_;
          onChanged();
        }
        if (other.hasDisplayName()) {
          mergeDisplayName(other.getDisplayName());
        }
        if (other.hasDescription()) {
          mergeDescription(other.getDescription());
        }
        if (other.hasPublicKey()) {
          bitField0_ |= 0x00000010;
          publicKey_ = other.publicKey_;
          onChanged();
        }
        if (other.hasPrimaryKey()) {
          bitField0_ |= 0x00000020;
          primaryKey_ = other.primaryKey_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasDisplayName()) {
          if (!getDisplayName().isInitialized()) {
            
            return false;
          }
        }
        if (hasDescription()) {
          if (!getDescription().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.domain_objects.ClientPassportClass.ClientPassport) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 passport_id = 1;
      private int passportId_ ;
      /**
       * <code>optional uint32 passport_id = 1;</code>
       *
       * <pre>
       * Идентификатор клиента.
       * </pre>
       */
      public boolean hasPassportId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 passport_id = 1;</code>
       *
       * <pre>
       * Идентификатор клиента.
       * </pre>
       */
      public int getPassportId() {
        return passportId_;
      }
      /**
       * <code>optional uint32 passport_id = 1;</code>
       *
       * <pre>
       * Идентификатор клиента.
       * </pre>
       */
      public Builder setPassportId(int value) {
        bitField0_ |= 0x00000001;
        passportId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 passport_id = 1;</code>
       *
       * <pre>
       * Идентификатор клиента.
       * </pre>
       */
      public Builder clearPassportId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        passportId_ = 0;
        onChanged();
        return this;
      }

      // optional string passport_type_id = 2;
      private java.lang.Object passportTypeId_ = "";
      /**
       * <code>optional string passport_type_id = 2;</code>
       *
       * <pre>
       * id паспорта типа интерфейса
       * </pre>
       */
      public boolean hasPassportTypeId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string passport_type_id = 2;</code>
       *
       * <pre>
       * id паспорта типа интерфейса
       * </pre>
       */
      public java.lang.String getPassportTypeId() {
        java.lang.Object ref = passportTypeId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          passportTypeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string passport_type_id = 2;</code>
       *
       * <pre>
       * id паспорта типа интерфейса
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPassportTypeIdBytes() {
        java.lang.Object ref = passportTypeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          passportTypeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string passport_type_id = 2;</code>
       *
       * <pre>
       * id паспорта типа интерфейса
       * </pre>
       */
      public Builder setPassportTypeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        passportTypeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string passport_type_id = 2;</code>
       *
       * <pre>
       * id паспорта типа интерфейса
       * </pre>
       */
      public Builder clearPassportTypeId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        passportTypeId_ = getDefaultInstance().getPassportTypeId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string passport_type_id = 2;</code>
       *
       * <pre>
       * id паспорта типа интерфейса
       * </pre>
       */
      public Builder setPassportTypeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        passportTypeId_ = value;
        onChanged();
        return this;
      }

      // optional .almaz2.domain_objects.MultiLanguageString display_name = 3;
      private ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder> displayNameBuilder_;
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * отображаемое имя
       * </pre>
       */
      public boolean hasDisplayName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * отображаемое имя
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString getDisplayName() {
        if (displayNameBuilder_ == null) {
          return displayName_;
        } else {
          return displayNameBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * отображаемое имя
       * </pre>
       */
      public Builder setDisplayName(ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString value) {
        if (displayNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          displayName_ = value;
          onChanged();
        } else {
          displayNameBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * отображаемое имя
       * </pre>
       */
      public Builder setDisplayName(
          ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder builderForValue) {
        if (displayNameBuilder_ == null) {
          displayName_ = builderForValue.build();
          onChanged();
        } else {
          displayNameBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * отображаемое имя
       * </pre>
       */
      public Builder mergeDisplayName(ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString value) {
        if (displayNameBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              displayName_ != ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance()) {
            displayName_ =
              ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.newBuilder(displayName_).mergeFrom(value).buildPartial();
          } else {
            displayName_ = value;
          }
          onChanged();
        } else {
          displayNameBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * отображаемое имя
       * </pre>
       */
      public Builder clearDisplayName() {
        if (displayNameBuilder_ == null) {
          displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
          onChanged();
        } else {
          displayNameBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * отображаемое имя
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder getDisplayNameBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDisplayNameFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * отображаемое имя
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder getDisplayNameOrBuilder() {
        if (displayNameBuilder_ != null) {
          return displayNameBuilder_.getMessageOrBuilder();
        } else {
          return displayName_;
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * отображаемое имя
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder> 
          getDisplayNameFieldBuilder() {
        if (displayNameBuilder_ == null) {
          displayNameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder>(
                  displayName_,
                  getParentForChildren(),
                  isClean());
          displayName_ = null;
        }
        return displayNameBuilder_;
      }

      // optional .almaz2.domain_objects.MultiLanguageString description = 4;
      private ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString description_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder> descriptionBuilder_;
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString description = 4;</code>
       *
       * <pre>
       * описание
       * </pre>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString description = 4;</code>
       *
       * <pre>
       * описание
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString getDescription() {
        if (descriptionBuilder_ == null) {
          return description_;
        } else {
          return descriptionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString description = 4;</code>
       *
       * <pre>
       * описание
       * </pre>
       */
      public Builder setDescription(ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString value) {
        if (descriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          description_ = value;
          onChanged();
        } else {
          descriptionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString description = 4;</code>
       *
       * <pre>
       * описание
       * </pre>
       */
      public Builder setDescription(
          ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder builderForValue) {
        if (descriptionBuilder_ == null) {
          description_ = builderForValue.build();
          onChanged();
        } else {
          descriptionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString description = 4;</code>
       *
       * <pre>
       * описание
       * </pre>
       */
      public Builder mergeDescription(ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString value) {
        if (descriptionBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              description_ != ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance()) {
            description_ =
              ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.newBuilder(description_).mergeFrom(value).buildPartial();
          } else {
            description_ = value;
          }
          onChanged();
        } else {
          descriptionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString description = 4;</code>
       *
       * <pre>
       * описание
       * </pre>
       */
      public Builder clearDescription() {
        if (descriptionBuilder_ == null) {
          description_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
          onChanged();
        } else {
          descriptionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString description = 4;</code>
       *
       * <pre>
       * описание
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder getDescriptionBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDescriptionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString description = 4;</code>
       *
       * <pre>
       * описание
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder getDescriptionOrBuilder() {
        if (descriptionBuilder_ != null) {
          return descriptionBuilder_.getMessageOrBuilder();
        } else {
          return description_;
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString description = 4;</code>
       *
       * <pre>
       * описание
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder> 
          getDescriptionFieldBuilder() {
        if (descriptionBuilder_ == null) {
          descriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder>(
                  description_,
                  getParentForChildren(),
                  isClean());
          description_ = null;
        }
        return descriptionBuilder_;
      }

      // optional string public_key = 5;
      private java.lang.Object publicKey_ = "";
      /**
       * <code>optional string public_key = 5;</code>
       *
       * <pre>
       * Публичный ключ клиента.
       * </pre>
       */
      public boolean hasPublicKey() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string public_key = 5;</code>
       *
       * <pre>
       * Публичный ключ клиента.
       * </pre>
       */
      public java.lang.String getPublicKey() {
        java.lang.Object ref = publicKey_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          publicKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string public_key = 5;</code>
       *
       * <pre>
       * Публичный ключ клиента.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPublicKeyBytes() {
        java.lang.Object ref = publicKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          publicKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string public_key = 5;</code>
       *
       * <pre>
       * Публичный ключ клиента.
       * </pre>
       */
      public Builder setPublicKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        publicKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string public_key = 5;</code>
       *
       * <pre>
       * Публичный ключ клиента.
       * </pre>
       */
      public Builder clearPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000010);
        publicKey_ = getDefaultInstance().getPublicKey();
        onChanged();
        return this;
      }
      /**
       * <code>optional string public_key = 5;</code>
       *
       * <pre>
       * Публичный ключ клиента.
       * </pre>
       */
      public Builder setPublicKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        publicKey_ = value;
        onChanged();
        return this;
      }

      // optional string primary_key = 6;
      private java.lang.Object primaryKey_ = "";
      /**
       * <code>optional string primary_key = 6;</code>
       *
       * <pre>
       * Временный ключ первичной авторизации.
       * </pre>
       */
      public boolean hasPrimaryKey() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string primary_key = 6;</code>
       *
       * <pre>
       * Временный ключ первичной авторизации.
       * </pre>
       */
      public java.lang.String getPrimaryKey() {
        java.lang.Object ref = primaryKey_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          primaryKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string primary_key = 6;</code>
       *
       * <pre>
       * Временный ключ первичной авторизации.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPrimaryKeyBytes() {
        java.lang.Object ref = primaryKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          primaryKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string primary_key = 6;</code>
       *
       * <pre>
       * Временный ключ первичной авторизации.
       * </pre>
       */
      public Builder setPrimaryKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        primaryKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string primary_key = 6;</code>
       *
       * <pre>
       * Временный ключ первичной авторизации.
       * </pre>
       */
      public Builder clearPrimaryKey() {
        bitField0_ = (bitField0_ & ~0x00000020);
        primaryKey_ = getDefaultInstance().getPrimaryKey();
        onChanged();
        return this;
      }
      /**
       * <code>optional string primary_key = 6;</code>
       *
       * <pre>
       * Временный ключ первичной авторизации.
       * </pre>
       */
      public Builder setPrimaryKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        primaryKey_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.domain_objects.ClientPassport)
    }

    static {
      defaultInstance = new ClientPassport(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.domain_objects.ClientPassport)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_domain_objects_ClientPassport_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_domain_objects_ClientPassport_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025client_passport.proto\022\025almaz2.domain_o" +
      "bjects\032\021field_types.proto\"\353\001\n\016ClientPass" +
      "port\022\023\n\013passport_id\030\001 \001(\r\022\030\n\020passport_ty" +
      "pe_id\030\002 \001(\t\022@\n\014display_name\030\003 \001(\0132*.alma" +
      "z2.domain_objects.MultiLanguageString\022?\n" +
      "\013description\030\004 \001(\0132*.almaz2.domain_objec" +
      "ts.MultiLanguageString\022\022\n\npublic_key\030\005 \001" +
      "(\t\022\023\n\013primary_key\030\006 \001(\tB5\n\036ru.kodos.alma" +
      "z2.domain_objectsB\023ClientPassportClass"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_almaz2_domain_objects_ClientPassport_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_almaz2_domain_objects_ClientPassport_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_domain_objects_ClientPassport_descriptor,
              new java.lang.String[] { "PassportId", "PassportTypeId", "DisplayName", "Description", "PublicKey", "PrimaryKey", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ru.kodos.almaz2.domain_objects.FieldTypesClass.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
