// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: control_object_equipment.proto

package ru.kodos.almaz2.domain_objects;

public final class ControlObjectEquipmentClass {
  private ControlObjectEquipmentClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface EquipmentLogicalInputOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 id = 1;
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id входа
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id входа
     * </pre>
     */
    int getId();

    // repeated .almaz2.domain_objects.FieldTypeValue values = 3;
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики входа оборудования (значения)
     * </pre>
     */
    java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> 
        getValuesList();
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики входа оборудования (значения)
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValues(int index);
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики входа оборудования (значения)
     * </pre>
     */
    int getValuesCount();
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики входа оборудования (значения)
     * </pre>
     */
    java.util.List<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
        getValuesOrBuilderList();
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики входа оборудования (значения)
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValuesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code almaz2.domain_objects.EquipmentLogicalInput}
   *
   * <pre>
   * логический вход оборудования
   * </pre>
   */
  public static final class EquipmentLogicalInput extends
      com.google.protobuf.GeneratedMessage
      implements EquipmentLogicalInputOrBuilder {
    // Use EquipmentLogicalInput.newBuilder() to construct.
    private EquipmentLogicalInput(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EquipmentLogicalInput(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EquipmentLogicalInput defaultInstance;
    public static EquipmentLogicalInput getDefaultInstance() {
      return defaultInstance;
    }

    public EquipmentLogicalInput getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EquipmentLogicalInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                values_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue>();
                mutable_bitField0_ |= 0x00000002;
              }
              values_.add(input.readMessage(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          values_ = java.util.Collections.unmodifiableList(values_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.internal_static_almaz2_domain_objects_EquipmentLogicalInput_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.internal_static_almaz2_domain_objects_EquipmentLogicalInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.class, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.Builder.class);
    }

    public static com.google.protobuf.Parser<EquipmentLogicalInput> PARSER =
        new com.google.protobuf.AbstractParser<EquipmentLogicalInput>() {
      public EquipmentLogicalInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EquipmentLogicalInput(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EquipmentLogicalInput> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id входа
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id входа
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // repeated .almaz2.domain_objects.FieldTypeValue values = 3;
    public static final int VALUES_FIELD_NUMBER = 3;
    private java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> values_;
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики входа оборудования (значения)
     * </pre>
     */
    public java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> getValuesList() {
      return values_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики входа оборудования (значения)
     * </pre>
     */
    public java.util.List<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
        getValuesOrBuilderList() {
      return values_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики входа оборудования (значения)
     * </pre>
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики входа оборудования (значения)
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValues(int index) {
      return values_.get(index);
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики входа оборудования (значения)
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValuesOrBuilder(
        int index) {
      return values_.get(index);
    }

    private void initFields() {
      id_ = 0;
      values_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeMessage(3, values_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      for (int i = 0; i < values_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, values_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.domain_objects.EquipmentLogicalInput}
     *
     * <pre>
     * логический вход оборудования
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.internal_static_almaz2_domain_objects_EquipmentLogicalInput_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.internal_static_almaz2_domain_objects_EquipmentLogicalInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.class, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.Builder.class);
      }

      // Construct using ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValuesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.internal_static_almaz2_domain_objects_EquipmentLogicalInput_descriptor;
      }

      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput getDefaultInstanceForType() {
        return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.getDefaultInstance();
      }

      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput build() {
        ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput buildPartial() {
        ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput result = new ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (valuesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            values_ = java.util.Collections.unmodifiableList(values_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.values_ = values_;
        } else {
          result.values_ = valuesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput) {
          return mergeFrom((ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput other) {
        if (other == ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (valuesBuilder_ == null) {
          if (!other.values_.isEmpty()) {
            if (values_.isEmpty()) {
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValuesIsMutable();
              values_.addAll(other.values_);
            }
            onChanged();
          }
        } else {
          if (!other.values_.isEmpty()) {
            if (valuesBuilder_.isEmpty()) {
              valuesBuilder_.dispose();
              valuesBuilder_ = null;
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valuesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValuesFieldBuilder() : null;
            } else {
              valuesBuilder_.addAllMessages(other.values_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 id = 1;
      private int id_ ;
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id входа
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id входа
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id входа
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id входа
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // repeated .almaz2.domain_objects.FieldTypeValue values = 3;
      private java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> values_ =
        java.util.Collections.emptyList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          values_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue>(values_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> valuesBuilder_;

      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> getValuesList() {
        if (valuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(values_);
        } else {
          return valuesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public int getValuesCount() {
        if (valuesBuilder_ == null) {
          return values_.size();
        } else {
          return valuesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValues(int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);
        } else {
          return valuesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public Builder setValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.set(index, value);
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public Builder setValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.set(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public Builder addValues(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public Builder addValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(index, value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public Builder addValues(
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public Builder addValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> values) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          super.addAll(values, values_);
          onChanged();
        } else {
          valuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public Builder clearValues() {
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public Builder removeValues(int index) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.remove(index);
          onChanged();
        } else {
          valuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder getValuesBuilder(
          int index) {
        return getValuesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValuesOrBuilder(
          int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);  } else {
          return valuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public java.util.List<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
           getValuesOrBuilderList() {
        if (valuesBuilder_ != null) {
          return valuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(values_);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder addValuesBuilder() {
        return getValuesFieldBuilder().addBuilder(
            ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder addValuesBuilder(
          int index) {
        return getValuesFieldBuilder().addBuilder(
            index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики входа оборудования (значения)
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder> 
           getValuesBuilderList() {
        return getValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
          getValuesFieldBuilder() {
        if (valuesBuilder_ == null) {
          valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder>(
                  values_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          values_ = null;
        }
        return valuesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.domain_objects.EquipmentLogicalInput)
    }

    static {
      defaultInstance = new EquipmentLogicalInput(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.domain_objects.EquipmentLogicalInput)
  }

  public interface EquipmentLogicalOutputOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 id = 1;
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id выхода
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id выхода
     * </pre>
     */
    int getId();

    // repeated .almaz2.domain_objects.FieldTypeValue values = 3;
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики выхода оборудования (значения)
     * </pre>
     */
    java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> 
        getValuesList();
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики выхода оборудования (значения)
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValues(int index);
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики выхода оборудования (значения)
     * </pre>
     */
    int getValuesCount();
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики выхода оборудования (значения)
     * </pre>
     */
    java.util.List<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
        getValuesOrBuilderList();
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики выхода оборудования (значения)
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValuesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code almaz2.domain_objects.EquipmentLogicalOutput}
   *
   * <pre>
   * логический выход оборудования
   * </pre>
   */
  public static final class EquipmentLogicalOutput extends
      com.google.protobuf.GeneratedMessage
      implements EquipmentLogicalOutputOrBuilder {
    // Use EquipmentLogicalOutput.newBuilder() to construct.
    private EquipmentLogicalOutput(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EquipmentLogicalOutput(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EquipmentLogicalOutput defaultInstance;
    public static EquipmentLogicalOutput getDefaultInstance() {
      return defaultInstance;
    }

    public EquipmentLogicalOutput getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EquipmentLogicalOutput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                values_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue>();
                mutable_bitField0_ |= 0x00000002;
              }
              values_.add(input.readMessage(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          values_ = java.util.Collections.unmodifiableList(values_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.internal_static_almaz2_domain_objects_EquipmentLogicalOutput_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.internal_static_almaz2_domain_objects_EquipmentLogicalOutput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.class, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.Builder.class);
    }

    public static com.google.protobuf.Parser<EquipmentLogicalOutput> PARSER =
        new com.google.protobuf.AbstractParser<EquipmentLogicalOutput>() {
      public EquipmentLogicalOutput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EquipmentLogicalOutput(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EquipmentLogicalOutput> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id выхода
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id выхода
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // repeated .almaz2.domain_objects.FieldTypeValue values = 3;
    public static final int VALUES_FIELD_NUMBER = 3;
    private java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> values_;
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики выхода оборудования (значения)
     * </pre>
     */
    public java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> getValuesList() {
      return values_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики выхода оборудования (значения)
     * </pre>
     */
    public java.util.List<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
        getValuesOrBuilderList() {
      return values_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики выхода оборудования (значения)
     * </pre>
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики выхода оборудования (значения)
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValues(int index) {
      return values_.get(index);
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики выхода оборудования (значения)
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValuesOrBuilder(
        int index) {
      return values_.get(index);
    }

    private void initFields() {
      id_ = 0;
      values_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeMessage(3, values_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      for (int i = 0; i < values_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, values_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.domain_objects.EquipmentLogicalOutput}
     *
     * <pre>
     * логический выход оборудования
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.internal_static_almaz2_domain_objects_EquipmentLogicalOutput_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.internal_static_almaz2_domain_objects_EquipmentLogicalOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.class, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.Builder.class);
      }

      // Construct using ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValuesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.internal_static_almaz2_domain_objects_EquipmentLogicalOutput_descriptor;
      }

      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput getDefaultInstanceForType() {
        return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.getDefaultInstance();
      }

      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput build() {
        ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput buildPartial() {
        ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput result = new ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (valuesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            values_ = java.util.Collections.unmodifiableList(values_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.values_ = values_;
        } else {
          result.values_ = valuesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput) {
          return mergeFrom((ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput other) {
        if (other == ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (valuesBuilder_ == null) {
          if (!other.values_.isEmpty()) {
            if (values_.isEmpty()) {
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValuesIsMutable();
              values_.addAll(other.values_);
            }
            onChanged();
          }
        } else {
          if (!other.values_.isEmpty()) {
            if (valuesBuilder_.isEmpty()) {
              valuesBuilder_.dispose();
              valuesBuilder_ = null;
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valuesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValuesFieldBuilder() : null;
            } else {
              valuesBuilder_.addAllMessages(other.values_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 id = 1;
      private int id_ ;
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id выхода
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id выхода
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id выхода
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id выхода
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // repeated .almaz2.domain_objects.FieldTypeValue values = 3;
      private java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> values_ =
        java.util.Collections.emptyList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          values_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue>(values_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> valuesBuilder_;

      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> getValuesList() {
        if (valuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(values_);
        } else {
          return valuesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public int getValuesCount() {
        if (valuesBuilder_ == null) {
          return values_.size();
        } else {
          return valuesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValues(int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);
        } else {
          return valuesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public Builder setValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.set(index, value);
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public Builder setValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.set(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public Builder addValues(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public Builder addValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(index, value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public Builder addValues(
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public Builder addValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> values) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          super.addAll(values, values_);
          onChanged();
        } else {
          valuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public Builder clearValues() {
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public Builder removeValues(int index) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.remove(index);
          onChanged();
        } else {
          valuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder getValuesBuilder(
          int index) {
        return getValuesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValuesOrBuilder(
          int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);  } else {
          return valuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public java.util.List<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
           getValuesOrBuilderList() {
        if (valuesBuilder_ != null) {
          return valuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(values_);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder addValuesBuilder() {
        return getValuesFieldBuilder().addBuilder(
            ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder addValuesBuilder(
          int index) {
        return getValuesFieldBuilder().addBuilder(
            index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики выхода оборудования (значения)
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder> 
           getValuesBuilderList() {
        return getValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
          getValuesFieldBuilder() {
        if (valuesBuilder_ == null) {
          valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder>(
                  values_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          values_ = null;
        }
        return valuesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.domain_objects.EquipmentLogicalOutput)
    }

    static {
      defaultInstance = new EquipmentLogicalOutput(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.domain_objects.EquipmentLogicalOutput)
  }

  public interface ControlObjectEquipmentOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 id = 1;
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id оборудования КО (уникальный в контексте конкретного паспорта типа КО)
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id оборудования КО (уникальный в контексте конкретного паспорта типа КО)
     * </pre>
     */
    int getId();

    // optional string passport_type_id = 2;
    /**
     * <code>optional string passport_type_id = 2;</code>
     *
     * <pre>
     * id паспорта типа оборудования
     * </pre>
     */
    boolean hasPassportTypeId();
    /**
     * <code>optional string passport_type_id = 2;</code>
     *
     * <pre>
     * id паспорта типа оборудования
     * </pre>
     */
    java.lang.String getPassportTypeId();
    /**
     * <code>optional string passport_type_id = 2;</code>
     *
     * <pre>
     * id паспорта типа оборудования
     * </pre>
     */
    com.google.protobuf.ByteString
        getPassportTypeIdBytes();

    // repeated .almaz2.domain_objects.FieldTypeValue values = 3;
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики оборудования КО (значения)
     * </pre>
     */
    java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> 
        getValuesList();
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики оборудования КО (значения)
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValues(int index);
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики оборудования КО (значения)
     * </pre>
     */
    int getValuesCount();
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики оборудования КО (значения)
     * </pre>
     */
    java.util.List<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
        getValuesOrBuilderList();
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики оборудования КО (значения)
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValuesOrBuilder(
        int index);

    // optional .almaz2.domain_objects.MultiLanguageString display_name = 4;
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
     *
     * <pre>
     * имя оборудования КО
     * </pre>
     */
    boolean hasDisplayName();
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
     *
     * <pre>
     * имя оборудования КО
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString getDisplayName();
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
     *
     * <pre>
     * имя оборудования КО
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder getDisplayNameOrBuilder();

    // repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
     *
     * <pre>
     * значения настроек оборудования
     * </pre>
     */
    java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> 
        getSettingsValuesList();
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
     *
     * <pre>
     * значения настроек оборудования
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getSettingsValues(int index);
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
     *
     * <pre>
     * значения настроек оборудования
     * </pre>
     */
    int getSettingsValuesCount();
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
     *
     * <pre>
     * значения настроек оборудования
     * </pre>
     */
    java.util.List<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
        getSettingsValuesOrBuilderList();
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
     *
     * <pre>
     * значения настроек оборудования
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getSettingsValuesOrBuilder(
        int index);

    // repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
     *
     * <pre>
     * логический вход оборудования
     * </pre>
     */
    java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput> 
        getInputsList();
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
     *
     * <pre>
     * логический вход оборудования
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput getInputs(int index);
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
     *
     * <pre>
     * логический вход оборудования
     * </pre>
     */
    int getInputsCount();
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
     *
     * <pre>
     * логический вход оборудования
     * </pre>
     */
    java.util.List<? extends ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInputOrBuilder> 
        getInputsOrBuilderList();
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
     *
     * <pre>
     * логический вход оборудования
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInputOrBuilder getInputsOrBuilder(
        int index);

    // repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
     *
     * <pre>
     * логический выход оборудования
     * </pre>
     */
    java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput> 
        getOutputsList();
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
     *
     * <pre>
     * логический выход оборудования
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput getOutputs(int index);
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
     *
     * <pre>
     * логический выход оборудования
     * </pre>
     */
    int getOutputsCount();
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
     *
     * <pre>
     * логический выход оборудования
     * </pre>
     */
    java.util.List<? extends ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutputOrBuilder> 
        getOutputsOrBuilderList();
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
     *
     * <pre>
     * логический выход оборудования
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutputOrBuilder getOutputsOrBuilder(
        int index);

    // repeated uint32 interface_passport_id = 10;
    /**
     * <code>repeated uint32 interface_passport_id = 10;</code>
     *
     * <pre>
     * список паспортов интерфейсов, поддерживаемых оборудованием
     * </pre>
     */
    java.util.List<java.lang.Integer> getInterfacePassportIdList();
    /**
     * <code>repeated uint32 interface_passport_id = 10;</code>
     *
     * <pre>
     * список паспортов интерфейсов, поддерживаемых оборудованием
     * </pre>
     */
    int getInterfacePassportIdCount();
    /**
     * <code>repeated uint32 interface_passport_id = 10;</code>
     *
     * <pre>
     * список паспортов интерфейсов, поддерживаемых оборудованием
     * </pre>
     */
    int getInterfacePassportId(int index);
  }
  /**
   * Protobuf type {@code almaz2.domain_objects.ControlObjectEquipment}
   *
   * <pre>
   * оборудование КО
   * </pre>
   */
  public static final class ControlObjectEquipment extends
      com.google.protobuf.GeneratedMessage
      implements ControlObjectEquipmentOrBuilder {
    // Use ControlObjectEquipment.newBuilder() to construct.
    private ControlObjectEquipment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ControlObjectEquipment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ControlObjectEquipment defaultInstance;
    public static ControlObjectEquipment getDefaultInstance() {
      return defaultInstance;
    }

    public ControlObjectEquipment getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ControlObjectEquipment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              passportTypeId_ = input.readBytes();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                values_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue>();
                mutable_bitField0_ |= 0x00000004;
              }
              values_.add(input.readMessage(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = displayName_.toBuilder();
              }
              displayName_ = input.readMessage(ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(displayName_);
                displayName_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                settingsValues_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue>();
                mutable_bitField0_ |= 0x00000010;
              }
              settingsValues_.add(input.readMessage(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                inputs_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput>();
                mutable_bitField0_ |= 0x00000020;
              }
              inputs_.add(input.readMessage(ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                outputs_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput>();
                mutable_bitField0_ |= 0x00000040;
              }
              outputs_.add(input.readMessage(ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.PARSER, extensionRegistry));
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                interfacePassportId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              interfacePassportId_.add(input.readUInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                interfacePassportId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                interfacePassportId_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          values_ = java.util.Collections.unmodifiableList(values_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          settingsValues_ = java.util.Collections.unmodifiableList(settingsValues_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          inputs_ = java.util.Collections.unmodifiableList(inputs_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          outputs_ = java.util.Collections.unmodifiableList(outputs_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          interfacePassportId_ = java.util.Collections.unmodifiableList(interfacePassportId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.internal_static_almaz2_domain_objects_ControlObjectEquipment_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.internal_static_almaz2_domain_objects_ControlObjectEquipment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment.class, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment.Builder.class);
    }

    public static com.google.protobuf.Parser<ControlObjectEquipment> PARSER =
        new com.google.protobuf.AbstractParser<ControlObjectEquipment>() {
      public ControlObjectEquipment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ControlObjectEquipment(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ControlObjectEquipment> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id оборудования КО (уникальный в контексте конкретного паспорта типа КО)
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 id = 1;</code>
     *
     * <pre>
     * id оборудования КО (уникальный в контексте конкретного паспорта типа КО)
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // optional string passport_type_id = 2;
    public static final int PASSPORT_TYPE_ID_FIELD_NUMBER = 2;
    private java.lang.Object passportTypeId_;
    /**
     * <code>optional string passport_type_id = 2;</code>
     *
     * <pre>
     * id паспорта типа оборудования
     * </pre>
     */
    public boolean hasPassportTypeId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string passport_type_id = 2;</code>
     *
     * <pre>
     * id паспорта типа оборудования
     * </pre>
     */
    public java.lang.String getPassportTypeId() {
      java.lang.Object ref = passportTypeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          passportTypeId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string passport_type_id = 2;</code>
     *
     * <pre>
     * id паспорта типа оборудования
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPassportTypeIdBytes() {
      java.lang.Object ref = passportTypeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        passportTypeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .almaz2.domain_objects.FieldTypeValue values = 3;
    public static final int VALUES_FIELD_NUMBER = 3;
    private java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> values_;
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики оборудования КО (значения)
     * </pre>
     */
    public java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> getValuesList() {
      return values_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики оборудования КО (значения)
     * </pre>
     */
    public java.util.List<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
        getValuesOrBuilderList() {
      return values_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики оборудования КО (значения)
     * </pre>
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики оборудования КО (значения)
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValues(int index) {
      return values_.get(index);
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
     *
     * <pre>
     * характеристики оборудования КО (значения)
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValuesOrBuilder(
        int index) {
      return values_.get(index);
    }

    // optional .almaz2.domain_objects.MultiLanguageString display_name = 4;
    public static final int DISPLAY_NAME_FIELD_NUMBER = 4;
    private ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString displayName_;
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
     *
     * <pre>
     * имя оборудования КО
     * </pre>
     */
    public boolean hasDisplayName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
     *
     * <pre>
     * имя оборудования КО
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString getDisplayName() {
      return displayName_;
    }
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
     *
     * <pre>
     * имя оборудования КО
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder getDisplayNameOrBuilder() {
      return displayName_;
    }

    // repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;
    public static final int SETTINGS_VALUES_FIELD_NUMBER = 6;
    private java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> settingsValues_;
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
     *
     * <pre>
     * значения настроек оборудования
     * </pre>
     */
    public java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> getSettingsValuesList() {
      return settingsValues_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
     *
     * <pre>
     * значения настроек оборудования
     * </pre>
     */
    public java.util.List<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
        getSettingsValuesOrBuilderList() {
      return settingsValues_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
     *
     * <pre>
     * значения настроек оборудования
     * </pre>
     */
    public int getSettingsValuesCount() {
      return settingsValues_.size();
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
     *
     * <pre>
     * значения настроек оборудования
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getSettingsValues(int index) {
      return settingsValues_.get(index);
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
     *
     * <pre>
     * значения настроек оборудования
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getSettingsValuesOrBuilder(
        int index) {
      return settingsValues_.get(index);
    }

    // repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;
    public static final int INPUTS_FIELD_NUMBER = 7;
    private java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput> inputs_;
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
     *
     * <pre>
     * логический вход оборудования
     * </pre>
     */
    public java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput> getInputsList() {
      return inputs_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
     *
     * <pre>
     * логический вход оборудования
     * </pre>
     */
    public java.util.List<? extends ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInputOrBuilder> 
        getInputsOrBuilderList() {
      return inputs_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
     *
     * <pre>
     * логический вход оборудования
     * </pre>
     */
    public int getInputsCount() {
      return inputs_.size();
    }
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
     *
     * <pre>
     * логический вход оборудования
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput getInputs(int index) {
      return inputs_.get(index);
    }
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
     *
     * <pre>
     * логический вход оборудования
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInputOrBuilder getInputsOrBuilder(
        int index) {
      return inputs_.get(index);
    }

    // repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;
    public static final int OUTPUTS_FIELD_NUMBER = 8;
    private java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput> outputs_;
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
     *
     * <pre>
     * логический выход оборудования
     * </pre>
     */
    public java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput> getOutputsList() {
      return outputs_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
     *
     * <pre>
     * логический выход оборудования
     * </pre>
     */
    public java.util.List<? extends ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutputOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
     *
     * <pre>
     * логический выход оборудования
     * </pre>
     */
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
     *
     * <pre>
     * логический выход оборудования
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
     *
     * <pre>
     * логический выход оборудования
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutputOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }

    // repeated uint32 interface_passport_id = 10;
    public static final int INTERFACE_PASSPORT_ID_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> interfacePassportId_;
    /**
     * <code>repeated uint32 interface_passport_id = 10;</code>
     *
     * <pre>
     * список паспортов интерфейсов, поддерживаемых оборудованием
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getInterfacePassportIdList() {
      return interfacePassportId_;
    }
    /**
     * <code>repeated uint32 interface_passport_id = 10;</code>
     *
     * <pre>
     * список паспортов интерфейсов, поддерживаемых оборудованием
     * </pre>
     */
    public int getInterfacePassportIdCount() {
      return interfacePassportId_.size();
    }
    /**
     * <code>repeated uint32 interface_passport_id = 10;</code>
     *
     * <pre>
     * список паспортов интерфейсов, поддерживаемых оборудованием
     * </pre>
     */
    public int getInterfacePassportId(int index) {
      return interfacePassportId_.get(index);
    }

    private void initFields() {
      id_ = 0;
      passportTypeId_ = "";
      values_ = java.util.Collections.emptyList();
      displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
      settingsValues_ = java.util.Collections.emptyList();
      inputs_ = java.util.Collections.emptyList();
      outputs_ = java.util.Collections.emptyList();
      interfacePassportId_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasDisplayName()) {
        if (!getDisplayName().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPassportTypeIdBytes());
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeMessage(3, values_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, displayName_);
      }
      for (int i = 0; i < settingsValues_.size(); i++) {
        output.writeMessage(6, settingsValues_.get(i));
      }
      for (int i = 0; i < inputs_.size(); i++) {
        output.writeMessage(7, inputs_.get(i));
      }
      for (int i = 0; i < outputs_.size(); i++) {
        output.writeMessage(8, outputs_.get(i));
      }
      for (int i = 0; i < interfacePassportId_.size(); i++) {
        output.writeUInt32(10, interfacePassportId_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPassportTypeIdBytes());
      }
      for (int i = 0; i < values_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, values_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, displayName_);
      }
      for (int i = 0; i < settingsValues_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, settingsValues_.get(i));
      }
      for (int i = 0; i < inputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, inputs_.get(i));
      }
      for (int i = 0; i < outputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, outputs_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < interfacePassportId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(interfacePassportId_.get(i));
        }
        size += dataSize;
        size += 1 * getInterfacePassportIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.domain_objects.ControlObjectEquipment}
     *
     * <pre>
     * оборудование КО
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipmentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.internal_static_almaz2_domain_objects_ControlObjectEquipment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.internal_static_almaz2_domain_objects_ControlObjectEquipment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment.class, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment.Builder.class);
      }

      // Construct using ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValuesFieldBuilder();
          getDisplayNameFieldBuilder();
          getSettingsValuesFieldBuilder();
          getInputsFieldBuilder();
          getOutputsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        passportTypeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          valuesBuilder_.clear();
        }
        if (displayNameBuilder_ == null) {
          displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
        } else {
          displayNameBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (settingsValuesBuilder_ == null) {
          settingsValues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          settingsValuesBuilder_.clear();
        }
        if (inputsBuilder_ == null) {
          inputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          inputsBuilder_.clear();
        }
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          outputsBuilder_.clear();
        }
        interfacePassportId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.internal_static_almaz2_domain_objects_ControlObjectEquipment_descriptor;
      }

      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment getDefaultInstanceForType() {
        return ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment.getDefaultInstance();
      }

      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment build() {
        ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment buildPartial() {
        ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment result = new ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.passportTypeId_ = passportTypeId_;
        if (valuesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            values_ = java.util.Collections.unmodifiableList(values_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.values_ = values_;
        } else {
          result.values_ = valuesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        if (displayNameBuilder_ == null) {
          result.displayName_ = displayName_;
        } else {
          result.displayName_ = displayNameBuilder_.build();
        }
        if (settingsValuesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            settingsValues_ = java.util.Collections.unmodifiableList(settingsValues_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.settingsValues_ = settingsValues_;
        } else {
          result.settingsValues_ = settingsValuesBuilder_.build();
        }
        if (inputsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            inputs_ = java.util.Collections.unmodifiableList(inputs_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.inputs_ = inputs_;
        } else {
          result.inputs_ = inputsBuilder_.build();
        }
        if (outputsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            outputs_ = java.util.Collections.unmodifiableList(outputs_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.outputs_ = outputs_;
        } else {
          result.outputs_ = outputsBuilder_.build();
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          interfacePassportId_ = java.util.Collections.unmodifiableList(interfacePassportId_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.interfacePassportId_ = interfacePassportId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment) {
          return mergeFrom((ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment other) {
        if (other == ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasPassportTypeId()) {
          bitField0_ |= 0x00000002;
          passportTypeId_ = other.passportTypeId_;
          onChanged();
        }
        if (valuesBuilder_ == null) {
          if (!other.values_.isEmpty()) {
            if (values_.isEmpty()) {
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureValuesIsMutable();
              values_.addAll(other.values_);
            }
            onChanged();
          }
        } else {
          if (!other.values_.isEmpty()) {
            if (valuesBuilder_.isEmpty()) {
              valuesBuilder_.dispose();
              valuesBuilder_ = null;
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000004);
              valuesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValuesFieldBuilder() : null;
            } else {
              valuesBuilder_.addAllMessages(other.values_);
            }
          }
        }
        if (other.hasDisplayName()) {
          mergeDisplayName(other.getDisplayName());
        }
        if (settingsValuesBuilder_ == null) {
          if (!other.settingsValues_.isEmpty()) {
            if (settingsValues_.isEmpty()) {
              settingsValues_ = other.settingsValues_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureSettingsValuesIsMutable();
              settingsValues_.addAll(other.settingsValues_);
            }
            onChanged();
          }
        } else {
          if (!other.settingsValues_.isEmpty()) {
            if (settingsValuesBuilder_.isEmpty()) {
              settingsValuesBuilder_.dispose();
              settingsValuesBuilder_ = null;
              settingsValues_ = other.settingsValues_;
              bitField0_ = (bitField0_ & ~0x00000010);
              settingsValuesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSettingsValuesFieldBuilder() : null;
            } else {
              settingsValuesBuilder_.addAllMessages(other.settingsValues_);
            }
          }
        }
        if (inputsBuilder_ == null) {
          if (!other.inputs_.isEmpty()) {
            if (inputs_.isEmpty()) {
              inputs_ = other.inputs_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureInputsIsMutable();
              inputs_.addAll(other.inputs_);
            }
            onChanged();
          }
        } else {
          if (!other.inputs_.isEmpty()) {
            if (inputsBuilder_.isEmpty()) {
              inputsBuilder_.dispose();
              inputsBuilder_ = null;
              inputs_ = other.inputs_;
              bitField0_ = (bitField0_ & ~0x00000020);
              inputsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInputsFieldBuilder() : null;
            } else {
              inputsBuilder_.addAllMessages(other.inputs_);
            }
          }
        }
        if (outputsBuilder_ == null) {
          if (!other.outputs_.isEmpty()) {
            if (outputs_.isEmpty()) {
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureOutputsIsMutable();
              outputs_.addAll(other.outputs_);
            }
            onChanged();
          }
        } else {
          if (!other.outputs_.isEmpty()) {
            if (outputsBuilder_.isEmpty()) {
              outputsBuilder_.dispose();
              outputsBuilder_ = null;
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000040);
              outputsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOutputsFieldBuilder() : null;
            } else {
              outputsBuilder_.addAllMessages(other.outputs_);
            }
          }
        }
        if (!other.interfacePassportId_.isEmpty()) {
          if (interfacePassportId_.isEmpty()) {
            interfacePassportId_ = other.interfacePassportId_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureInterfacePassportIdIsMutable();
            interfacePassportId_.addAll(other.interfacePassportId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasDisplayName()) {
          if (!getDisplayName().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.ControlObjectEquipment) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 id = 1;
      private int id_ ;
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id оборудования КО (уникальный в контексте конкретного паспорта типа КО)
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id оборудования КО (уникальный в контексте конкретного паспорта типа КО)
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id оборудования КО (уникальный в контексте конкретного паспорта типа КО)
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 id = 1;</code>
       *
       * <pre>
       * id оборудования КО (уникальный в контексте конкретного паспорта типа КО)
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      // optional string passport_type_id = 2;
      private java.lang.Object passportTypeId_ = "";
      /**
       * <code>optional string passport_type_id = 2;</code>
       *
       * <pre>
       * id паспорта типа оборудования
       * </pre>
       */
      public boolean hasPassportTypeId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string passport_type_id = 2;</code>
       *
       * <pre>
       * id паспорта типа оборудования
       * </pre>
       */
      public java.lang.String getPassportTypeId() {
        java.lang.Object ref = passportTypeId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          passportTypeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string passport_type_id = 2;</code>
       *
       * <pre>
       * id паспорта типа оборудования
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPassportTypeIdBytes() {
        java.lang.Object ref = passportTypeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          passportTypeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string passport_type_id = 2;</code>
       *
       * <pre>
       * id паспорта типа оборудования
       * </pre>
       */
      public Builder setPassportTypeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        passportTypeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string passport_type_id = 2;</code>
       *
       * <pre>
       * id паспорта типа оборудования
       * </pre>
       */
      public Builder clearPassportTypeId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        passportTypeId_ = getDefaultInstance().getPassportTypeId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string passport_type_id = 2;</code>
       *
       * <pre>
       * id паспорта типа оборудования
       * </pre>
       */
      public Builder setPassportTypeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        passportTypeId_ = value;
        onChanged();
        return this;
      }

      // repeated .almaz2.domain_objects.FieldTypeValue values = 3;
      private java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> values_ =
        java.util.Collections.emptyList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          values_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue>(values_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> valuesBuilder_;

      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> getValuesList() {
        if (valuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(values_);
        } else {
          return valuesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public int getValuesCount() {
        if (valuesBuilder_ == null) {
          return values_.size();
        } else {
          return valuesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getValues(int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);
        } else {
          return valuesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public Builder setValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.set(index, value);
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public Builder setValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.set(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public Builder addValues(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public Builder addValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(index, value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public Builder addValues(
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public Builder addValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> values) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          super.addAll(values, values_);
          onChanged();
        } else {
          valuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public Builder clearValues() {
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public Builder removeValues(int index) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.remove(index);
          onChanged();
        } else {
          valuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder getValuesBuilder(
          int index) {
        return getValuesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getValuesOrBuilder(
          int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);  } else {
          return valuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public java.util.List<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
           getValuesOrBuilderList() {
        if (valuesBuilder_ != null) {
          return valuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(values_);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder addValuesBuilder() {
        return getValuesFieldBuilder().addBuilder(
            ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder addValuesBuilder(
          int index) {
        return getValuesFieldBuilder().addBuilder(
            index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue values = 3;</code>
       *
       * <pre>
       * характеристики оборудования КО (значения)
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder> 
           getValuesBuilderList() {
        return getValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
          getValuesFieldBuilder() {
        if (valuesBuilder_ == null) {
          valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder>(
                  values_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          values_ = null;
        }
        return valuesBuilder_;
      }

      // optional .almaz2.domain_objects.MultiLanguageString display_name = 4;
      private ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder> displayNameBuilder_;
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя оборудования КО
       * </pre>
       */
      public boolean hasDisplayName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя оборудования КО
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString getDisplayName() {
        if (displayNameBuilder_ == null) {
          return displayName_;
        } else {
          return displayNameBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя оборудования КО
       * </pre>
       */
      public Builder setDisplayName(ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString value) {
        if (displayNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          displayName_ = value;
          onChanged();
        } else {
          displayNameBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя оборудования КО
       * </pre>
       */
      public Builder setDisplayName(
          ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder builderForValue) {
        if (displayNameBuilder_ == null) {
          displayName_ = builderForValue.build();
          onChanged();
        } else {
          displayNameBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя оборудования КО
       * </pre>
       */
      public Builder mergeDisplayName(ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString value) {
        if (displayNameBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              displayName_ != ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance()) {
            displayName_ =
              ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.newBuilder(displayName_).mergeFrom(value).buildPartial();
          } else {
            displayName_ = value;
          }
          onChanged();
        } else {
          displayNameBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя оборудования КО
       * </pre>
       */
      public Builder clearDisplayName() {
        if (displayNameBuilder_ == null) {
          displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
          onChanged();
        } else {
          displayNameBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя оборудования КО
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder getDisplayNameBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDisplayNameFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя оборудования КО
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder getDisplayNameOrBuilder() {
        if (displayNameBuilder_ != null) {
          return displayNameBuilder_.getMessageOrBuilder();
        } else {
          return displayName_;
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя оборудования КО
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder> 
          getDisplayNameFieldBuilder() {
        if (displayNameBuilder_ == null) {
          displayNameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder>(
                  displayName_,
                  getParentForChildren(),
                  isClean());
          displayName_ = null;
        }
        return displayNameBuilder_;
      }

      // repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;
      private java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> settingsValues_ =
        java.util.Collections.emptyList();
      private void ensureSettingsValuesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          settingsValues_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue>(settingsValues_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> settingsValuesBuilder_;

      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> getSettingsValuesList() {
        if (settingsValuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(settingsValues_);
        } else {
          return settingsValuesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public int getSettingsValuesCount() {
        if (settingsValuesBuilder_ == null) {
          return settingsValues_.size();
        } else {
          return settingsValuesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue getSettingsValues(int index) {
        if (settingsValuesBuilder_ == null) {
          return settingsValues_.get(index);
        } else {
          return settingsValuesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public Builder setSettingsValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
        if (settingsValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSettingsValuesIsMutable();
          settingsValues_.set(index, value);
          onChanged();
        } else {
          settingsValuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public Builder setSettingsValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder builderForValue) {
        if (settingsValuesBuilder_ == null) {
          ensureSettingsValuesIsMutable();
          settingsValues_.set(index, builderForValue.build());
          onChanged();
        } else {
          settingsValuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public Builder addSettingsValues(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
        if (settingsValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSettingsValuesIsMutable();
          settingsValues_.add(value);
          onChanged();
        } else {
          settingsValuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public Builder addSettingsValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue value) {
        if (settingsValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSettingsValuesIsMutable();
          settingsValues_.add(index, value);
          onChanged();
        } else {
          settingsValuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public Builder addSettingsValues(
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder builderForValue) {
        if (settingsValuesBuilder_ == null) {
          ensureSettingsValuesIsMutable();
          settingsValues_.add(builderForValue.build());
          onChanged();
        } else {
          settingsValuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public Builder addSettingsValues(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder builderForValue) {
        if (settingsValuesBuilder_ == null) {
          ensureSettingsValuesIsMutable();
          settingsValues_.add(index, builderForValue.build());
          onChanged();
        } else {
          settingsValuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public Builder addAllSettingsValues(
          java.lang.Iterable<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue> values) {
        if (settingsValuesBuilder_ == null) {
          ensureSettingsValuesIsMutable();
          super.addAll(values, settingsValues_);
          onChanged();
        } else {
          settingsValuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public Builder clearSettingsValues() {
        if (settingsValuesBuilder_ == null) {
          settingsValues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          settingsValuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public Builder removeSettingsValues(int index) {
        if (settingsValuesBuilder_ == null) {
          ensureSettingsValuesIsMutable();
          settingsValues_.remove(index);
          onChanged();
        } else {
          settingsValuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder getSettingsValuesBuilder(
          int index) {
        return getSettingsValuesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder getSettingsValuesOrBuilder(
          int index) {
        if (settingsValuesBuilder_ == null) {
          return settingsValues_.get(index);  } else {
          return settingsValuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public java.util.List<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
           getSettingsValuesOrBuilderList() {
        if (settingsValuesBuilder_ != null) {
          return settingsValuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(settingsValues_);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder addSettingsValuesBuilder() {
        return getSettingsValuesFieldBuilder().addBuilder(
            ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder addSettingsValuesBuilder(
          int index) {
        return getSettingsValuesFieldBuilder().addBuilder(
            index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeValue settings_values = 6;</code>
       *
       * <pre>
       * значения настроек оборудования
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder> 
           getSettingsValuesBuilderList() {
        return getSettingsValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder> 
          getSettingsValuesFieldBuilder() {
        if (settingsValuesBuilder_ == null) {
          settingsValuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValue.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeValueOrBuilder>(
                  settingsValues_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          settingsValues_ = null;
        }
        return settingsValuesBuilder_;
      }

      // repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;
      private java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput> inputs_ =
        java.util.Collections.emptyList();
      private void ensureInputsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          inputs_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput>(inputs_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.Builder, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInputOrBuilder> inputsBuilder_;

      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput> getInputsList() {
        if (inputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inputs_);
        } else {
          return inputsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public int getInputsCount() {
        if (inputsBuilder_ == null) {
          return inputs_.size();
        } else {
          return inputsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput getInputs(int index) {
        if (inputsBuilder_ == null) {
          return inputs_.get(index);
        } else {
          return inputsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public Builder setInputs(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.set(index, value);
          onChanged();
        } else {
          inputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public Builder setInputs(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public Builder addInputs(ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.add(value);
          onChanged();
        } else {
          inputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public Builder addInputs(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.add(index, value);
          onChanged();
        } else {
          inputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public Builder addInputs(
          ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.add(builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public Builder addInputs(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public Builder addAllInputs(
          java.lang.Iterable<? extends ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput> values) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          super.addAll(values, inputs_);
          onChanged();
        } else {
          inputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public Builder clearInputs() {
        if (inputsBuilder_ == null) {
          inputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          inputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public Builder removeInputs(int index) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.remove(index);
          onChanged();
        } else {
          inputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.Builder getInputsBuilder(
          int index) {
        return getInputsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInputOrBuilder getInputsOrBuilder(
          int index) {
        if (inputsBuilder_ == null) {
          return inputs_.get(index);  } else {
          return inputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public java.util.List<? extends ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInputOrBuilder> 
           getInputsOrBuilderList() {
        if (inputsBuilder_ != null) {
          return inputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inputs_);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.Builder addInputsBuilder() {
        return getInputsFieldBuilder().addBuilder(
            ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.Builder addInputsBuilder(
          int index) {
        return getInputsFieldBuilder().addBuilder(
            index, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalInput inputs = 7;</code>
       *
       * <pre>
       * логический вход оборудования
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.Builder> 
           getInputsBuilderList() {
        return getInputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.Builder, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInputOrBuilder> 
          getInputsFieldBuilder() {
        if (inputsBuilder_ == null) {
          inputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInput.Builder, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalInputOrBuilder>(
                  inputs_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          inputs_ = null;
        }
        return inputsBuilder_;
      }

      // repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;
      private java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput> outputs_ =
        java.util.Collections.emptyList();
      private void ensureOutputsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          outputs_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput>(outputs_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.Builder, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutputOrBuilder> outputsBuilder_;

      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput> getOutputsList() {
        if (outputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputs_);
        } else {
          return outputsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public int getOutputsCount() {
        if (outputsBuilder_ == null) {
          return outputs_.size();
        } else {
          return outputsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput getOutputs(int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);
        } else {
          return outputsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public Builder setOutputs(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.set(index, value);
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public Builder setOutputs(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public Builder addOutputs(ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public Builder addOutputs(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(index, value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public Builder addOutputs(
          ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public Builder addOutputs(
          int index, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput> values) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          super.addAll(values, outputs_);
          onChanged();
        } else {
          outputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public Builder clearOutputs() {
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public Builder removeOutputs(int index) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.remove(index);
          onChanged();
        } else {
          outputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.Builder getOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutputOrBuilder getOutputsOrBuilder(
          int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);  } else {
          return outputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public java.util.List<? extends ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutputOrBuilder> 
           getOutputsOrBuilderList() {
        if (outputsBuilder_ != null) {
          return outputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputs_);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.Builder addOutputsBuilder() {
        return getOutputsFieldBuilder().addBuilder(
            ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.Builder addOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().addBuilder(
            index, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.EquipmentLogicalOutput outputs = 8;</code>
       *
       * <pre>
       * логический выход оборудования
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.Builder> 
           getOutputsBuilderList() {
        return getOutputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.Builder, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutputOrBuilder> 
          getOutputsFieldBuilder() {
        if (outputsBuilder_ == null) {
          outputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutput.Builder, ru.kodos.almaz2.domain_objects.ControlObjectEquipmentClass.EquipmentLogicalOutputOrBuilder>(
                  outputs_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          outputs_ = null;
        }
        return outputsBuilder_;
      }

      // repeated uint32 interface_passport_id = 10;
      private java.util.List<java.lang.Integer> interfacePassportId_ = java.util.Collections.emptyList();
      private void ensureInterfacePassportIdIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          interfacePassportId_ = new java.util.ArrayList<java.lang.Integer>(interfacePassportId_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated uint32 interface_passport_id = 10;</code>
       *
       * <pre>
       * список паспортов интерфейсов, поддерживаемых оборудованием
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getInterfacePassportIdList() {
        return java.util.Collections.unmodifiableList(interfacePassportId_);
      }
      /**
       * <code>repeated uint32 interface_passport_id = 10;</code>
       *
       * <pre>
       * список паспортов интерфейсов, поддерживаемых оборудованием
       * </pre>
       */
      public int getInterfacePassportIdCount() {
        return interfacePassportId_.size();
      }
      /**
       * <code>repeated uint32 interface_passport_id = 10;</code>
       *
       * <pre>
       * список паспортов интерфейсов, поддерживаемых оборудованием
       * </pre>
       */
      public int getInterfacePassportId(int index) {
        return interfacePassportId_.get(index);
      }
      /**
       * <code>repeated uint32 interface_passport_id = 10;</code>
       *
       * <pre>
       * список паспортов интерфейсов, поддерживаемых оборудованием
       * </pre>
       */
      public Builder setInterfacePassportId(
          int index, int value) {
        ensureInterfacePassportIdIsMutable();
        interfacePassportId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 interface_passport_id = 10;</code>
       *
       * <pre>
       * список паспортов интерфейсов, поддерживаемых оборудованием
       * </pre>
       */
      public Builder addInterfacePassportId(int value) {
        ensureInterfacePassportIdIsMutable();
        interfacePassportId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 interface_passport_id = 10;</code>
       *
       * <pre>
       * список паспортов интерфейсов, поддерживаемых оборудованием
       * </pre>
       */
      public Builder addAllInterfacePassportId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInterfacePassportIdIsMutable();
        super.addAll(values, interfacePassportId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 interface_passport_id = 10;</code>
       *
       * <pre>
       * список паспортов интерфейсов, поддерживаемых оборудованием
       * </pre>
       */
      public Builder clearInterfacePassportId() {
        interfacePassportId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.domain_objects.ControlObjectEquipment)
    }

    static {
      defaultInstance = new ControlObjectEquipment(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.domain_objects.ControlObjectEquipment)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_domain_objects_EquipmentLogicalInput_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_domain_objects_EquipmentLogicalInput_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_domain_objects_EquipmentLogicalOutput_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_domain_objects_EquipmentLogicalOutput_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_domain_objects_ControlObjectEquipment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_domain_objects_ControlObjectEquipment_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036control_object_equipment.proto\022\025almaz2" +
      ".domain_objects\032\021field_types.proto\032\020prop" +
      "erties.proto\"Z\n\025EquipmentLogicalInput\022\n\n" +
      "\002id\030\001 \001(\r\0225\n\006values\030\003 \003(\0132%.almaz2.domai" +
      "n_objects.FieldTypeValue\"[\n\026EquipmentLog" +
      "icalOutput\022\n\n\002id\030\001 \001(\r\0225\n\006values\030\003 \003(\0132%" +
      ".almaz2.domain_objects.FieldTypeValue\"\224\003" +
      "\n\026ControlObjectEquipment\022\n\n\002id\030\001 \001(\r\022\030\n\020" +
      "passport_type_id\030\002 \001(\t\0225\n\006values\030\003 \003(\0132%" +
      ".almaz2.domain_objects.FieldTypeValue\022@\n",
      "\014display_name\030\004 \001(\0132*.almaz2.domain_obje" +
      "cts.MultiLanguageString\022>\n\017settings_valu" +
      "es\030\006 \003(\0132%.almaz2.domain_objects.FieldTy" +
      "peValue\022<\n\006inputs\030\007 \003(\0132,.almaz2.domain_" +
      "objects.EquipmentLogicalInput\022>\n\007outputs" +
      "\030\010 \003(\0132-.almaz2.domain_objects.Equipment" +
      "LogicalOutput\022\035\n\025interface_passport_id\030\n" +
      " \003(\rB=\n\036ru.kodos.almaz2.domain_objectsB\033" +
      "ControlObjectEquipmentClass"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_almaz2_domain_objects_EquipmentLogicalInput_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_almaz2_domain_objects_EquipmentLogicalInput_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_domain_objects_EquipmentLogicalInput_descriptor,
              new java.lang.String[] { "Id", "Values", });
          internal_static_almaz2_domain_objects_EquipmentLogicalOutput_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_almaz2_domain_objects_EquipmentLogicalOutput_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_domain_objects_EquipmentLogicalOutput_descriptor,
              new java.lang.String[] { "Id", "Values", });
          internal_static_almaz2_domain_objects_ControlObjectEquipment_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_almaz2_domain_objects_ControlObjectEquipment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_domain_objects_ControlObjectEquipment_descriptor,
              new java.lang.String[] { "Id", "PassportTypeId", "Values", "DisplayName", "SettingsValues", "Inputs", "Outputs", "InterfacePassportId", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ru.kodos.almaz2.domain_objects.FieldTypesClass.getDescriptor(),
          ru.kodos.almaz2.domain_objects.PropertiesClass.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
