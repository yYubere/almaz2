// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: equipment_logical_input_passport_type.proto

package ru.kodos.almaz2.domain_objects;

public final class EquipmentLogicalInputPassportTypeClass {
  private EquipmentLogicalInputPassportTypeClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface EquipmentLogicalInputPassportTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string type_id = 1;
    /**
     * <code>optional string type_id = 1;</code>
     *
     * <pre>
     * id паспорта типа логического входа оборудования
     * </pre>
     */
    boolean hasTypeId();
    /**
     * <code>optional string type_id = 1;</code>
     *
     * <pre>
     * id паспорта типа логического входа оборудования
     * </pre>
     */
    java.lang.String getTypeId();
    /**
     * <code>optional string type_id = 1;</code>
     *
     * <pre>
     * id паспорта типа логического входа оборудования
     * </pre>
     */
    com.google.protobuf.ByteString
        getTypeIdBytes();

    // optional string base_type_id = 2;
    /**
     * <code>optional string base_type_id = 2;</code>
     *
     * <pre>
     * для унификации с другими паспортами типов.
     * Конкретно в этом паспорте типа не используется.
     * </pre>
     */
    boolean hasBaseTypeId();
    /**
     * <code>optional string base_type_id = 2;</code>
     *
     * <pre>
     * для унификации с другими паспортами типов.
     * Конкретно в этом паспорте типа не используется.
     * </pre>
     */
    java.lang.String getBaseTypeId();
    /**
     * <code>optional string base_type_id = 2;</code>
     *
     * <pre>
     * для унификации с другими паспортами типов.
     * Конкретно в этом паспорте типа не используется.
     * </pre>
     */
    com.google.protobuf.ByteString
        getBaseTypeIdBytes();

    // optional .almaz2.domain_objects.MultiLanguageString display_name = 4;
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
     *
     * <pre>
     * имя типа
     * </pre>
     */
    boolean hasDisplayName();
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
     *
     * <pre>
     * имя типа
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString getDisplayName();
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
     *
     * <pre>
     * имя типа
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder getDisplayNameOrBuilder();

    // optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;
    /**
     * <code>optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;</code>
     *
     * <pre>
     * описание состояния логического входа оборудования
     * </pre>
     */
    boolean hasStateDescription();
    /**
     * <code>optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;</code>
     *
     * <pre>
     * описание состояния логического входа оборудования
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription getStateDescription();
    /**
     * <code>optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;</code>
     *
     * <pre>
     * описание состояния логического входа оборудования
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescriptionOrBuilder getStateDescriptionOrBuilder();
  }
  /**
   * Protobuf type {@code almaz2.domain_objects.EquipmentLogicalInputPassportType}
   *
   * <pre>
   * паспорт типа логического входа оборудования
   * </pre>
   */
  public static final class EquipmentLogicalInputPassportType extends
      com.google.protobuf.GeneratedMessage
      implements EquipmentLogicalInputPassportTypeOrBuilder {
    // Use EquipmentLogicalInputPassportType.newBuilder() to construct.
    private EquipmentLogicalInputPassportType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EquipmentLogicalInputPassportType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EquipmentLogicalInputPassportType defaultInstance;
    public static EquipmentLogicalInputPassportType getDefaultInstance() {
      return defaultInstance;
    }

    public EquipmentLogicalInputPassportType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EquipmentLogicalInputPassportType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              typeId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              baseTypeId_ = input.readBytes();
              break;
            }
            case 34: {
              ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = displayName_.toBuilder();
              }
              displayName_ = input.readMessage(ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(displayName_);
                displayName_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 42: {
              ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = stateDescription_.toBuilder();
              }
              stateDescription_ = input.readMessage(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stateDescription_);
                stateDescription_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.internal_static_almaz2_domain_objects_EquipmentLogicalInputPassportType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.internal_static_almaz2_domain_objects_EquipmentLogicalInputPassportType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType.class, ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType.Builder.class);
    }

    public static com.google.protobuf.Parser<EquipmentLogicalInputPassportType> PARSER =
        new com.google.protobuf.AbstractParser<EquipmentLogicalInputPassportType>() {
      public EquipmentLogicalInputPassportType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EquipmentLogicalInputPassportType(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EquipmentLogicalInputPassportType> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string type_id = 1;
    public static final int TYPE_ID_FIELD_NUMBER = 1;
    private java.lang.Object typeId_;
    /**
     * <code>optional string type_id = 1;</code>
     *
     * <pre>
     * id паспорта типа логического входа оборудования
     * </pre>
     */
    public boolean hasTypeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string type_id = 1;</code>
     *
     * <pre>
     * id паспорта типа логического входа оборудования
     * </pre>
     */
    public java.lang.String getTypeId() {
      java.lang.Object ref = typeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          typeId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string type_id = 1;</code>
     *
     * <pre>
     * id паспорта типа логического входа оборудования
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTypeIdBytes() {
      java.lang.Object ref = typeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        typeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string base_type_id = 2;
    public static final int BASE_TYPE_ID_FIELD_NUMBER = 2;
    private java.lang.Object baseTypeId_;
    /**
     * <code>optional string base_type_id = 2;</code>
     *
     * <pre>
     * для унификации с другими паспортами типов.
     * Конкретно в этом паспорте типа не используется.
     * </pre>
     */
    public boolean hasBaseTypeId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string base_type_id = 2;</code>
     *
     * <pre>
     * для унификации с другими паспортами типов.
     * Конкретно в этом паспорте типа не используется.
     * </pre>
     */
    public java.lang.String getBaseTypeId() {
      java.lang.Object ref = baseTypeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          baseTypeId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string base_type_id = 2;</code>
     *
     * <pre>
     * для унификации с другими паспортами типов.
     * Конкретно в этом паспорте типа не используется.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getBaseTypeIdBytes() {
      java.lang.Object ref = baseTypeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        baseTypeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .almaz2.domain_objects.MultiLanguageString display_name = 4;
    public static final int DISPLAY_NAME_FIELD_NUMBER = 4;
    private ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString displayName_;
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
     *
     * <pre>
     * имя типа
     * </pre>
     */
    public boolean hasDisplayName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
     *
     * <pre>
     * имя типа
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString getDisplayName() {
      return displayName_;
    }
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
     *
     * <pre>
     * имя типа
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder getDisplayNameOrBuilder() {
      return displayName_;
    }

    // optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;
    public static final int STATE_DESCRIPTION_FIELD_NUMBER = 5;
    private ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription stateDescription_;
    /**
     * <code>optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;</code>
     *
     * <pre>
     * описание состояния логического входа оборудования
     * </pre>
     */
    public boolean hasStateDescription() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;</code>
     *
     * <pre>
     * описание состояния логического входа оборудования
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription getStateDescription() {
      return stateDescription_;
    }
    /**
     * <code>optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;</code>
     *
     * <pre>
     * описание состояния логического входа оборудования
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescriptionOrBuilder getStateDescriptionOrBuilder() {
      return stateDescription_;
    }

    private void initFields() {
      typeId_ = "";
      baseTypeId_ = "";
      displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
      stateDescription_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasDisplayName()) {
        if (!getDisplayName().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasStateDescription()) {
        if (!getStateDescription().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTypeIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getBaseTypeIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, displayName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, stateDescription_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTypeIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getBaseTypeIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, displayName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, stateDescription_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.domain_objects.EquipmentLogicalInputPassportType}
     *
     * <pre>
     * паспорт типа логического входа оборудования
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.internal_static_almaz2_domain_objects_EquipmentLogicalInputPassportType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.internal_static_almaz2_domain_objects_EquipmentLogicalInputPassportType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType.class, ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType.Builder.class);
      }

      // Construct using ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDisplayNameFieldBuilder();
          getStateDescriptionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        typeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        baseTypeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (displayNameBuilder_ == null) {
          displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
        } else {
          displayNameBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (stateDescriptionBuilder_ == null) {
          stateDescription_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.getDefaultInstance();
        } else {
          stateDescriptionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.internal_static_almaz2_domain_objects_EquipmentLogicalInputPassportType_descriptor;
      }

      public ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType getDefaultInstanceForType() {
        return ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType.getDefaultInstance();
      }

      public ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType build() {
        ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType buildPartial() {
        ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType result = new ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.typeId_ = typeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.baseTypeId_ = baseTypeId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (displayNameBuilder_ == null) {
          result.displayName_ = displayName_;
        } else {
          result.displayName_ = displayNameBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (stateDescriptionBuilder_ == null) {
          result.stateDescription_ = stateDescription_;
        } else {
          result.stateDescription_ = stateDescriptionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType) {
          return mergeFrom((ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType other) {
        if (other == ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType.getDefaultInstance()) return this;
        if (other.hasTypeId()) {
          bitField0_ |= 0x00000001;
          typeId_ = other.typeId_;
          onChanged();
        }
        if (other.hasBaseTypeId()) {
          bitField0_ |= 0x00000002;
          baseTypeId_ = other.baseTypeId_;
          onChanged();
        }
        if (other.hasDisplayName()) {
          mergeDisplayName(other.getDisplayName());
        }
        if (other.hasStateDescription()) {
          mergeStateDescription(other.getStateDescription());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasDisplayName()) {
          if (!getDisplayName().isInitialized()) {
            
            return false;
          }
        }
        if (hasStateDescription()) {
          if (!getStateDescription().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.domain_objects.EquipmentLogicalInputPassportTypeClass.EquipmentLogicalInputPassportType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string type_id = 1;
      private java.lang.Object typeId_ = "";
      /**
       * <code>optional string type_id = 1;</code>
       *
       * <pre>
       * id паспорта типа логического входа оборудования
       * </pre>
       */
      public boolean hasTypeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string type_id = 1;</code>
       *
       * <pre>
       * id паспорта типа логического входа оборудования
       * </pre>
       */
      public java.lang.String getTypeId() {
        java.lang.Object ref = typeId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          typeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string type_id = 1;</code>
       *
       * <pre>
       * id паспорта типа логического входа оборудования
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTypeIdBytes() {
        java.lang.Object ref = typeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          typeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string type_id = 1;</code>
       *
       * <pre>
       * id паспорта типа логического входа оборудования
       * </pre>
       */
      public Builder setTypeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        typeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string type_id = 1;</code>
       *
       * <pre>
       * id паспорта типа логического входа оборудования
       * </pre>
       */
      public Builder clearTypeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        typeId_ = getDefaultInstance().getTypeId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string type_id = 1;</code>
       *
       * <pre>
       * id паспорта типа логического входа оборудования
       * </pre>
       */
      public Builder setTypeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        typeId_ = value;
        onChanged();
        return this;
      }

      // optional string base_type_id = 2;
      private java.lang.Object baseTypeId_ = "";
      /**
       * <code>optional string base_type_id = 2;</code>
       *
       * <pre>
       * для унификации с другими паспортами типов.
       * Конкретно в этом паспорте типа не используется.
       * </pre>
       */
      public boolean hasBaseTypeId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string base_type_id = 2;</code>
       *
       * <pre>
       * для унификации с другими паспортами типов.
       * Конкретно в этом паспорте типа не используется.
       * </pre>
       */
      public java.lang.String getBaseTypeId() {
        java.lang.Object ref = baseTypeId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          baseTypeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string base_type_id = 2;</code>
       *
       * <pre>
       * для унификации с другими паспортами типов.
       * Конкретно в этом паспорте типа не используется.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBaseTypeIdBytes() {
        java.lang.Object ref = baseTypeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          baseTypeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string base_type_id = 2;</code>
       *
       * <pre>
       * для унификации с другими паспортами типов.
       * Конкретно в этом паспорте типа не используется.
       * </pre>
       */
      public Builder setBaseTypeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        baseTypeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string base_type_id = 2;</code>
       *
       * <pre>
       * для унификации с другими паспортами типов.
       * Конкретно в этом паспорте типа не используется.
       * </pre>
       */
      public Builder clearBaseTypeId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        baseTypeId_ = getDefaultInstance().getBaseTypeId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string base_type_id = 2;</code>
       *
       * <pre>
       * для унификации с другими паспортами типов.
       * Конкретно в этом паспорте типа не используется.
       * </pre>
       */
      public Builder setBaseTypeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        baseTypeId_ = value;
        onChanged();
        return this;
      }

      // optional .almaz2.domain_objects.MultiLanguageString display_name = 4;
      private ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder> displayNameBuilder_;
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public boolean hasDisplayName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString getDisplayName() {
        if (displayNameBuilder_ == null) {
          return displayName_;
        } else {
          return displayNameBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public Builder setDisplayName(ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString value) {
        if (displayNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          displayName_ = value;
          onChanged();
        } else {
          displayNameBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public Builder setDisplayName(
          ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder builderForValue) {
        if (displayNameBuilder_ == null) {
          displayName_ = builderForValue.build();
          onChanged();
        } else {
          displayNameBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public Builder mergeDisplayName(ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString value) {
        if (displayNameBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              displayName_ != ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance()) {
            displayName_ =
              ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.newBuilder(displayName_).mergeFrom(value).buildPartial();
          } else {
            displayName_ = value;
          }
          onChanged();
        } else {
          displayNameBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public Builder clearDisplayName() {
        if (displayNameBuilder_ == null) {
          displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
          onChanged();
        } else {
          displayNameBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder getDisplayNameBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDisplayNameFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder getDisplayNameOrBuilder() {
        if (displayNameBuilder_ != null) {
          return displayNameBuilder_.getMessageOrBuilder();
        } else {
          return displayName_;
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 4;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder> 
          getDisplayNameFieldBuilder() {
        if (displayNameBuilder_ == null) {
          displayNameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder>(
                  displayName_,
                  getParentForChildren(),
                  isClean());
          displayName_ = null;
        }
        return displayNameBuilder_;
      }

      // optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;
      private ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription stateDescription_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescriptionOrBuilder> stateDescriptionBuilder_;
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;</code>
       *
       * <pre>
       * описание состояния логического входа оборудования
       * </pre>
       */
      public boolean hasStateDescription() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;</code>
       *
       * <pre>
       * описание состояния логического входа оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription getStateDescription() {
        if (stateDescriptionBuilder_ == null) {
          return stateDescription_;
        } else {
          return stateDescriptionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;</code>
       *
       * <pre>
       * описание состояния логического входа оборудования
       * </pre>
       */
      public Builder setStateDescription(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription value) {
        if (stateDescriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stateDescription_ = value;
          onChanged();
        } else {
          stateDescriptionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;</code>
       *
       * <pre>
       * описание состояния логического входа оборудования
       * </pre>
       */
      public Builder setStateDescription(
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder builderForValue) {
        if (stateDescriptionBuilder_ == null) {
          stateDescription_ = builderForValue.build();
          onChanged();
        } else {
          stateDescriptionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;</code>
       *
       * <pre>
       * описание состояния логического входа оборудования
       * </pre>
       */
      public Builder mergeStateDescription(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription value) {
        if (stateDescriptionBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              stateDescription_ != ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.getDefaultInstance()) {
            stateDescription_ =
              ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.newBuilder(stateDescription_).mergeFrom(value).buildPartial();
          } else {
            stateDescription_ = value;
          }
          onChanged();
        } else {
          stateDescriptionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;</code>
       *
       * <pre>
       * описание состояния логического входа оборудования
       * </pre>
       */
      public Builder clearStateDescription() {
        if (stateDescriptionBuilder_ == null) {
          stateDescription_ = ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.getDefaultInstance();
          onChanged();
        } else {
          stateDescriptionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;</code>
       *
       * <pre>
       * описание состояния логического входа оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder getStateDescriptionBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getStateDescriptionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;</code>
       *
       * <pre>
       * описание состояния логического входа оборудования
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescriptionOrBuilder getStateDescriptionOrBuilder() {
        if (stateDescriptionBuilder_ != null) {
          return stateDescriptionBuilder_.getMessageOrBuilder();
        } else {
          return stateDescription_;
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.FieldTypeDescription state_description = 5;</code>
       *
       * <pre>
       * описание состояния логического входа оборудования
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescriptionOrBuilder> 
          getStateDescriptionFieldBuilder() {
        if (stateDescriptionBuilder_ == null) {
          stateDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescriptionOrBuilder>(
                  stateDescription_,
                  getParentForChildren(),
                  isClean());
          stateDescription_ = null;
        }
        return stateDescriptionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.domain_objects.EquipmentLogicalInputPassportType)
    }

    static {
      defaultInstance = new EquipmentLogicalInputPassportType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.domain_objects.EquipmentLogicalInputPassportType)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_domain_objects_EquipmentLogicalInputPassportType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_domain_objects_EquipmentLogicalInputPassportType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+equipment_logical_input_passport_type." +
      "proto\022\025almaz2.domain_objects\032\021field_type" +
      "s.proto\032\020properties.proto\"\324\001\n!EquipmentL" +
      "ogicalInputPassportType\022\017\n\007type_id\030\001 \001(\t" +
      "\022\024\n\014base_type_id\030\002 \001(\t\022@\n\014display_name\030\004" +
      " \001(\0132*.almaz2.domain_objects.MultiLangua" +
      "geString\022F\n\021state_description\030\005 \001(\0132+.al" +
      "maz2.domain_objects.FieldTypeDescription" +
      "BH\n\036ru.kodos.almaz2.domain_objectsB&Equi" +
      "pmentLogicalInputPassportTypeClass"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_almaz2_domain_objects_EquipmentLogicalInputPassportType_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_almaz2_domain_objects_EquipmentLogicalInputPassportType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_domain_objects_EquipmentLogicalInputPassportType_descriptor,
              new java.lang.String[] { "TypeId", "BaseTypeId", "DisplayName", "StateDescription", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ru.kodos.almaz2.domain_objects.FieldTypesClass.getDescriptor(),
          ru.kodos.almaz2.domain_objects.PropertiesClass.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
