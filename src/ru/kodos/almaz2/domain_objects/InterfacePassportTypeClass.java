// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: interface_passport_type.proto

package ru.kodos.almaz2.domain_objects;

public final class InterfacePassportTypeClass {
  private InterfacePassportTypeClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface InterfacePassportTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string type_id = 1;
    /**
     * <code>optional string type_id = 1;</code>
     *
     * <pre>
     * id паспорта типа интерфейса
     * </pre>
     */
    boolean hasTypeId();
    /**
     * <code>optional string type_id = 1;</code>
     *
     * <pre>
     * id паспорта типа интерфейса
     * </pre>
     */
    java.lang.String getTypeId();
    /**
     * <code>optional string type_id = 1;</code>
     *
     * <pre>
     * id паспорта типа интерфейса
     * </pre>
     */
    com.google.protobuf.ByteString
        getTypeIdBytes();

    // optional string base_type_id = 2;
    /**
     * <code>optional string base_type_id = 2;</code>
     *
     * <pre>
     * id базового типа интерфейса
     * </pre>
     */
    boolean hasBaseTypeId();
    /**
     * <code>optional string base_type_id = 2;</code>
     *
     * <pre>
     * id базового типа интерфейса
     * </pre>
     */
    java.lang.String getBaseTypeId();
    /**
     * <code>optional string base_type_id = 2;</code>
     *
     * <pre>
     * id базового типа интерфейса
     * </pre>
     */
    com.google.protobuf.ByteString
        getBaseTypeIdBytes();

    // optional .almaz2.domain_objects.MultiLanguageString display_name = 3;
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
     *
     * <pre>
     * имя типа
     * </pre>
     */
    boolean hasDisplayName();
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
     *
     * <pre>
     * имя типа
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString getDisplayName();
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
     *
     * <pre>
     * имя типа
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder getDisplayNameOrBuilder();

    // repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
     *
     * <pre>
     * описания идентификационных данных
     * </pre>
     */
    java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription> 
        getIdentificationDescriptionsList();
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
     *
     * <pre>
     * описания идентификационных данных
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription getIdentificationDescriptions(int index);
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
     *
     * <pre>
     * описания идентификационных данных
     * </pre>
     */
    int getIdentificationDescriptionsCount();
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
     *
     * <pre>
     * описания идентификационных данных
     * </pre>
     */
    java.util.List<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescriptionOrBuilder> 
        getIdentificationDescriptionsOrBuilderList();
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
     *
     * <pre>
     * описания идентификационных данных
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescriptionOrBuilder getIdentificationDescriptionsOrBuilder(
        int index);

    // optional .almaz2.domain_objects.Properties properties = 5;
    /**
     * <code>optional .almaz2.domain_objects.Properties properties = 5;</code>
     *
     * <pre>
     * блок характеристик
     * </pre>
     */
    boolean hasProperties();
    /**
     * <code>optional .almaz2.domain_objects.Properties properties = 5;</code>
     *
     * <pre>
     * блок характеристик
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.Properties getProperties();
    /**
     * <code>optional .almaz2.domain_objects.Properties properties = 5;</code>
     *
     * <pre>
     * блок характеристик
     * </pre>
     */
    ru.kodos.almaz2.domain_objects.PropertiesClass.PropertiesOrBuilder getPropertiesOrBuilder();
  }
  /**
   * Protobuf type {@code almaz2.domain_objects.InterfacePassportType}
   *
   * <pre>
   * паспорт типа интерфейса
   * </pre>
   */
  public static final class InterfacePassportType extends
      com.google.protobuf.GeneratedMessage
      implements InterfacePassportTypeOrBuilder {
    // Use InterfacePassportType.newBuilder() to construct.
    private InterfacePassportType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InterfacePassportType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InterfacePassportType defaultInstance;
    public static InterfacePassportType getDefaultInstance() {
      return defaultInstance;
    }

    public InterfacePassportType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InterfacePassportType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              typeId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              baseTypeId_ = input.readBytes();
              break;
            }
            case 26: {
              ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = displayName_.toBuilder();
              }
              displayName_ = input.readMessage(ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(displayName_);
                displayName_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                identificationDescriptions_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription>();
                mutable_bitField0_ |= 0x00000008;
              }
              identificationDescriptions_.add(input.readMessage(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              ru.kodos.almaz2.domain_objects.PropertiesClass.Properties.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = properties_.toBuilder();
              }
              properties_ = input.readMessage(ru.kodos.almaz2.domain_objects.PropertiesClass.Properties.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(properties_);
                properties_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          identificationDescriptions_ = java.util.Collections.unmodifiableList(identificationDescriptions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.internal_static_almaz2_domain_objects_InterfacePassportType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.internal_static_almaz2_domain_objects_InterfacePassportType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType.class, ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType.Builder.class);
    }

    public static com.google.protobuf.Parser<InterfacePassportType> PARSER =
        new com.google.protobuf.AbstractParser<InterfacePassportType>() {
      public InterfacePassportType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InterfacePassportType(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InterfacePassportType> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string type_id = 1;
    public static final int TYPE_ID_FIELD_NUMBER = 1;
    private java.lang.Object typeId_;
    /**
     * <code>optional string type_id = 1;</code>
     *
     * <pre>
     * id паспорта типа интерфейса
     * </pre>
     */
    public boolean hasTypeId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string type_id = 1;</code>
     *
     * <pre>
     * id паспорта типа интерфейса
     * </pre>
     */
    public java.lang.String getTypeId() {
      java.lang.Object ref = typeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          typeId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string type_id = 1;</code>
     *
     * <pre>
     * id паспорта типа интерфейса
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTypeIdBytes() {
      java.lang.Object ref = typeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        typeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string base_type_id = 2;
    public static final int BASE_TYPE_ID_FIELD_NUMBER = 2;
    private java.lang.Object baseTypeId_;
    /**
     * <code>optional string base_type_id = 2;</code>
     *
     * <pre>
     * id базового типа интерфейса
     * </pre>
     */
    public boolean hasBaseTypeId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string base_type_id = 2;</code>
     *
     * <pre>
     * id базового типа интерфейса
     * </pre>
     */
    public java.lang.String getBaseTypeId() {
      java.lang.Object ref = baseTypeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          baseTypeId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string base_type_id = 2;</code>
     *
     * <pre>
     * id базового типа интерфейса
     * </pre>
     */
    public com.google.protobuf.ByteString
        getBaseTypeIdBytes() {
      java.lang.Object ref = baseTypeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        baseTypeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .almaz2.domain_objects.MultiLanguageString display_name = 3;
    public static final int DISPLAY_NAME_FIELD_NUMBER = 3;
    private ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString displayName_;
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
     *
     * <pre>
     * имя типа
     * </pre>
     */
    public boolean hasDisplayName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
     *
     * <pre>
     * имя типа
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString getDisplayName() {
      return displayName_;
    }
    /**
     * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
     *
     * <pre>
     * имя типа
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder getDisplayNameOrBuilder() {
      return displayName_;
    }

    // repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;
    public static final int IDENTIFICATION_DESCRIPTIONS_FIELD_NUMBER = 4;
    private java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription> identificationDescriptions_;
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
     *
     * <pre>
     * описания идентификационных данных
     * </pre>
     */
    public java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription> getIdentificationDescriptionsList() {
      return identificationDescriptions_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
     *
     * <pre>
     * описания идентификационных данных
     * </pre>
     */
    public java.util.List<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescriptionOrBuilder> 
        getIdentificationDescriptionsOrBuilderList() {
      return identificationDescriptions_;
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
     *
     * <pre>
     * описания идентификационных данных
     * </pre>
     */
    public int getIdentificationDescriptionsCount() {
      return identificationDescriptions_.size();
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
     *
     * <pre>
     * описания идентификационных данных
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription getIdentificationDescriptions(int index) {
      return identificationDescriptions_.get(index);
    }
    /**
     * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
     *
     * <pre>
     * описания идентификационных данных
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescriptionOrBuilder getIdentificationDescriptionsOrBuilder(
        int index) {
      return identificationDescriptions_.get(index);
    }

    // optional .almaz2.domain_objects.Properties properties = 5;
    public static final int PROPERTIES_FIELD_NUMBER = 5;
    private ru.kodos.almaz2.domain_objects.PropertiesClass.Properties properties_;
    /**
     * <code>optional .almaz2.domain_objects.Properties properties = 5;</code>
     *
     * <pre>
     * блок характеристик
     * </pre>
     */
    public boolean hasProperties() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .almaz2.domain_objects.Properties properties = 5;</code>
     *
     * <pre>
     * блок характеристик
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.Properties getProperties() {
      return properties_;
    }
    /**
     * <code>optional .almaz2.domain_objects.Properties properties = 5;</code>
     *
     * <pre>
     * блок характеристик
     * </pre>
     */
    public ru.kodos.almaz2.domain_objects.PropertiesClass.PropertiesOrBuilder getPropertiesOrBuilder() {
      return properties_;
    }

    private void initFields() {
      typeId_ = "";
      baseTypeId_ = "";
      displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
      identificationDescriptions_ = java.util.Collections.emptyList();
      properties_ = ru.kodos.almaz2.domain_objects.PropertiesClass.Properties.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasDisplayName()) {
        if (!getDisplayName().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getIdentificationDescriptionsCount(); i++) {
        if (!getIdentificationDescriptions(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasProperties()) {
        if (!getProperties().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTypeIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getBaseTypeIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, displayName_);
      }
      for (int i = 0; i < identificationDescriptions_.size(); i++) {
        output.writeMessage(4, identificationDescriptions_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, properties_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTypeIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getBaseTypeIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, displayName_);
      }
      for (int i = 0; i < identificationDescriptions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, identificationDescriptions_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, properties_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code almaz2.domain_objects.InterfacePassportType}
     *
     * <pre>
     * паспорт типа интерфейса
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.internal_static_almaz2_domain_objects_InterfacePassportType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.internal_static_almaz2_domain_objects_InterfacePassportType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType.class, ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType.Builder.class);
      }

      // Construct using ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDisplayNameFieldBuilder();
          getIdentificationDescriptionsFieldBuilder();
          getPropertiesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        typeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        baseTypeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (displayNameBuilder_ == null) {
          displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
        } else {
          displayNameBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (identificationDescriptionsBuilder_ == null) {
          identificationDescriptions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          identificationDescriptionsBuilder_.clear();
        }
        if (propertiesBuilder_ == null) {
          properties_ = ru.kodos.almaz2.domain_objects.PropertiesClass.Properties.getDefaultInstance();
        } else {
          propertiesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.internal_static_almaz2_domain_objects_InterfacePassportType_descriptor;
      }

      public ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType getDefaultInstanceForType() {
        return ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType.getDefaultInstance();
      }

      public ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType build() {
        ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType buildPartial() {
        ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType result = new ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.typeId_ = typeId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.baseTypeId_ = baseTypeId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (displayNameBuilder_ == null) {
          result.displayName_ = displayName_;
        } else {
          result.displayName_ = displayNameBuilder_.build();
        }
        if (identificationDescriptionsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            identificationDescriptions_ = java.util.Collections.unmodifiableList(identificationDescriptions_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.identificationDescriptions_ = identificationDescriptions_;
        } else {
          result.identificationDescriptions_ = identificationDescriptionsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        if (propertiesBuilder_ == null) {
          result.properties_ = properties_;
        } else {
          result.properties_ = propertiesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType) {
          return mergeFrom((ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType other) {
        if (other == ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType.getDefaultInstance()) return this;
        if (other.hasTypeId()) {
          bitField0_ |= 0x00000001;
          typeId_ = other.typeId_;
          onChanged();
        }
        if (other.hasBaseTypeId()) {
          bitField0_ |= 0x00000002;
          baseTypeId_ = other.baseTypeId_;
          onChanged();
        }
        if (other.hasDisplayName()) {
          mergeDisplayName(other.getDisplayName());
        }
        if (identificationDescriptionsBuilder_ == null) {
          if (!other.identificationDescriptions_.isEmpty()) {
            if (identificationDescriptions_.isEmpty()) {
              identificationDescriptions_ = other.identificationDescriptions_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureIdentificationDescriptionsIsMutable();
              identificationDescriptions_.addAll(other.identificationDescriptions_);
            }
            onChanged();
          }
        } else {
          if (!other.identificationDescriptions_.isEmpty()) {
            if (identificationDescriptionsBuilder_.isEmpty()) {
              identificationDescriptionsBuilder_.dispose();
              identificationDescriptionsBuilder_ = null;
              identificationDescriptions_ = other.identificationDescriptions_;
              bitField0_ = (bitField0_ & ~0x00000008);
              identificationDescriptionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getIdentificationDescriptionsFieldBuilder() : null;
            } else {
              identificationDescriptionsBuilder_.addAllMessages(other.identificationDescriptions_);
            }
          }
        }
        if (other.hasProperties()) {
          mergeProperties(other.getProperties());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasDisplayName()) {
          if (!getDisplayName().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getIdentificationDescriptionsCount(); i++) {
          if (!getIdentificationDescriptions(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasProperties()) {
          if (!getProperties().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ru.kodos.almaz2.domain_objects.InterfacePassportTypeClass.InterfacePassportType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string type_id = 1;
      private java.lang.Object typeId_ = "";
      /**
       * <code>optional string type_id = 1;</code>
       *
       * <pre>
       * id паспорта типа интерфейса
       * </pre>
       */
      public boolean hasTypeId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string type_id = 1;</code>
       *
       * <pre>
       * id паспорта типа интерфейса
       * </pre>
       */
      public java.lang.String getTypeId() {
        java.lang.Object ref = typeId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          typeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string type_id = 1;</code>
       *
       * <pre>
       * id паспорта типа интерфейса
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTypeIdBytes() {
        java.lang.Object ref = typeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          typeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string type_id = 1;</code>
       *
       * <pre>
       * id паспорта типа интерфейса
       * </pre>
       */
      public Builder setTypeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        typeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string type_id = 1;</code>
       *
       * <pre>
       * id паспорта типа интерфейса
       * </pre>
       */
      public Builder clearTypeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        typeId_ = getDefaultInstance().getTypeId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string type_id = 1;</code>
       *
       * <pre>
       * id паспорта типа интерфейса
       * </pre>
       */
      public Builder setTypeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        typeId_ = value;
        onChanged();
        return this;
      }

      // optional string base_type_id = 2;
      private java.lang.Object baseTypeId_ = "";
      /**
       * <code>optional string base_type_id = 2;</code>
       *
       * <pre>
       * id базового типа интерфейса
       * </pre>
       */
      public boolean hasBaseTypeId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string base_type_id = 2;</code>
       *
       * <pre>
       * id базового типа интерфейса
       * </pre>
       */
      public java.lang.String getBaseTypeId() {
        java.lang.Object ref = baseTypeId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          baseTypeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string base_type_id = 2;</code>
       *
       * <pre>
       * id базового типа интерфейса
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBaseTypeIdBytes() {
        java.lang.Object ref = baseTypeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          baseTypeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string base_type_id = 2;</code>
       *
       * <pre>
       * id базового типа интерфейса
       * </pre>
       */
      public Builder setBaseTypeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        baseTypeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string base_type_id = 2;</code>
       *
       * <pre>
       * id базового типа интерфейса
       * </pre>
       */
      public Builder clearBaseTypeId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        baseTypeId_ = getDefaultInstance().getBaseTypeId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string base_type_id = 2;</code>
       *
       * <pre>
       * id базового типа интерфейса
       * </pre>
       */
      public Builder setBaseTypeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        baseTypeId_ = value;
        onChanged();
        return this;
      }

      // optional .almaz2.domain_objects.MultiLanguageString display_name = 3;
      private ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder> displayNameBuilder_;
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public boolean hasDisplayName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString getDisplayName() {
        if (displayNameBuilder_ == null) {
          return displayName_;
        } else {
          return displayNameBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public Builder setDisplayName(ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString value) {
        if (displayNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          displayName_ = value;
          onChanged();
        } else {
          displayNameBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public Builder setDisplayName(
          ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder builderForValue) {
        if (displayNameBuilder_ == null) {
          displayName_ = builderForValue.build();
          onChanged();
        } else {
          displayNameBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public Builder mergeDisplayName(ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString value) {
        if (displayNameBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              displayName_ != ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance()) {
            displayName_ =
              ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.newBuilder(displayName_).mergeFrom(value).buildPartial();
          } else {
            displayName_ = value;
          }
          onChanged();
        } else {
          displayNameBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public Builder clearDisplayName() {
        if (displayNameBuilder_ == null) {
          displayName_ = ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.getDefaultInstance();
          onChanged();
        } else {
          displayNameBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder getDisplayNameBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDisplayNameFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder getDisplayNameOrBuilder() {
        if (displayNameBuilder_ != null) {
          return displayNameBuilder_.getMessageOrBuilder();
        } else {
          return displayName_;
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.MultiLanguageString display_name = 3;</code>
       *
       * <pre>
       * имя типа
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder> 
          getDisplayNameFieldBuilder() {
        if (displayNameBuilder_ == null) {
          displayNameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageString.Builder, ru.kodos.almaz2.domain_objects.FieldTypesClass.MultiLanguageStringOrBuilder>(
                  displayName_,
                  getParentForChildren(),
                  isClean());
          displayName_ = null;
        }
        return displayNameBuilder_;
      }

      // repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;
      private java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription> identificationDescriptions_ =
        java.util.Collections.emptyList();
      private void ensureIdentificationDescriptionsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          identificationDescriptions_ = new java.util.ArrayList<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription>(identificationDescriptions_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescriptionOrBuilder> identificationDescriptionsBuilder_;

      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription> getIdentificationDescriptionsList() {
        if (identificationDescriptionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(identificationDescriptions_);
        } else {
          return identificationDescriptionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public int getIdentificationDescriptionsCount() {
        if (identificationDescriptionsBuilder_ == null) {
          return identificationDescriptions_.size();
        } else {
          return identificationDescriptionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription getIdentificationDescriptions(int index) {
        if (identificationDescriptionsBuilder_ == null) {
          return identificationDescriptions_.get(index);
        } else {
          return identificationDescriptionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public Builder setIdentificationDescriptions(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription value) {
        if (identificationDescriptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdentificationDescriptionsIsMutable();
          identificationDescriptions_.set(index, value);
          onChanged();
        } else {
          identificationDescriptionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public Builder setIdentificationDescriptions(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder builderForValue) {
        if (identificationDescriptionsBuilder_ == null) {
          ensureIdentificationDescriptionsIsMutable();
          identificationDescriptions_.set(index, builderForValue.build());
          onChanged();
        } else {
          identificationDescriptionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public Builder addIdentificationDescriptions(ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription value) {
        if (identificationDescriptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdentificationDescriptionsIsMutable();
          identificationDescriptions_.add(value);
          onChanged();
        } else {
          identificationDescriptionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public Builder addIdentificationDescriptions(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription value) {
        if (identificationDescriptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIdentificationDescriptionsIsMutable();
          identificationDescriptions_.add(index, value);
          onChanged();
        } else {
          identificationDescriptionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public Builder addIdentificationDescriptions(
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder builderForValue) {
        if (identificationDescriptionsBuilder_ == null) {
          ensureIdentificationDescriptionsIsMutable();
          identificationDescriptions_.add(builderForValue.build());
          onChanged();
        } else {
          identificationDescriptionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public Builder addIdentificationDescriptions(
          int index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder builderForValue) {
        if (identificationDescriptionsBuilder_ == null) {
          ensureIdentificationDescriptionsIsMutable();
          identificationDescriptions_.add(index, builderForValue.build());
          onChanged();
        } else {
          identificationDescriptionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public Builder addAllIdentificationDescriptions(
          java.lang.Iterable<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription> values) {
        if (identificationDescriptionsBuilder_ == null) {
          ensureIdentificationDescriptionsIsMutable();
          super.addAll(values, identificationDescriptions_);
          onChanged();
        } else {
          identificationDescriptionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public Builder clearIdentificationDescriptions() {
        if (identificationDescriptionsBuilder_ == null) {
          identificationDescriptions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          identificationDescriptionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public Builder removeIdentificationDescriptions(int index) {
        if (identificationDescriptionsBuilder_ == null) {
          ensureIdentificationDescriptionsIsMutable();
          identificationDescriptions_.remove(index);
          onChanged();
        } else {
          identificationDescriptionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder getIdentificationDescriptionsBuilder(
          int index) {
        return getIdentificationDescriptionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescriptionOrBuilder getIdentificationDescriptionsOrBuilder(
          int index) {
        if (identificationDescriptionsBuilder_ == null) {
          return identificationDescriptions_.get(index);  } else {
          return identificationDescriptionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public java.util.List<? extends ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescriptionOrBuilder> 
           getIdentificationDescriptionsOrBuilderList() {
        if (identificationDescriptionsBuilder_ != null) {
          return identificationDescriptionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(identificationDescriptions_);
        }
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder addIdentificationDescriptionsBuilder() {
        return getIdentificationDescriptionsFieldBuilder().addBuilder(
            ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder addIdentificationDescriptionsBuilder(
          int index) {
        return getIdentificationDescriptionsFieldBuilder().addBuilder(
            index, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.getDefaultInstance());
      }
      /**
       * <code>repeated .almaz2.domain_objects.FieldTypeDescription identification_descriptions = 4;</code>
       *
       * <pre>
       * описания идентификационных данных
       * </pre>
       */
      public java.util.List<ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder> 
           getIdentificationDescriptionsBuilderList() {
        return getIdentificationDescriptionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescriptionOrBuilder> 
          getIdentificationDescriptionsFieldBuilder() {
        if (identificationDescriptionsBuilder_ == null) {
          identificationDescriptionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescription.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.FieldTypeDescriptionOrBuilder>(
                  identificationDescriptions_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          identificationDescriptions_ = null;
        }
        return identificationDescriptionsBuilder_;
      }

      // optional .almaz2.domain_objects.Properties properties = 5;
      private ru.kodos.almaz2.domain_objects.PropertiesClass.Properties properties_ = ru.kodos.almaz2.domain_objects.PropertiesClass.Properties.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.Properties, ru.kodos.almaz2.domain_objects.PropertiesClass.Properties.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.PropertiesOrBuilder> propertiesBuilder_;
      /**
       * <code>optional .almaz2.domain_objects.Properties properties = 5;</code>
       *
       * <pre>
       * блок характеристик
       * </pre>
       */
      public boolean hasProperties() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .almaz2.domain_objects.Properties properties = 5;</code>
       *
       * <pre>
       * блок характеристик
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.Properties getProperties() {
        if (propertiesBuilder_ == null) {
          return properties_;
        } else {
          return propertiesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.Properties properties = 5;</code>
       *
       * <pre>
       * блок характеристик
       * </pre>
       */
      public Builder setProperties(ru.kodos.almaz2.domain_objects.PropertiesClass.Properties value) {
        if (propertiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          properties_ = value;
          onChanged();
        } else {
          propertiesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.Properties properties = 5;</code>
       *
       * <pre>
       * блок характеристик
       * </pre>
       */
      public Builder setProperties(
          ru.kodos.almaz2.domain_objects.PropertiesClass.Properties.Builder builderForValue) {
        if (propertiesBuilder_ == null) {
          properties_ = builderForValue.build();
          onChanged();
        } else {
          propertiesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.Properties properties = 5;</code>
       *
       * <pre>
       * блок характеристик
       * </pre>
       */
      public Builder mergeProperties(ru.kodos.almaz2.domain_objects.PropertiesClass.Properties value) {
        if (propertiesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              properties_ != ru.kodos.almaz2.domain_objects.PropertiesClass.Properties.getDefaultInstance()) {
            properties_ =
              ru.kodos.almaz2.domain_objects.PropertiesClass.Properties.newBuilder(properties_).mergeFrom(value).buildPartial();
          } else {
            properties_ = value;
          }
          onChanged();
        } else {
          propertiesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.Properties properties = 5;</code>
       *
       * <pre>
       * блок характеристик
       * </pre>
       */
      public Builder clearProperties() {
        if (propertiesBuilder_ == null) {
          properties_ = ru.kodos.almaz2.domain_objects.PropertiesClass.Properties.getDefaultInstance();
          onChanged();
        } else {
          propertiesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .almaz2.domain_objects.Properties properties = 5;</code>
       *
       * <pre>
       * блок характеристик
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.Properties.Builder getPropertiesBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getPropertiesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .almaz2.domain_objects.Properties properties = 5;</code>
       *
       * <pre>
       * блок характеристик
       * </pre>
       */
      public ru.kodos.almaz2.domain_objects.PropertiesClass.PropertiesOrBuilder getPropertiesOrBuilder() {
        if (propertiesBuilder_ != null) {
          return propertiesBuilder_.getMessageOrBuilder();
        } else {
          return properties_;
        }
      }
      /**
       * <code>optional .almaz2.domain_objects.Properties properties = 5;</code>
       *
       * <pre>
       * блок характеристик
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          ru.kodos.almaz2.domain_objects.PropertiesClass.Properties, ru.kodos.almaz2.domain_objects.PropertiesClass.Properties.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.PropertiesOrBuilder> 
          getPropertiesFieldBuilder() {
        if (propertiesBuilder_ == null) {
          propertiesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              ru.kodos.almaz2.domain_objects.PropertiesClass.Properties, ru.kodos.almaz2.domain_objects.PropertiesClass.Properties.Builder, ru.kodos.almaz2.domain_objects.PropertiesClass.PropertiesOrBuilder>(
                  properties_,
                  getParentForChildren(),
                  isClean());
          properties_ = null;
        }
        return propertiesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:almaz2.domain_objects.InterfacePassportType)
    }

    static {
      defaultInstance = new InterfacePassportType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:almaz2.domain_objects.InterfacePassportType)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_almaz2_domain_objects_InterfacePassportType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_almaz2_domain_objects_InterfacePassportType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\035interface_passport_type.proto\022\025almaz2." +
      "domain_objects\032\021field_types.proto\032\020prope" +
      "rties.proto\"\211\002\n\025InterfacePassportType\022\017\n" +
      "\007type_id\030\001 \001(\t\022\024\n\014base_type_id\030\002 \001(\t\022@\n\014" +
      "display_name\030\003 \001(\0132*.almaz2.domain_objec" +
      "ts.MultiLanguageString\022P\n\033identification" +
      "_descriptions\030\004 \003(\0132+.almaz2.domain_obje" +
      "cts.FieldTypeDescription\0225\n\nproperties\030\005" +
      " \001(\0132!.almaz2.domain_objects.PropertiesB" +
      "<\n\036ru.kodos.almaz2.domain_objectsB\032Inter",
      "facePassportTypeClass"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_almaz2_domain_objects_InterfacePassportType_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_almaz2_domain_objects_InterfacePassportType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_almaz2_domain_objects_InterfacePassportType_descriptor,
              new java.lang.String[] { "TypeId", "BaseTypeId", "DisplayName", "IdentificationDescriptions", "Properties", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ru.kodos.almaz2.domain_objects.FieldTypesClass.getDescriptor(),
          ru.kodos.almaz2.domain_objects.PropertiesClass.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
